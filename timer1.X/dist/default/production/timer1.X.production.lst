

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jun 10 16:42:32 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     	FNCALL	_main,_dispLCD
  1024                           	FNCALL	_main,_dispLCD_init
  1025                           	FNCALL	_main,_dispLCD_num
  1026                           	FNCALL	_main,_initLEDs
  1027                           	FNCALL	_main,_initTimer1
  1028                           	FNCALL	_main,_setT1
  1029                           	FNCALL	_main,_setT1limite
  1030                           	FNCALL	_main,_statusled1
  1031                           	FNCALL	_initTimer1,_setT1limite
  1032                           	FNCALL	_dispLCD_num,___awdiv
  1033                           	FNCALL	_dispLCD_num,___awmod
  1034                           	FNCALL	_dispLCD_num,_dispLCD_dataReg
  1035                           	FNCALL	_dispLCD_num,_dispLCD_lincol
  1036                           	FNCALL	_dispLCD_init,_delay
  1037                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  1038                           	FNCALL	_dispLCD,_dispLCD_dataReg
  1039                           	FNCALL	_dispLCD,_dispLCD_lincol
  1040                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  1041                           	FNROOT	_main
  1042                           	FNCALL	_irq,_intt1_1ms
  1043                           	FNCALL	intlevel1,_irq
  1044                           	global	intlevel1
  1045                           	FNROOT	intlevel1
  1046                           	global	_contador
  1047                           	global	_t1cont
  1048                           	global	_t1final
  1049                           	global	_LCDbits
  1050                           psect	text0,local,class=CODE,delta=2,merge=1
  1051                           global __ptext0
  1052                           __ptext0:
  1053  0000                     _LCDbits	set	8
  1054  0008                     	global	_T1CONbits
  1055                           _T1CONbits	set	0x10
  1056  0010                     	global	_INTCONbits
  1057                           _INTCONbits	set	0xB
  1058  000B                     	global	_TMR1L
  1059                           _TMR1L	set	0xE
  1060  000E                     	global	_TMR1H
  1061                           _TMR1H	set	0xF
  1062  000F                     	global	_PIR1bits
  1063                           _PIR1bits	set	0xC
  1064  000C                     	global	_PORTCbits
  1065                           _PORTCbits	set	0x7
  1066  0007                     	global	_RCSTAbits
  1067                           _RCSTAbits	set	0x18
  1068  0018                     	global	_TRISDbits
  1069                           _TRISDbits	set	0x88
  1070  0088                     	global	_PIE1bits
  1071                           _PIE1bits	set	0x8C
  1072  008C                     	global	_TRISCbits
  1073                           _TRISCbits	set	0x87
  1074  0087                     psect	strings,class=STRING,delta=2,noexec
  1075                           global __pstrings
  1076                           __pstrings:
  1077  03AD                     stringtab:
  1078  03AD                     	global    __stringtab
  1079                           __stringtab:
  1080  03AD                     ;	String table - string pointers are 1 byte each
  1081                           stringcode:stringdir:
  1082  03AD                     movlw high(stringdir)
      + 03AD                     stringdir:	
  1083  03AD  3003               movwf pclath
  1084  03AE  008A               movf fsr,w
  1085  03AF  0804               incf fsr
  1086  03B0  0A84               	addwf pc
  1087  03B1  0782               	global __stringbase
  1088                           __stringbase:
  1089  03B2                     	retlw	0
  1090  03B2  3400               psect	strings
  1091                           	global    __end_of__stringtab
  1092                           __end_of__stringtab:
  1093  03B3                     	
  1094                           STR_1:	
  1095  03B3                     	retlw	67	;'C'
  1096  03B3  3443               	retlw	111	;'o'
  1097  03B4  346F               	retlw	110	;'n'
  1098  03B5  346E               	retlw	116	;'t'
  1099  03B6  3474               	retlw	97	;'a'
  1100  03B7  3461               	retlw	100	;'d'
  1101  03B8  3464               	retlw	111	;'o'
  1102  03B9  346F               	retlw	114	;'r'
  1103  03BA  3472               	retlw	58	;':'
  1104  03BB  343A               	retlw	32	;' '
  1105  03BC  3420               	retlw	32	;' '
  1106  03BD  3420               	retlw	32	;' '
  1107  03BE  3420               	retlw	32	;' '
  1108  03BF  3420               	retlw	32	;' '
  1109  03C0  3420               	retlw	32	;' '
  1110  03C1  3420               	retlw	32	;' '
  1111  03C2  3420               	retlw	0
  1112  03C3  3400               psect	strings
  1113                           ; #config settings
  1114                           global __CFG_FOSC$INTRC_NOCLKOUT
  1115                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1116  0000                     global __CFG_WDTE$OFF
  1117                           __CFG_WDTE$OFF equ 0x0
  1118  0000                     global __CFG_MCLRE$OFF
  1119                           __CFG_MCLRE$OFF equ 0x0
  1120  0000                     global __CFG_LVP$OFF
  1121                           __CFG_LVP$OFF equ 0x0
  1122  0000                     	file	"C:\Users\21193634\AppData\Local\Temp\shuo."
  1123                           	line	#
  1124                           psect cinit,class=CODE,delta=2
  1125                           global start_initialization
  1126                           start_initialization:
  1127  000F                     
  1128                           global __initialization
  1129                           __initialization:
  1130  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1131                           global __pbssCOMMON
  1132                           __pbssCOMMON:
  1133  0079                     _contador:
  1134  0079                            ds      2
  1135  0079                     
  1136                           psect	bssBANK0,class=BANK0,space=1,noexec
  1137                           global __pbssBANK0
  1138                           __pbssBANK0:
  1139  0032                     _t1cont:
  1140  0032                            ds      2
  1141  0032                     
  1142                           _t1final:
  1143  0034                            ds      2
  1144  0034                     
  1145                           	file	"C:\Users\21193634\AppData\Local\Temp\shuo."
  1146                           	line	#
  1147                           ; Clear objects allocated to COMMON
  1148                           psect cinit,class=CODE,delta=2,merge=1
  1149                           	clrf	((__pbssCOMMON)+0)&07Fh
  1150  000F  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
  1151  0010  01FA               ; Clear objects allocated to BANK0
  1152                           psect cinit,class=CODE,delta=2,merge=1
  1153                           	bcf	status, 5	;RP0=0, select bank0
  1154  0011  1283               	bcf	status, 6	;RP1=0, select bank0
  1155  0012  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1156  0013  01B2               	clrf	((__pbssBANK0)+1)&07Fh
  1157  0014  01B3               	clrf	((__pbssBANK0)+2)&07Fh
  1158  0015  01B4               	clrf	((__pbssBANK0)+3)&07Fh
  1159  0016  01B5               psect cinit,class=CODE,delta=2,merge=1
  1160                           global end_of_initialization,__end_of__initialization
  1161                           
  1162                           ;End of C runtime variable initialization code
  1163                           
  1164                           end_of_initialization:
  1165  0017                     __end_of__initialization:
  1166  0017                     clrf status
  1167  0017  0183               ljmp _main	;jump to C main() function
  1168  0018  120A  118A  2A5A   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1169                           global __pcstackCOMMON
  1170                           __pcstackCOMMON:
  1171  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
  1172  0070                     ?_initTimer1:	; 1 bytes @ 0x0
  1173  0070                     ?_intt1_1ms:	; 1 bytes @ 0x0
  1174  0070                     ??_intt1_1ms:	; 1 bytes @ 0x0
  1175  0070                     ?_initLEDs:	; 1 bytes @ 0x0
  1176  0070                     ?_statusled1:	; 1 bytes @ 0x0
  1177  0070                     ?_main:	; 1 bytes @ 0x0
  1178  0070                     ?_irq:	; 1 bytes @ 0x0
  1179  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  1180  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  1181  0070                     	ds	1
  1182  0070                     ??_irq:	; 1 bytes @ 0x1
  1183  0071                     	ds	2
  1184  0071                     ?_setT1:	; 1 bytes @ 0x3
  1185  0073                     ?_setT1limite:	; 1 bytes @ 0x3
  1186  0073                     ??_initLEDs:	; 1 bytes @ 0x3
  1187  0073                     ??_statusled1:	; 1 bytes @ 0x3
  1188  0073                     ?_delay:	; 1 bytes @ 0x3
  1189  0073                     ??_dispLCD_instReg:	; 1 bytes @ 0x3
  1190  0073                     ??_dispLCD_dataReg:	; 1 bytes @ 0x3
  1191  0073                     	global	?___awdiv
  1192                           ?___awdiv:	; 2 bytes @ 0x3
  1193  0073                     	global	?___awmod
  1194                           ?___awmod:	; 2 bytes @ 0x3
  1195  0073                     	global	delay@t
  1196                           delay@t:	; 2 bytes @ 0x3
  1197  0073                     	global	___awdiv@divisor
  1198                           ___awdiv@divisor:	; 2 bytes @ 0x3
  1199  0073                     	global	___awmod@divisor
  1200                           ___awmod@divisor:	; 2 bytes @ 0x3
  1201  0073                     	global	setT1@c
  1202                           setT1@c:	; 4 bytes @ 0x3
  1203  0073                     	global	setT1limite@d
  1204                           setT1limite@d:	; 4 bytes @ 0x3
  1205  0073                     	ds	1
  1206  0073                     	global	dispLCD_dataReg@d
  1207                           dispLCD_dataReg@d:	; 1 bytes @ 0x4
  1208  0074                     	ds	1
  1209  0074                     ??_delay:	; 1 bytes @ 0x5
  1210  0075                     	global	dispLCD_instReg@i
  1211                           dispLCD_instReg@i:	; 1 bytes @ 0x5
  1212  0075                     	global	___awdiv@dividend
  1213                           ___awdiv@dividend:	; 2 bytes @ 0x5
  1214  0075                     	global	___awmod@dividend
  1215                           ___awmod@dividend:	; 2 bytes @ 0x5
  1216  0075                     	ds	1
  1217  0075                     ??_dispLCD_init:	; 1 bytes @ 0x6
  1218  0076                     ?_dispLCD_lincol:	; 1 bytes @ 0x6
  1219  0076                     	global	dispLCD_lincol@col
  1220                           dispLCD_lincol@col:	; 1 bytes @ 0x6
  1221  0076                     	ds	1
  1222  0076                     ??_initTimer1:	; 1 bytes @ 0x7
  1223  0077                     ??_setT1:	; 1 bytes @ 0x7
  1224  0077                     ??_setT1limite:	; 1 bytes @ 0x7
  1225  0077                     ??_dispLCD_lincol:	; 1 bytes @ 0x7
  1226  0077                     ??___awdiv:	; 1 bytes @ 0x7
  1227  0077                     ??___awmod:	; 1 bytes @ 0x7
  1228  0077                     	ds	1
  1229  0077                     	global	dispLCD_lincol@lin
  1230                           dispLCD_lincol@lin:	; 1 bytes @ 0x8
  1231  0078                     	ds	1
  1232  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1233                           global __pcstackBANK0
  1234                           __pcstackBANK0:
  1235  0020                     ?_dispLCD:	; 1 bytes @ 0x0
  1236  0020                     	global	dispLCD@col
  1237                           dispLCD@col:	; 1 bytes @ 0x0
  1238  0020                     	global	___awdiv@counter
  1239                           ___awdiv@counter:	; 1 bytes @ 0x0
  1240  0020                     	global	___awmod@counter
  1241                           ___awmod@counter:	; 1 bytes @ 0x0
  1242  0020                     	ds	1
  1243  0020                     	global	dispLCD@str
  1244                           dispLCD@str:	; 1 bytes @ 0x1
  1245  0021                     	global	___awdiv@sign
  1246                           ___awdiv@sign:	; 1 bytes @ 0x1
  1247  0021                     	global	___awmod@sign
  1248                           ___awmod@sign:	; 1 bytes @ 0x1
  1249  0021                     	ds	1
  1250  0021                     ??_dispLCD:	; 1 bytes @ 0x2
  1251  0022                     	global	___awdiv@quotient
  1252                           ___awdiv@quotient:	; 2 bytes @ 0x2
  1253  0022                     	ds	1
  1254  0022                     	global	dispLCD@pos
  1255                           dispLCD@pos:	; 1 bytes @ 0x3
  1256  0023                     	ds	1
  1257  0023                     ?_dispLCD_num:	; 1 bytes @ 0x4
  1258  0024                     	global	dispLCD@lin
  1259                           dispLCD@lin:	; 1 bytes @ 0x4
  1260  0024                     	global	dispLCD_num@col
  1261                           dispLCD_num@col:	; 1 bytes @ 0x4
  1262  0024                     	ds	1
  1263  0024                     	global	dispLCD_num@num
  1264                           dispLCD_num@num:	; 2 bytes @ 0x5
  1265  0025                     	ds	2
  1266  0025                     	global	dispLCD_num@tam
  1267                           dispLCD_num@tam:	; 1 bytes @ 0x7
  1268  0027                     	ds	1
  1269  0027                     ??_dispLCD_num:	; 1 bytes @ 0x8
  1270  0028                     	ds	3
  1271  0028                     	global	dispLCD_num@lin
  1272                           dispLCD_num@lin:	; 1 bytes @ 0xB
  1273  002B                     	ds	1
  1274  002B                     	global	dispLCD_num@size
  1275                           dispLCD_num@size:	; 1 bytes @ 0xC
  1276  002C                     	ds	1
  1277  002C                     	global	dispLCD_num@sinal
  1278                           dispLCD_num@sinal:	; 1 bytes @ 0xD
  1279  002D                     	ds	1
  1280  002D                     	global	dispLCD_num@div
  1281                           dispLCD_num@div:	; 2 bytes @ 0xE
  1282  002E                     	ds	2
  1283  002E                     ??_main:	; 1 bytes @ 0x10
  1284  0030                     	ds	2
  1285  0030                     ;!
  1286                           ;!Data Sizes:
  1287                           ;!    Strings     17
  1288                           ;!    Constant    0
  1289                           ;!    Data        0
  1290                           ;!    BSS         6
  1291                           ;!    Persistent  0
  1292                           ;!    Stack       0
  1293                           ;!
  1294                           ;!Auto Spaces:
  1295                           ;!    Space          Size  Autos    Used
  1296                           ;!    COMMON           14      9      11
  1297                           ;!    BANK0            80     18      22
  1298                           ;!    BANK1            80      0       0
  1299                           ;!    BANK3            96      0       0
  1300                           ;!    BANK2            96      0       0
  1301                           
  1302                           ;!
  1303                           ;!Pointer List with Targets:
  1304                           ;!
  1305                           ;!    dispLCD@str	PTR const unsigned char  size(1) Largest target is 17
  1306                           ;!		 -> STR_1(CODE[17]), 
  1307                           ;!
  1308                           
  1309                           
  1310                           ;!
  1311                           ;!Critical Paths under _main in COMMON
  1312                           ;!
  1313                           ;!    _initTimer1->_setT1limite
  1314                           ;!    _dispLCD_num->_dispLCD_lincol
  1315                           ;!    _dispLCD_init->_delay
  1316                           ;!    _dispLCD_init->_dispLCD_instReg
  1317                           ;!    _dispLCD->_dispLCD_lincol
  1318                           ;!    _dispLCD_lincol->_dispLCD_instReg
  1319                           ;!
  1320                           ;!Critical Paths under _irq in COMMON
  1321                           ;!
  1322                           ;!    _irq->_intt1_1ms
  1323                           ;!
  1324                           ;!Critical Paths under _main in BANK0
  1325                           ;!
  1326                           ;!    _main->_dispLCD_num
  1327                           ;!    _dispLCD_num->___awdiv
  1328                           ;!
  1329                           ;!Critical Paths under _irq in BANK0
  1330                           ;!
  1331                           ;!    None.
  1332                           ;!
  1333                           ;!Critical Paths under _main in BANK1
  1334                           ;!
  1335                           ;!    None.
  1336                           ;!
  1337                           ;!Critical Paths under _irq in BANK1
  1338                           ;!
  1339                           ;!    None.
  1340                           ;!
  1341                           ;!Critical Paths under _main in BANK3
  1342                           ;!
  1343                           ;!    None.
  1344                           ;!
  1345                           ;!Critical Paths under _irq in BANK3
  1346                           ;!
  1347                           ;!    None.
  1348                           ;!
  1349                           ;!Critical Paths under _main in BANK2
  1350                           ;!
  1351                           ;!    None.
  1352                           ;!
  1353                           ;!Critical Paths under _irq in BANK2
  1354                           ;!
  1355                           ;!    None.
  1356                           
  1357 ;;
  1358 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1359 ;;
  1360                           
  1361                           ;!
  1362                           ;!Call Graph Tables:
  1363                           ;!
  1364                           ;! ---------------------------------------------------------------------------------
  1365                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1366                           ;! ---------------------------------------------------------------------------------
  1367                           ;! (0) _main                                                 2     2      0    4487
  1368                           ;!                                             16 BANK0      2     2      0
  1369                           ;!                            _dispLCD
  1370                           ;!                       _dispLCD_init
  1371                           ;!                        _dispLCD_num
  1372                           ;!                           _initLEDs
  1373                           ;!                         _initTimer1
  1374                           ;!                              _setT1
  1375                           ;!                        _setT1limite
  1376                           ;!                         _statusled1
  1377                           ;! ---------------------------------------------------------------------------------
  1378                           ;! (1) _statusled1                                           0     0      0       0
  1379                           ;! ---------------------------------------------------------------------------------
  1380                           ;! (1) _setT1                                                4     0      4      98
  1381                           ;!                                              3 COMMON     4     0      4
  1382                           ;! ---------------------------------------------------------------------------------
  1383                           ;! (1) _initTimer1                                           0     0      0     174
  1384                           ;!                        _setT1limite
  1385                           ;! ---------------------------------------------------------------------------------
  1386                           ;! (1) _setT1limite                                          4     0      4     174
  1387                           ;!                                              3 COMMON     4     0      4
  1388                           ;! ---------------------------------------------------------------------------------
  1389                           ;! (1) _initLEDs                                             0     0      0       0
  1390                           ;! ---------------------------------------------------------------------------------
  1391                           ;! (1) _dispLCD_num                                         12     8      4    2854
  1392                           ;!                                              4 BANK0     12     8      4
  1393                           ;!                            ___awdiv
  1394                           ;!                            ___awmod
  1395                           ;!                    _dispLCD_dataReg
  1396                           ;!                     _dispLCD_lincol
  1397                           ;! ---------------------------------------------------------------------------------
  1398                           ;! (2) ___awmod                                              7     3      4     613
  1399                           ;!                                              3 COMMON     5     1      4
  1400                           ;!                                              0 BANK0      2     2      0
  1401                           ;! ---------------------------------------------------------------------------------
  1402                           ;! (2) ___awdiv                                              9     5      4     908
  1403                           ;!                                              3 COMMON     5     1      4
  1404                           ;!                                              0 BANK0      4     4      0
  1405                           ;! ---------------------------------------------------------------------------------
  1406                           ;! (1) _dispLCD_init                                         0     0      0     427
  1407                           ;!                              _delay
  1408                           ;!                    _dispLCD_instReg
  1409                           ;! ---------------------------------------------------------------------------------
  1410                           ;! (2) _delay                                                3     1      2     251
  1411                           ;!                                              3 COMMON     3     1      2
  1412                           ;! ---------------------------------------------------------------------------------
  1413                           ;! (1) _dispLCD                                              5     3      2     760
  1414                           ;!                                              0 BANK0      5     3      2
  1415                           ;!                    _dispLCD_dataReg
  1416                           ;!                     _dispLCD_lincol
  1417                           ;! ---------------------------------------------------------------------------------
  1418                           ;! (2) _dispLCD_lincol                                       3     2      1     372
  1419                           ;!                                              6 COMMON     3     2      1
  1420                           ;!                    _dispLCD_instReg
  1421                           ;! ---------------------------------------------------------------------------------
  1422                           ;! (3) _dispLCD_instReg                                      3     3      0     176
  1423                           ;!                                              3 COMMON     3     3      0
  1424                           ;! ---------------------------------------------------------------------------------
  1425                           ;! (2) _dispLCD_dataReg                                      2     2      0      44
  1426                           ;!                                              3 COMMON     2     2      0
  1427                           ;! ---------------------------------------------------------------------------------
  1428                           ;! Estimated maximum stack depth 3
  1429                           ;! ---------------------------------------------------------------------------------
  1430                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1431                           ;! ---------------------------------------------------------------------------------
  1432                           ;! (4) _irq                                                  2     2      0       0
  1433                           ;!                                              1 COMMON     2     2      0
  1434                           ;!                          _intt1_1ms
  1435                           ;! ---------------------------------------------------------------------------------
  1436                           ;! (5) _intt1_1ms                                            1     1      0       0
  1437                           ;!                                              0 COMMON     1     1      0
  1438                           ;! ---------------------------------------------------------------------------------
  1439                           ;! Estimated maximum stack depth 5
  1440                           ;! ---------------------------------------------------------------------------------
  1441                           ;!
  1442                           ;! Call Graph Graphs:
  1443                           ;!
  1444                           ;! _main (ROOT)
  1445                           ;!   _dispLCD
  1446                           ;!     _dispLCD_dataReg
  1447                           ;!     _dispLCD_lincol
  1448                           ;!       _dispLCD_instReg
  1449                           ;!   _dispLCD_init
  1450                           ;!     _delay
  1451                           ;!     _dispLCD_instReg
  1452                           ;!   _dispLCD_num
  1453                           ;!     ___awdiv
  1454                           ;!     ___awmod
  1455                           ;!     _dispLCD_dataReg
  1456                           ;!     _dispLCD_lincol
  1457                           ;!       _dispLCD_instReg
  1458                           ;!   _initLEDs
  1459                           ;!   _initTimer1
  1460                           ;!     _setT1limite
  1461                           ;!   _setT1
  1462                           ;!   _setT1limite
  1463                           ;!   _statusled1
  1464                           ;!
  1465                           ;! _irq (ROOT)
  1466                           ;!   _intt1_1ms
  1467                           ;!
  1468                           
  1469                           ;! Address spaces:
  1470                           
  1471                           ;!Name               Size   Autos  Total    Cost      Usage
  1472                           ;!BITCOMMON            E      0       0       0        0.0%
  1473                           ;!EEDATA             100      0       0       0        0.0%
  1474                           ;!NULL                 0      0       0       0        0.0%
  1475                           ;!CODE                 0      0       0       0        0.0%
  1476                           ;!COMMON               E      9       B       1       78.6%
  1477                           ;!BITSFR0              0      0       0       1        0.0%
  1478                           ;!SFR0                 0      0       0       1        0.0%
  1479                           ;!BITSFR1              0      0       0       2        0.0%
  1480                           ;!SFR1                 0      0       0       2        0.0%
  1481                           ;!STACK                0      0       0       2        0.0%
  1482                           ;!ABS                  0      0      21       3        0.0%
  1483                           ;!BITBANK0            50      0       0       4        0.0%
  1484                           ;!BITSFR3              0      0       0       4        0.0%
  1485                           ;!SFR3                 0      0       0       4        0.0%
  1486                           ;!BANK0               50     12      16       5       27.5%
  1487                           ;!BITSFR2              0      0       0       5        0.0%
  1488                           ;!SFR2                 0      0       0       5        0.0%
  1489                           ;!BITBANK1            50      0       0       6        0.0%
  1490                           ;!BANK1               50      0       0       7        0.0%
  1491                           ;!BITBANK3            60      0       0       8        0.0%
  1492                           ;!BANK3               60      0       0       9        0.0%
  1493                           ;!BITBANK2            60      0       0      10        0.0%
  1494                           ;!BANK2               60      0       0      11        0.0%
  1495                           ;!DATA                 0      0      21      12        0.0%
  1496                           
  1497                           	global	_main
  1498                           
  1499 ;; *************** function _main *****************
  1500 ;; Defined at:
  1501 ;;		line 15 in file "main.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : B00/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1515 ;;      Params:         0       0       0       0       0
  1516 ;;      Locals:         0       0       0       0       0
  1517 ;;      Temps:          0       2       0       0       0
  1518 ;;      Totals:         0       2       0       0       0
  1519 ;;Total ram usage:        2 bytes
  1520 ;; Hardware stack levels required when called:    5
  1521 ;; This function calls:
  1522 ;;		_dispLCD
  1523 ;;		_dispLCD_init
  1524 ;;		_dispLCD_num
  1525 ;;		_initLEDs
  1526 ;;		_initTimer1
  1527 ;;		_setT1
  1528 ;;		_setT1limite
  1529 ;;		_statusled1
  1530 ;; This function is called by:
  1531 ;;		Startup code after reset
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1535                           	file	"main.c"
  1536                           	line	15
  1537                           global __pmaintext
  1538                           __pmaintext:	;psect for function _main
  1539  025A                     psect	maintext
  1540                           	file	"main.c"
  1541                           	line	15
  1542                           	global	__size_of_main
  1543                           	__size_of_main	equ	__end_of_main-_main
  1544  0055                     	
  1545                           _main:	
  1546  025A                     ;incstack = 0
  1547                           	opt	stack 3
  1548                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1549                           	line	17
  1550                           	
  1551                           l1362:	
  1552  025A                     ;main.c: 17:     dispLCD_init();
  1553                           	fcall	_dispLCD_init
  1554  025A  120A  118A  22AF  120A  118A  	line	18
  1555                           	
  1556                           l1364:	
  1557  025F                     ;main.c: 18:     initLEDs();
  1558                           	fcall	_initLEDs
  1559  025F  120A  118A  23EE  120A  118A  	line	19
  1560                           	
  1561                           l1366:	
  1562  0264                     ;main.c: 19:     initTimer1();
  1563                           	fcall	_initTimer1
  1564  0264  120A  118A  2376  120A  118A  	line	20
  1565                           	
  1566                           l1368:	
  1567  0269                     ;main.c: 20:     statusled1();
  1568                           	fcall	_statusled1
  1569  0269  120A  118A  2404  120A  118A  	line	22
  1570                           	
  1571                           l1370:	
  1572  026E                     ;main.c: 22:     setT1( 1000 );
  1573                           	movlw	0
  1574  026E  3000               	movwf	(setT1@c+3)
  1575  026F  00F6               	movlw	0
  1576  0270  3000               	movwf	(setT1@c+2)
  1577  0271  00F5               	movlw	03h
  1578  0272  3003               	movwf	(setT1@c+1)
  1579  0273  00F4               	movlw	0E8h
  1580  0274  30E8               	movwf	(setT1@c)
  1581  0275  00F3               
  1582                           	fcall	_setT1
  1583  0276  120A  118A  23F6  120A  118A  	line	23
  1584                           	
  1585                           l1372:	
  1586  027B                     ;main.c: 23:     setT1limite( 1000 );
  1587                           	movlw	0
  1588  027B  3000               	movwf	(setT1limite@d+3)
  1589  027C  00F6               	movlw	0
  1590  027D  3000               	movwf	(setT1limite@d+2)
  1591  027E  00F5               	movlw	03h
  1592  027F  3003               	movwf	(setT1limite@d+1)
  1593  0280  00F4               	movlw	0E8h
  1594  0281  30E8               	movwf	(setT1limite@d)
  1595  0282  00F3               
  1596                           	fcall	_setT1limite
  1597  0283  120A  118A  23FD  120A  118A  	line	25
  1598                           	
  1599                           l1374:	
  1600  0288                     ;main.c: 25:     dispLCD(0,0,"Contador:       ");
  1601                           	bcf	status, 5	;RP0=0, select bank0
  1602  0288  1283               	bcf	status, 6	;RP1=0, select bank0
  1603  0289  1303               	clrf	(dispLCD@col)
  1604  028A  01A0               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1605  028B  3001               	movwf	(??_main+0)+0
  1606  028C  00B0               	movf	(??_main+0)+0,w
  1607  028D  0830               	movwf	(dispLCD@str)
  1608  028E  00A1               	movlw	low(0)
  1609  028F  3000               	fcall	_dispLCD
  1610  0290  120A  118A  22F0  120A  118A  	goto	l1376
  1611  0295  2A96               	line	27
  1612                           ;main.c: 27:     while( 1 )
  1613                           	
  1614                           l38:	
  1615  0296                     	line	29
  1616                           	
  1617                           l1376:	
  1618  0296                     ;main.c: 28:     {;main.c: 29:         dispLCD_num(0,10,contador, 5 );
  1619                           	movlw	low(0Ah)
  1620  0296  300A               	bcf	status, 5	;RP0=0, select bank0
  1621  0297  1283               	bcf	status, 6	;RP1=0, select bank0
  1622  0298  1303               	movwf	(??_main+0)+0
  1623  0299  00B0               	movf	(??_main+0)+0,w
  1624  029A  0830               	movwf	(dispLCD_num@col)
  1625  029B  00A4               	movf	(_contador+1),w
  1626  029C  087A               	movwf	(dispLCD_num@num+1)
  1627  029D  00A6               	movf	(_contador),w
  1628  029E  0879               	movwf	(dispLCD_num@num)
  1629  029F  00A5               	movlw	low(05h)
  1630  02A0  3005               	movwf	(??_main+1)+0
  1631  02A1  00B1               	movf	(??_main+1)+0,w
  1632  02A2  0831               	movwf	(dispLCD_num@tam)
  1633  02A3  00A7               	movlw	low(0)
  1634  02A4  3000               	fcall	_dispLCD_num
  1635  02A5  120A  118A  201B  120A  118A  	goto	l1376
  1636  02AA  2A96               	line	35
  1637                           ;main.c: 35:     }
  1638                           	
  1639                           l39:	
  1640  02AB                     	goto	l1376
  1641  02AB  2A96               	
  1642                           l40:	
  1643  02AC                     	line	36
  1644                           	
  1645                           l41:	
  1646  02AC                     	global	start
  1647                           	ljmp	start
  1648  02AC  120A  118A  280C   	opt stack 0
  1649                           GLOBAL	__end_of_main
  1650                           	__end_of_main:
  1651  02AF                     	signat	_main,89
  1652                           	global	_statusled1
  1653                           
  1654 ;; *************** function _statusled1 *****************
  1655 ;; Defined at:
  1656 ;;		line 14 in file "leds.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      unsigned char 
  1663 ;; Registers used:
  1664 ;;		wreg
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0
  1673 ;;      Totals:         0       0       0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    2
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1684                           	file	"leds.c"
  1685                           	line	14
  1686                           global __ptext1
  1687                           __ptext1:	;psect for function _statusled1
  1688  0404                     psect	text1
  1689                           	file	"leds.c"
  1690                           	line	14
  1691                           	global	__size_of_statusled1
  1692                           	__size_of_statusled1	equ	__end_of_statusled1-_statusled1
  1693  0005                     	
  1694                           _statusled1:	
  1695  0404                     ;incstack = 0
  1696                           	opt	stack 5
  1697                           ; Regs used in _statusled1: [wreg]
  1698                           	line	16
  1699                           	
  1700                           l1164:	
  1701  0404                     ;leds.c: 16:     return( PORTCbits.RC7 );;	Return value of _statusled1 is never used
  1702                           	bcf	status, 5	;RP0=0, select bank0
  1703  0404  1283               	bcf	status, 6	;RP1=0, select bank0
  1704  0405  1303               	movf	(7),w	;volatile
  1705  0406  0807               	goto	l15
  1706  0407  2C08               	
  1707                           l1166:	
  1708  0408                     	line	17
  1709                           	
  1710                           l15:	
  1711  0408                     	return
  1712  0408  0008               	opt stack 0
  1713                           GLOBAL	__end_of_statusled1
  1714                           	__end_of_statusled1:
  1715  0409                     	signat	_statusled1,89
  1716                           	global	_setT1
  1717                           
  1718 ;; *************** function _setT1 *****************
  1719 ;; Defined at:
  1720 ;;		line 36 in file "timer1.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  c               4    3[COMMON] long 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         4       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0
  1737 ;;      Totals:         4       0       0       0       0
  1738 ;;Total ram usage:        4 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    2
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1748                           	file	"timer1.c"
  1749                           	line	36
  1750                           global __ptext2
  1751                           __ptext2:	;psect for function _setT1
  1752  03F6                     psect	text2
  1753                           	file	"timer1.c"
  1754                           	line	36
  1755                           	global	__size_of_setT1
  1756                           	__size_of_setT1	equ	__end_of_setT1-_setT1
  1757  0007                     	
  1758                           _setT1:	
  1759  03F6                     ;incstack = 0
  1760                           	opt	stack 5
  1761                           ; Regs used in _setT1: [wreg]
  1762                           	line	38
  1763                           	
  1764                           l1200:	
  1765  03F6                     ;timer1.c: 36: void setT1( long c );timer1.c: 37: {;timer1.c: 38:     t1cont = c;
  1766                           	movf	(setT1@c+1),w
  1767  03F6  0874               	bcf	status, 5	;RP0=0, select bank0
  1768  03F7  1283               	bcf	status, 6	;RP1=0, select bank0
  1769  03F8  1303               	movwf	(_t1cont+1)
  1770  03F9  00B3               	movf	(setT1@c),w
  1771  03FA  0873               	movwf	(_t1cont)
  1772  03FB  00B2               	line	39
  1773                           	
  1774                           l74:	
  1775  03FC                     	return
  1776  03FC  0008               	opt stack 0
  1777                           GLOBAL	__end_of_setT1
  1778                           	__end_of_setT1:
  1779  03FD                     	signat	_setT1,4217
  1780                           	global	_initTimer1
  1781                           
  1782 ;; *************** function _initTimer1 *****************
  1783 ;; Defined at:
  1784 ;;		line 56 in file "timer1.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0, pclath, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    3
  1805 ;; This function calls:
  1806 ;;		_setT1limite
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1812                           	line	56
  1813                           global __ptext3
  1814                           __ptext3:	;psect for function _initTimer1
  1815  0376                     psect	text3
  1816                           	file	"timer1.c"
  1817                           	line	56
  1818                           	global	__size_of_initTimer1
  1819                           	__size_of_initTimer1	equ	__end_of_initTimer1-_initTimer1
  1820  001D                     	
  1821                           _initTimer1:	
  1822  0376                     ;incstack = 0
  1823                           	opt	stack 4
  1824                           ; Regs used in _initTimer1: [wreg+status,2+status,0+pclath+cstack]
  1825                           	line	58
  1826                           	
  1827                           l1188:	
  1828  0376                     ;timer1.c: 58:     INTCONbits.GIE = 0;
  1829                           	bcf	(11),7	;volatile
  1830  0376  138B               	line	59
  1831                           ;timer1.c: 59:     T1CONbits.TMR1CS = 0;
  1832                           	bcf	status, 5	;RP0=0, select bank0
  1833  0377  1283               	bcf	status, 6	;RP1=0, select bank0
  1834  0378  1303               	bcf	(16),1	;volatile
  1835  0379  1090               	line	60
  1836                           ;timer1.c: 60:     T1CONbits.T1CKPS1 = 0;
  1837                           	bcf	(16),5	;volatile
  1838  037A  1290               	line	61
  1839                           ;timer1.c: 61:     T1CONbits.T1CKPS0 = 0;
  1840                           	bcf	(16),4	;volatile
  1841  037B  1210               	line	62
  1842                           ;timer1.c: 62:     T1CONbits.TMR1GE = 0;
  1843                           	bcf	(16),6	;volatile
  1844  037C  1310               	line	64
  1845                           	
  1846                           l1190:	
  1847  037D                     ;timer1.c: 64:     setT1limite( 1000 );
  1848                           	movlw	0
  1849  037D  3000               	movwf	(setT1limite@d+3)
  1850  037E  00F6               	movlw	0
  1851  037F  3000               	movwf	(setT1limite@d+2)
  1852  0380  00F5               	movlw	03h
  1853  0381  3003               	movwf	(setT1limite@d+1)
  1854  0382  00F4               	movlw	0E8h
  1855  0383  30E8               	movwf	(setT1limite@d)
  1856  0384  00F3               
  1857                           	fcall	_setT1limite
  1858  0385  120A  118A  23FD  120A  118A  	line	66
  1859                           	
  1860                           l1192:	
  1861  038A                     ;timer1.c: 66:     T1CONbits.TMR1ON = 1;
  1862                           	bcf	status, 5	;RP0=0, select bank0
  1863  038A  1283               	bcf	status, 6	;RP1=0, select bank0
  1864  038B  1303               	bsf	(16),0	;volatile
  1865  038C  1410               	line	67
  1866                           	
  1867                           l1194:	
  1868  038D                     ;timer1.c: 67:     INTCONbits.PEIE = 1;
  1869                           	bsf	(11),6	;volatile
  1870  038D  170B               	line	68
  1871                           	
  1872                           l1196:	
  1873  038E                     ;timer1.c: 68:     PIE1bits.TMR1IE =1;
  1874                           	bsf	status, 5	;RP0=1, select bank1
  1875  038E  1683               	bcf	status, 6	;RP1=0, select bank1
  1876  038F  1303               	bsf	(140)^080h,0	;volatile
  1877  0390  140C               	line	69
  1878                           	
  1879                           l1198:	
  1880  0391                     ;timer1.c: 69:     INTCONbits.GIE = 1;
  1881                           	bsf	(11),7	;volatile
  1882  0391  178B               	line	70
  1883                           	
  1884                           l86:	
  1885  0392                     	return
  1886  0392  0008               	opt stack 0
  1887                           GLOBAL	__end_of_initTimer1
  1888                           	__end_of_initTimer1:
  1889  0393                     	signat	_initTimer1,89
  1890                           	global	_setT1limite
  1891                           
  1892 ;; *************** function _setT1limite *****************
  1893 ;; Defined at:
  1894 ;;		line 46 in file "timer1.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  d               4    3[COMMON] long 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         4       0       0       0       0
  1909 ;;      Locals:         0       0       0       0       0
  1910 ;;      Temps:          0       0       0       0       0
  1911 ;;      Totals:         4       0       0       0       0
  1912 ;;Total ram usage:        4 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    2
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;;		_initTimer1
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1923                           	line	46
  1924                           global __ptext4
  1925                           __ptext4:	;psect for function _setT1limite
  1926  03FD                     psect	text4
  1927                           	file	"timer1.c"
  1928                           	line	46
  1929                           	global	__size_of_setT1limite
  1930                           	__size_of_setT1limite	equ	__end_of_setT1limite-_setT1limite
  1931  0007                     	
  1932                           _setT1limite:	
  1933  03FD                     ;incstack = 0
  1934                           	opt	stack 5
  1935                           ; Regs used in _setT1limite: [wreg]
  1936                           	line	48
  1937                           	
  1938                           l1052:	
  1939  03FD                     ;timer1.c: 46: void setT1limite( long d );timer1.c: 47: {;timer1.c: 48:     t1final = d;
                                 
  1940                           	movf	(setT1limite@d+1),w
  1941  03FD  0874               	bcf	status, 5	;RP0=0, select bank0
  1942  03FE  1283               	bcf	status, 6	;RP1=0, select bank0
  1943  03FF  1303               	movwf	(_t1final+1)
  1944  0400  00B5               	movf	(setT1limite@d),w
  1945  0401  0873               	movwf	(_t1final)
  1946  0402  00B4               	line	49
  1947                           	
  1948                           l80:	
  1949  0403                     	return
  1950  0403  0008               	opt stack 0
  1951                           GLOBAL	__end_of_setT1limite
  1952                           	__end_of_setT1limite:
  1953  0404                     	signat	_setT1limite,4217
  1954                           	global	_initLEDs
  1955                           
  1956 ;; *************** function _initLEDs *****************
  1957 ;; Defined at:
  1958 ;;		line 3 in file "leds.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		None
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    2
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1986                           	file	"leds.c"
  1987                           	line	3
  1988                           global __ptext5
  1989                           __ptext5:	;psect for function _initLEDs
  1990  03EE                     psect	text5
  1991                           	file	"leds.c"
  1992                           	line	3
  1993                           	global	__size_of_initLEDs
  1994                           	__size_of_initLEDs	equ	__end_of_initLEDs-_initLEDs
  1995  0008                     	
  1996                           _initLEDs:	
  1997  03EE                     ;incstack = 0
  1998                           	opt	stack 5
  1999                           ; Regs used in _initLEDs: []
  2000                           	line	5
  2001                           	
  2002                           l1162:	
  2003  03EE                     ;leds.c: 5:     RCSTAbits.SPEN = 0;
  2004                           	bcf	status, 5	;RP0=0, select bank0
  2005  03EE  1283               	bcf	status, 6	;RP1=0, select bank0
  2006  03EF  1303               	bcf	(24),7	;volatile
  2007  03F0  1398               	line	6
  2008                           ;leds.c: 6:     PORTCbits.RC7 = 0;
  2009                           	bcf	(7),7	;volatile
  2010  03F1  1387               	line	7
  2011                           ;leds.c: 7:     TRISCbits.TRISC7 = 0;
  2012                           	bsf	status, 5	;RP0=1, select bank1
  2013  03F2  1683               	bcf	status, 6	;RP1=0, select bank1
  2014  03F3  1303               	bcf	(135)^080h,7	;volatile
  2015  03F4  1387               	line	8
  2016                           	
  2017                           l9:	
  2018  03F5                     	return
  2019  03F5  0008               	opt stack 0
  2020                           GLOBAL	__end_of_initLEDs
  2021                           	__end_of_initLEDs:
  2022  03F6                     	signat	_initLEDs,89
  2023                           	global	_dispLCD_num
  2024                           
  2025 ;; *************** function _dispLCD_num *****************
  2026 ;; Defined at:
  2027 ;;		line 159 in file "lcd.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  lin             1    wreg     unsigned char 
  2030 ;;  col             1    4[BANK0 ] unsigned char 
  2031 ;;  num             2    5[BANK0 ] int 
  2032 ;;  tam             1    7[BANK0 ] unsigned char 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  lin             1   11[BANK0 ] unsigned char 
  2035 ;;  div             2   14[BANK0 ] int 
  2036 ;;  sinal           1   13[BANK0 ] unsigned char 
  2037 ;;  size            1   12[BANK0 ] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2047 ;;      Params:         0       4       0       0       0
  2048 ;;      Locals:         0       5       0       0       0
  2049 ;;      Temps:          0       3       0       0       0
  2050 ;;      Totals:         0      12       0       0       0
  2051 ;;Total ram usage:       12 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    4
  2054 ;; This function calls:
  2055 ;;		___awdiv
  2056 ;;		___awmod
  2057 ;;		_dispLCD_dataReg
  2058 ;;		_dispLCD_lincol
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2064                           	file	"lcd.c"
  2065                           	line	159
  2066                           global __ptext6
  2067                           __ptext6:	;psect for function _dispLCD_num
  2068  001B                     psect	text6
  2069                           	file	"lcd.c"
  2070                           	line	159
  2071                           	global	__size_of_dispLCD_num
  2072                           	__size_of_dispLCD_num	equ	__end_of_dispLCD_num-_dispLCD_num
  2073  00EE                     	
  2074                           _dispLCD_num:	
  2075  001B                     ;incstack = 0
  2076                           	opt	stack 3
  2077                           ; Regs used in _dispLCD_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2078                           ;dispLCD_num@lin stored from wreg
  2079                           	bcf	status, 5	;RP0=0, select bank0
  2080  001B  1283               	bcf	status, 6	;RP1=0, select bank0
  2081  001C  1303               	movwf	(dispLCD_num@lin)
  2082  001D  00AB               	line	166
  2083                           	
  2084                           l1328:	
  2085  001E                     ;lcd.c: 159: void dispLCD_num( unsigned char lin, unsigned char col,;lcd.c: 160:        
                                              int num, unsigned char tam );lcd.c: 161: {;lcd.c: 162:     int div;;lcd.c: 
                                 163:     unsigned char size;;lcd.c: 164:     char sinal;;lcd.c: 166:     sinal = num < 0
                                 ;
  2086                           	btfsc	(dispLCD_num@num+1),7
  2087  001E  1BA6               	goto	u951
  2088  001F  2821               	goto	u950
  2089  0020  2823               u951:
  2090  0021                     	movlw	1
  2091  0021  3001               	goto	u960
  2092  0022  2824               u950:
  2093  0023                     	movlw	0
  2094  0023  3000               u960:
  2095  0024                     	movwf	(??_dispLCD_num+0)+0
  2096  0024  00A8               	movf	(??_dispLCD_num+0)+0,w
  2097  0025  0828               	movwf	(dispLCD_num@sinal)
  2098  0026  00AD               	line	167
  2099                           	
  2100                           l1330:	
  2101  0027                     ;lcd.c: 167:     if( sinal )
  2102                           	movf	((dispLCD_num@sinal)),w
  2103  0027  082D               	btfsc	status,2
  2104  0028  1903               	goto	u971
  2105  0029  282B               	goto	u970
  2106  002A  282C               u971:
  2107  002B                     	goto	l1334
  2108  002B  2832               u970:
  2109  002C                     	line	168
  2110                           	
  2111                           l1332:	
  2112  002C                     ;lcd.c: 168:         num = (~num) + 1;
  2113                           	comf	(dispLCD_num@num),f
  2114  002C  09A5               	comf	(dispLCD_num@num+1),f
  2115  002D  09A6               	incf	(dispLCD_num@num),f
  2116  002E  0AA5               	skipnz
  2117  002F  1903               	incf	(dispLCD_num@num+1),f
  2118  0030  0AA6               	goto	l1334
  2119  0031  2832               	
  2120                           l132:	
  2121  0032                     	line	170
  2122                           	
  2123                           l1334:	
  2124  0032                     ;lcd.c: 170:     dispLCD_lincol(lin, col);
  2125                           	movf	(dispLCD_num@col),w
  2126  0032  0824               	movwf	(??_dispLCD_num+0)+0
  2127  0033  00A8               	movf	(??_dispLCD_num+0)+0,w
  2128  0034  0828               	movwf	(dispLCD_lincol@col)
  2129  0035  00F6               	movf	(dispLCD_num@lin),w
  2130  0036  082B               	fcall	_dispLCD_lincol
  2131  0037  120A  118A  23DB  120A  118A  	line	172
  2132                           	
  2133                           l1336:	
  2134  003C                     ;lcd.c: 172:     div=10000;
  2135                           	movlw	010h
  2136  003C  3010               	bcf	status, 5	;RP0=0, select bank0
  2137  003D  1283               	bcf	status, 6	;RP1=0, select bank0
  2138  003E  1303               	movwf	(dispLCD_num@div)
  2139  003F  00AE               	movlw	027h
  2140  0040  3027               	movwf	((dispLCD_num@div))+1
  2141  0041  00AF               	line	173
  2142                           	
  2143                           l1338:	
  2144  0042                     ;lcd.c: 173:     size = 5;
  2145                           	movlw	low(05h)
  2146  0042  3005               	movwf	(??_dispLCD_num+0)+0
  2147  0043  00A8               	movf	(??_dispLCD_num+0)+0,w
  2148  0044  0828               	movwf	(dispLCD_num@size)
  2149  0045  00AC               	line	174
  2150                           ;lcd.c: 174:     while( div >= 1 )
  2151                           	goto	l1346
  2152  0046  2876               	
  2153                           l134:	
  2154  0047                     	line	176
  2155                           	
  2156                           l1340:	
  2157  0047                     ;lcd.c: 175:     {;lcd.c: 176:         if( num/div == 0 )
  2158                           	bcf	status, 5	;RP0=0, select bank0
  2159  0047  1283               	bcf	status, 6	;RP1=0, select bank0
  2160  0048  1303               	movf	(dispLCD_num@div+1),w
  2161  0049  082F               	movwf	(___awdiv@divisor+1)
  2162  004A  00F4               	movf	(dispLCD_num@div),w
  2163  004B  082E               	movwf	(___awdiv@divisor)
  2164  004C  00F3               	movf	(dispLCD_num@num+1),w
  2165  004D  0826               	movwf	(___awdiv@dividend+1)
  2166  004E  00F6               	movf	(dispLCD_num@num),w
  2167  004F  0825               	movwf	(___awdiv@dividend)
  2168  0050  00F5               	fcall	___awdiv
  2169  0051  120A  118A  2182  120A  118A  	movf	((0+(?___awdiv))),w
  2170  0056  0873               iorwf	((1+(?___awdiv))),w
  2171  0057  0474               	btfss	status,2
  2172  0058  1D03               	goto	u981
  2173  0059  285B               	goto	u980
  2174  005A  285C               u981:
  2175  005B                     	goto	l1352
  2176  005B  2890               u980:
  2177  005C                     	line	177
  2178                           	
  2179                           l1342:	
  2180  005C                     ;lcd.c: 177:             --size;
  2181                           	movlw	01h
  2182  005C  3001               	bcf	status, 5	;RP0=0, select bank0
  2183  005D  1283               	bcf	status, 6	;RP1=0, select bank0
  2184  005E  1303               	subwf	(dispLCD_num@size),f
  2185  005F  02AC               	goto	l1344
  2186  0060  2862               	line	178
  2187                           ;lcd.c: 178:         else
  2188                           	
  2189                           l135:	
  2190  0061                     	line	179
  2191                           ;lcd.c: 179:             break;
  2192                           	goto	l1352
  2193  0061  2890               	
  2194                           l136:	
  2195  0062                     	line	180
  2196                           	
  2197                           l1344:	
  2198  0062                     ;lcd.c: 180:         div/=10;
  2199                           	movlw	0Ah
  2200  0062  300A               	movwf	(___awdiv@divisor)
  2201  0063  00F3               	movlw	0
  2202  0064  3000               	movwf	((___awdiv@divisor))+1
  2203  0065  00F4               	movf	(dispLCD_num@div+1),w
  2204  0066  082F               	movwf	(___awdiv@dividend+1)
  2205  0067  00F6               	movf	(dispLCD_num@div),w
  2206  0068  082E               	movwf	(___awdiv@dividend)
  2207  0069  00F5               	fcall	___awdiv
  2208  006A  120A  118A  2182  120A  118A  	movf	(1+(?___awdiv)),w
  2209  006F  0874               	bcf	status, 5	;RP0=0, select bank0
  2210  0070  1283               	bcf	status, 6	;RP1=0, select bank0
  2211  0071  1303               	movwf	(dispLCD_num@div+1)
  2212  0072  00AF               	movf	(0+(?___awdiv)),w
  2213  0073  0873               	movwf	(dispLCD_num@div)
  2214  0074  00AE               	goto	l1346
  2215  0075  2876               	line	181
  2216                           ;lcd.c: 181:     }
  2217                           	
  2218                           l133:	
  2219  0076                     	line	174
  2220                           	
  2221                           l1346:	
  2222  0076                     ;lcd.c: 174:     while( div >= 1 )
  2223                           	movf	(dispLCD_num@div+1),w
  2224  0076  082F               	xorlw	80h
  2225  0077  3A80               	movwf	btemp+1
  2226  0078  00FF               	movlw	(0)^80h
  2227  0079  3080               	subwf	btemp+1,w
  2228  007A  027F               	skipz
  2229  007B  1D03               	goto	u995
  2230  007C  287F               	movlw	01h
  2231  007D  3001               	subwf	(dispLCD_num@div),w
  2232  007E  022E               u995:
  2233  007F                     
  2234                           	skipnc
  2235  007F  1803               	goto	u991
  2236  0080  2882               	goto	u990
  2237  0081  2883               u991:
  2238  0082                     	goto	l1340
  2239  0082  2847               u990:
  2240  0083                     	goto	l1352
  2241  0083  2890               	
  2242                           l137:	
  2243  0084                     	line	183
  2244                           ;lcd.c: 183:     while( tam > (size+sinal) && tam > 1 )
  2245                           	goto	l1352
  2246  0084  2890               	
  2247                           l139:	
  2248  0085                     	line	185
  2249                           	
  2250                           l1348:	
  2251  0085                     ;lcd.c: 184:     {;lcd.c: 185:         dispLCD_dataReg(' ');
  2252                           	movlw	low(020h)
  2253  0085  3020               	fcall	_dispLCD_dataReg
  2254  0086  120A  118A  232B  120A  118A  	line	186
  2255                           	
  2256                           l1350:	
  2257  008B                     ;lcd.c: 186:         --tam;
  2258                           	movlw	01h
  2259  008B  3001               	bcf	status, 5	;RP0=0, select bank0
  2260  008C  1283               	bcf	status, 6	;RP1=0, select bank0
  2261  008D  1303               	subwf	(dispLCD_num@tam),f
  2262  008E  02A7               	goto	l1352
  2263  008F  2890               	line	187
  2264                           ;lcd.c: 187:     }
  2265                           	
  2266                           l138:	
  2267  0090                     	line	183
  2268                           	
  2269                           l1352:	
  2270  0090                     ;lcd.c: 183:     while( tam > (size+sinal) && tam > 1 )
  2271                           	bcf	status, 5	;RP0=0, select bank0
  2272  0090  1283               	bcf	status, 6	;RP1=0, select bank0
  2273  0091  1303               	movf	(dispLCD_num@size),w
  2274  0092  082C               	addwf	(dispLCD_num@sinal),w
  2275  0093  072D               	movwf	(??_dispLCD_num+0)+0
  2276  0094  00A8               	clrf	(??_dispLCD_num+0)+0+1
  2277  0095  01A9               	rlf	1+(??_dispLCD_num+0)+0,f
  2278  0096  0DA9               	
  2279                           	movf	1+(??_dispLCD_num+0)+0,w
  2280  0097  0829               	xorlw	80h
  2281  0098  3A80               	movwf	(??_dispLCD_num+2)+0
  2282  0099  00AA               	movlw	80h
  2283  009A  3080               	subwf	(??_dispLCD_num+2)+0,w
  2284  009B  022A               	skipz
  2285  009C  1D03               	goto	u1005
  2286  009D  28A0               	movf	(dispLCD_num@tam),w
  2287  009E  0827               	subwf	0+(??_dispLCD_num+0)+0,w
  2288  009F  0228               u1005:
  2289  00A0                     
  2290                           	skipnc
  2291  00A0  1803               	goto	u1001
  2292  00A1  28A3               	goto	u1000
  2293  00A2  28A4               u1001:
  2294  00A3                     	goto	l1356
  2295  00A3  28AE               u1000:
  2296  00A4                     	
  2297                           l1354:	
  2298  00A4                     	movlw	low(02h)
  2299  00A4  3002               	bcf	status, 5	;RP0=0, select bank0
  2300  00A5  1283               	bcf	status, 6	;RP1=0, select bank0
  2301  00A6  1303               	subwf	(dispLCD_num@tam),w
  2302  00A7  0227               	skipnc
  2303  00A8  1803               	goto	u1011
  2304  00A9  28AB               	goto	u1010
  2305  00AA  28AC               u1011:
  2306  00AB                     	goto	l1348
  2307  00AB  2885               u1010:
  2308  00AC                     	goto	l1356
  2309  00AC  28AE               	
  2310                           l141:	
  2311  00AD                     	goto	l1356
  2312  00AD  28AE               	
  2313                           l142:	
  2314  00AE                     	line	189
  2315                           	
  2316                           l1356:	
  2317  00AE                     ;lcd.c: 189:     if( sinal )
  2318                           	bcf	status, 5	;RP0=0, select bank0
  2319  00AE  1283               	bcf	status, 6	;RP1=0, select bank0
  2320  00AF  1303               	movf	((dispLCD_num@sinal)),w
  2321  00B0  082D               	btfsc	status,2
  2322  00B1  1903               	goto	u1021
  2323  00B2  28B4               	goto	u1020
  2324  00B3  28B5               u1021:
  2325  00B4                     	goto	l144
  2326  00B4  28BC               u1020:
  2327  00B5                     	line	190
  2328                           	
  2329                           l1358:	
  2330  00B5                     ;lcd.c: 190:         dispLCD_dataReg('-');
  2331                           	movlw	low(02Dh)
  2332  00B5  302D               	fcall	_dispLCD_dataReg
  2333  00B6  120A  118A  232B  120A  118A  	goto	l144
  2334  00BB  28BC               	
  2335                           l143:	
  2336  00BC                     	line	192
  2337                           ;lcd.c: 192:     do
  2338                           	
  2339                           l144:	
  2340  00BC                     	line	194
  2341                           ;lcd.c: 193:     {;lcd.c: 194:         dispLCD_dataReg( (unsigned char)(num / div) + '0'
                                  );
  2342                           	bcf	status, 5	;RP0=0, select bank0
  2343  00BC  1283               	bcf	status, 6	;RP1=0, select bank0
  2344  00BD  1303               	movf	(dispLCD_num@div+1),w
  2345  00BE  082F               	movwf	(___awdiv@divisor+1)
  2346  00BF  00F4               	movf	(dispLCD_num@div),w
  2347  00C0  082E               	movwf	(___awdiv@divisor)
  2348  00C1  00F3               	movf	(dispLCD_num@num+1),w
  2349  00C2  0826               	movwf	(___awdiv@dividend+1)
  2350  00C3  00F6               	movf	(dispLCD_num@num),w
  2351  00C4  0825               	movwf	(___awdiv@dividend)
  2352  00C5  00F5               	fcall	___awdiv
  2353  00C6  120A  118A  2182  120A  118A  	movf	(0+(?___awdiv)),w
  2354  00CB  0873               	addlw	030h
  2355  00CC  3E30               	fcall	_dispLCD_dataReg
  2356  00CD  120A  118A  232B  120A  118A  	line	195
  2357                           ;lcd.c: 195:         num = num % div;
  2358                           	bcf	status, 5	;RP0=0, select bank0
  2359  00D2  1283               	bcf	status, 6	;RP1=0, select bank0
  2360  00D3  1303               	movf	(dispLCD_num@div+1),w
  2361  00D4  082F               	movwf	(___awmod@divisor+1)
  2362  00D5  00F4               	movf	(dispLCD_num@div),w
  2363  00D6  082E               	movwf	(___awmod@divisor)
  2364  00D7  00F3               	movf	(dispLCD_num@num+1),w
  2365  00D8  0826               	movwf	(___awmod@dividend+1)
  2366  00D9  00F6               	movf	(dispLCD_num@num),w
  2367  00DA  0825               	movwf	(___awmod@dividend)
  2368  00DB  00F5               	fcall	___awmod
  2369  00DC  120A  118A  21F5  120A  118A  	movf	(1+(?___awmod)),w
  2370  00E1  0874               	bcf	status, 5	;RP0=0, select bank0
  2371  00E2  1283               	bcf	status, 6	;RP1=0, select bank0
  2372  00E3  1303               	movwf	(dispLCD_num@num+1)
  2373  00E4  00A6               	movf	(0+(?___awmod)),w
  2374  00E5  0873               	movwf	(dispLCD_num@num)
  2375  00E6  00A5               	line	196
  2376                           ;lcd.c: 196:         div/=10;
  2377                           	movlw	0Ah
  2378  00E7  300A               	movwf	(___awdiv@divisor)
  2379  00E8  00F3               	movlw	0
  2380  00E9  3000               	movwf	((___awdiv@divisor))+1
  2381  00EA  00F4               	movf	(dispLCD_num@div+1),w
  2382  00EB  082F               	movwf	(___awdiv@dividend+1)
  2383  00EC  00F6               	movf	(dispLCD_num@div),w
  2384  00ED  082E               	movwf	(___awdiv@dividend)
  2385  00EE  00F5               	fcall	___awdiv
  2386  00EF  120A  118A  2182  120A  118A  	movf	(1+(?___awdiv)),w
  2387  00F4  0874               	bcf	status, 5	;RP0=0, select bank0
  2388  00F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2389  00F6  1303               	movwf	(dispLCD_num@div+1)
  2390  00F7  00AF               	movf	(0+(?___awdiv)),w
  2391  00F8  0873               	movwf	(dispLCD_num@div)
  2392  00F9  00AE               	line	197
  2393                           	
  2394                           l1360:	
  2395  00FA                     ;lcd.c: 197:     }
  2396                           	movf	(dispLCD_num@div+1),w
  2397  00FA  082F               	xorlw	80h
  2398  00FB  3A80               	movwf	btemp+1
  2399  00FC  00FF               	movlw	(0)^80h
  2400  00FD  3080               	subwf	btemp+1,w
  2401  00FE  027F               	skipz
  2402  00FF  1D03               	goto	u1035
  2403  0100  2903               	movlw	01h
  2404  0101  3001               	subwf	(dispLCD_num@div),w
  2405  0102  022E               u1035:
  2406  0103                     
  2407                           	skipnc
  2408  0103  1803               	goto	u1031
  2409  0104  2906               	goto	u1030
  2410  0105  2907               u1031:
  2411  0106                     	goto	l144
  2412  0106  28BC               u1030:
  2413  0107                     	goto	l146
  2414  0107  2908               	
  2415                           l145:	
  2416  0108                     	line	199
  2417                           	
  2418                           l146:	
  2419  0108                     	return
  2420  0108  0008               	opt stack 0
  2421                           GLOBAL	__end_of_dispLCD_num
  2422                           	__end_of_dispLCD_num:
  2423  0109                     	signat	_dispLCD_num,16505
  2424                           	global	___awmod
  2425                           
  2426 ;; *************** function ___awmod *****************
  2427 ;; Defined at:
  2428 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  divisor         2    3[COMMON] int 
  2431 ;;  dividend        2    5[COMMON] int 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  sign            1    1[BANK0 ] unsigned char 
  2434 ;;  counter         1    0[BANK0 ] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  2    3[COMMON] int 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2444 ;;      Params:         4       0       0       0       0
  2445 ;;      Locals:         0       2       0       0       0
  2446 ;;      Temps:          1       0       0       0       0
  2447 ;;      Totals:         5       2       0       0       0
  2448 ;;Total ram usage:        7 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    2
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_dispLCD_num
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  2458                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2459                           	line	5
  2460                           global __ptext7
  2461                           __ptext7:	;psect for function ___awmod
  2462  01F5                     psect	text7
  2463                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2464                           	line	5
  2465                           	global	__size_of___awmod
  2466                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  2467  0065                     	
  2468                           ___awmod:	
  2469  01F5                     ;incstack = 0
  2470                           	opt	stack 4
  2471                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2472                           	line	12
  2473                           	
  2474                           l1278:	
  2475  01F5                     	bcf	status, 5	;RP0=0, select bank0
  2476  01F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2477  01F6  1303               	clrf	(___awmod@sign)
  2478  01F7  01A1               	line	13
  2479                           	
  2480                           l1280:	
  2481  01F8                     	btfss	(___awmod@dividend+1),7
  2482  01F8  1FF6               	goto	u851
  2483  01F9  29FB               	goto	u850
  2484  01FA  29FC               u851:
  2485  01FB                     	goto	l1286
  2486  01FB  2A04               u850:
  2487  01FC                     	line	14
  2488                           	
  2489                           l1282:	
  2490  01FC                     	comf	(___awmod@dividend),f
  2491  01FC  09F5               	comf	(___awmod@dividend+1),f
  2492  01FD  09F6               	incf	(___awmod@dividend),f
  2493  01FE  0AF5               	skipnz
  2494  01FF  1903               	incf	(___awmod@dividend+1),f
  2495  0200  0AF6               	line	15
  2496                           	
  2497                           l1284:	
  2498  0201                     	clrf	(___awmod@sign)
  2499  0201  01A1               	incf	(___awmod@sign),f
  2500  0202  0AA1               	goto	l1286
  2501  0203  2A04               	line	16
  2502                           	
  2503                           l397:	
  2504  0204                     	line	17
  2505                           	
  2506                           l1286:	
  2507  0204                     	btfss	(___awmod@divisor+1),7
  2508  0204  1FF4               	goto	u861
  2509  0205  2A07               	goto	u860
  2510  0206  2A08               u861:
  2511  0207                     	goto	l1290
  2512  0207  2A0E               u860:
  2513  0208                     	line	18
  2514                           	
  2515                           l1288:	
  2516  0208                     	comf	(___awmod@divisor),f
  2517  0208  09F3               	comf	(___awmod@divisor+1),f
  2518  0209  09F4               	incf	(___awmod@divisor),f
  2519  020A  0AF3               	skipnz
  2520  020B  1903               	incf	(___awmod@divisor+1),f
  2521  020C  0AF4               	goto	l1290
  2522  020D  2A0E               	
  2523                           l398:	
  2524  020E                     	line	19
  2525                           	
  2526                           l1290:	
  2527  020E                     	movf	((___awmod@divisor)),w
  2528  020E  0873               iorwf	((___awmod@divisor+1)),w
  2529  020F  0474               	btfsc	status,2
  2530  0210  1903               	goto	u871
  2531  0211  2A13               	goto	u870
  2532  0212  2A14               u871:
  2533  0213                     	goto	l1308
  2534  0213  2A49               u870:
  2535  0214                     	line	20
  2536                           	
  2537                           l1292:	
  2538  0214                     	clrf	(___awmod@counter)
  2539  0214  01A0               	incf	(___awmod@counter),f
  2540  0215  0AA0               	line	21
  2541                           	goto	l1298
  2542  0216  2A23               	
  2543                           l401:	
  2544  0217                     	line	22
  2545                           	
  2546                           l1294:	
  2547  0217                     	movlw	01h
  2548  0217  3001               	
  2549                           u885:
  2550  0218                     	clrc
  2551  0218  1003               	rlf	(___awmod@divisor),f
  2552  0219  0DF3               	rlf	(___awmod@divisor+1),f
  2553  021A  0DF4               	addlw	-1
  2554  021B  3EFF               	skipz
  2555  021C  1D03               	goto	u885
  2556  021D  2A18               	line	23
  2557                           	
  2558                           l1296:	
  2559  021E                     	movlw	low(01h)
  2560  021E  3001               	movwf	(??___awmod+0)+0
  2561  021F  00F7               	movf	(??___awmod+0)+0,w
  2562  0220  0877               	addwf	(___awmod@counter),f
  2563  0221  07A0               	goto	l1298
  2564  0222  2A23               	line	24
  2565                           	
  2566                           l400:	
  2567  0223                     	line	21
  2568                           	
  2569                           l1298:	
  2570  0223                     	btfss	(___awmod@divisor+1),(15)&7
  2571  0223  1FF4               	goto	u891
  2572  0224  2A26               	goto	u890
  2573  0225  2A27               u891:
  2574  0226                     	goto	l1294
  2575  0226  2A17               u890:
  2576  0227                     	goto	l1300
  2577  0227  2A29               	
  2578                           l402:	
  2579  0228                     	goto	l1300
  2580  0228  2A29               	line	25
  2581                           	
  2582                           l403:	
  2583  0229                     	line	26
  2584                           	
  2585                           l1300:	
  2586  0229                     	movf	(___awmod@divisor+1),w
  2587  0229  0874               	subwf	(___awmod@dividend+1),w
  2588  022A  0276               	skipz
  2589  022B  1D03               	goto	u905
  2590  022C  2A2F               	movf	(___awmod@divisor),w
  2591  022D  0873               	subwf	(___awmod@dividend),w
  2592  022E  0275               u905:
  2593  022F                     	skipc
  2594  022F  1C03               	goto	u901
  2595  0230  2A32               	goto	u900
  2596  0231  2A33               u901:
  2597  0232                     	goto	l1304
  2598  0232  2A3A               u900:
  2599  0233                     	line	27
  2600                           	
  2601                           l1302:	
  2602  0233                     	movf	(___awmod@divisor),w
  2603  0233  0873               	subwf	(___awmod@dividend),f
  2604  0234  02F5               	movf	(___awmod@divisor+1),w
  2605  0235  0874               	skipc
  2606  0236  1C03               	decf	(___awmod@dividend+1),f
  2607  0237  03F6               	subwf	(___awmod@dividend+1),f
  2608  0238  02F6               	goto	l1304
  2609  0239  2A3A               	
  2610                           l404:	
  2611  023A                     	line	28
  2612                           	
  2613                           l1304:	
  2614  023A                     	movlw	01h
  2615  023A  3001               	
  2616                           u915:
  2617  023B                     	clrc
  2618  023B  1003               	rrf	(___awmod@divisor+1),f
  2619  023C  0CF4               	rrf	(___awmod@divisor),f
  2620  023D  0CF3               	addlw	-1
  2621  023E  3EFF               	skipz
  2622  023F  1D03               	goto	u915
  2623  0240  2A3B               	line	29
  2624                           	
  2625                           l1306:	
  2626  0241                     	movlw	01h
  2627  0241  3001               	subwf	(___awmod@counter),f
  2628  0242  02A0               	btfss	status,2
  2629  0243  1D03               	goto	u921
  2630  0244  2A46               	goto	u920
  2631  0245  2A47               u921:
  2632  0246                     	goto	l1300
  2633  0246  2A29               u920:
  2634  0247                     	goto	l1308
  2635  0247  2A49               	
  2636                           l405:	
  2637  0248                     	goto	l1308
  2638  0248  2A49               	line	30
  2639                           	
  2640                           l399:	
  2641  0249                     	line	31
  2642                           	
  2643                           l1308:	
  2644  0249                     	movf	((___awmod@sign)),w
  2645  0249  0821               	btfsc	status,2
  2646  024A  1903               	goto	u931
  2647  024B  2A4D               	goto	u930
  2648  024C  2A4E               u931:
  2649  024D                     	goto	l1312
  2650  024D  2A54               u930:
  2651  024E                     	line	32
  2652                           	
  2653                           l1310:	
  2654  024E                     	comf	(___awmod@dividend),f
  2655  024E  09F5               	comf	(___awmod@dividend+1),f
  2656  024F  09F6               	incf	(___awmod@dividend),f
  2657  0250  0AF5               	skipnz
  2658  0251  1903               	incf	(___awmod@dividend+1),f
  2659  0252  0AF6               	goto	l1312
  2660  0253  2A54               	
  2661                           l406:	
  2662  0254                     	line	33
  2663                           	
  2664                           l1312:	
  2665  0254                     	movf	(___awmod@dividend+1),w
  2666  0254  0876               	movwf	(?___awmod+1)
  2667  0255  00F4               	movf	(___awmod@dividend),w
  2668  0256  0875               	movwf	(?___awmod)
  2669  0257  00F3               	goto	l407
  2670  0258  2A59               	
  2671                           l1314:	
  2672  0259                     	line	34
  2673                           	
  2674                           l407:	
  2675  0259                     	return
  2676  0259  0008               	opt stack 0
  2677                           GLOBAL	__end_of___awmod
  2678                           	__end_of___awmod:
  2679  025A                     	signat	___awmod,8314
  2680                           	global	___awdiv
  2681                           
  2682 ;; *************** function ___awdiv *****************
  2683 ;; Defined at:
  2684 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  divisor         2    3[COMMON] int 
  2687 ;;  dividend        2    5[COMMON] int 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  quotient        2    2[BANK0 ] int 
  2690 ;;  sign            1    1[BANK0 ] unsigned char 
  2691 ;;  counter         1    0[BANK0 ] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  2    3[COMMON] int 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2, status,0
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2701 ;;      Params:         4       0       0       0       0
  2702 ;;      Locals:         0       4       0       0       0
  2703 ;;      Temps:          1       0       0       0       0
  2704 ;;      Totals:         5       4       0       0       0
  2705 ;;Total ram usage:        9 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    2
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_dispLCD_num
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  2715                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2716                           	line	5
  2717                           global __ptext8
  2718                           __ptext8:	;psect for function ___awdiv
  2719  0182                     psect	text8
  2720                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2721                           	line	5
  2722                           	global	__size_of___awdiv
  2723                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2724  0073                     	
  2725                           ___awdiv:	
  2726  0182                     ;incstack = 0
  2727                           	opt	stack 4
  2728                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2729                           	line	13
  2730                           	
  2731                           l1080:	
  2732  0182                     	bcf	status, 5	;RP0=0, select bank0
  2733  0182  1283               	bcf	status, 6	;RP1=0, select bank0
  2734  0183  1303               	clrf	(___awdiv@sign)
  2735  0184  01A1               	line	14
  2736                           	
  2737                           l1082:	
  2738  0185                     	btfss	(___awdiv@divisor+1),7
  2739  0185  1FF4               	goto	u531
  2740  0186  2988               	goto	u530
  2741  0187  2989               u531:
  2742  0188                     	goto	l1088
  2743  0188  2991               u530:
  2744  0189                     	line	15
  2745                           	
  2746                           l1084:	
  2747  0189                     	comf	(___awdiv@divisor),f
  2748  0189  09F3               	comf	(___awdiv@divisor+1),f
  2749  018A  09F4               	incf	(___awdiv@divisor),f
  2750  018B  0AF3               	skipnz
  2751  018C  1903               	incf	(___awdiv@divisor+1),f
  2752  018D  0AF4               	line	16
  2753                           	
  2754                           l1086:	
  2755  018E                     	clrf	(___awdiv@sign)
  2756  018E  01A1               	incf	(___awdiv@sign),f
  2757  018F  0AA1               	goto	l1088
  2758  0190  2991               	line	17
  2759                           	
  2760                           l384:	
  2761  0191                     	line	18
  2762                           	
  2763                           l1088:	
  2764  0191                     	btfss	(___awdiv@dividend+1),7
  2765  0191  1FF6               	goto	u541
  2766  0192  2994               	goto	u540
  2767  0193  2995               u541:
  2768  0194                     	goto	l1094
  2769  0194  299F               u540:
  2770  0195                     	line	19
  2771                           	
  2772                           l1090:	
  2773  0195                     	comf	(___awdiv@dividend),f
  2774  0195  09F5               	comf	(___awdiv@dividend+1),f
  2775  0196  09F6               	incf	(___awdiv@dividend),f
  2776  0197  0AF5               	skipnz
  2777  0198  1903               	incf	(___awdiv@dividend+1),f
  2778  0199  0AF6               	line	20
  2779                           	
  2780                           l1092:	
  2781  019A                     	movlw	low(01h)
  2782  019A  3001               	movwf	(??___awdiv+0)+0
  2783  019B  00F7               	movf	(??___awdiv+0)+0,w
  2784  019C  0877               	xorwf	(___awdiv@sign),f
  2785  019D  06A1               	goto	l1094
  2786  019E  299F               	line	21
  2787                           	
  2788                           l385:	
  2789  019F                     	line	22
  2790                           	
  2791                           l1094:	
  2792  019F                     	clrf	(___awdiv@quotient)
  2793  019F  01A2               	clrf	(___awdiv@quotient+1)
  2794  01A0  01A3               	line	23
  2795                           	
  2796                           l1096:	
  2797  01A1                     	movf	((___awdiv@divisor)),w
  2798  01A1  0873               iorwf	((___awdiv@divisor+1)),w
  2799  01A2  0474               	btfsc	status,2
  2800  01A3  1903               	goto	u551
  2801  01A4  29A6               	goto	u550
  2802  01A5  29A7               u551:
  2803  01A6                     	goto	l1116
  2804  01A6  29E4               u550:
  2805  01A7                     	line	24
  2806                           	
  2807                           l1098:	
  2808  01A7                     	clrf	(___awdiv@counter)
  2809  01A7  01A0               	incf	(___awdiv@counter),f
  2810  01A8  0AA0               	line	25
  2811                           	goto	l1104
  2812  01A9  29B6               	
  2813                           l388:	
  2814  01AA                     	line	26
  2815                           	
  2816                           l1100:	
  2817  01AA                     	movlw	01h
  2818  01AA  3001               	
  2819                           u565:
  2820  01AB                     	clrc
  2821  01AB  1003               	rlf	(___awdiv@divisor),f
  2822  01AC  0DF3               	rlf	(___awdiv@divisor+1),f
  2823  01AD  0DF4               	addlw	-1
  2824  01AE  3EFF               	skipz
  2825  01AF  1D03               	goto	u565
  2826  01B0  29AB               	line	27
  2827                           	
  2828                           l1102:	
  2829  01B1                     	movlw	low(01h)
  2830  01B1  3001               	movwf	(??___awdiv+0)+0
  2831  01B2  00F7               	movf	(??___awdiv+0)+0,w
  2832  01B3  0877               	addwf	(___awdiv@counter),f
  2833  01B4  07A0               	goto	l1104
  2834  01B5  29B6               	line	28
  2835                           	
  2836                           l387:	
  2837  01B6                     	line	25
  2838                           	
  2839                           l1104:	
  2840  01B6                     	btfss	(___awdiv@divisor+1),(15)&7
  2841  01B6  1FF4               	goto	u571
  2842  01B7  29B9               	goto	u570
  2843  01B8  29BA               u571:
  2844  01B9                     	goto	l1100
  2845  01B9  29AA               u570:
  2846  01BA                     	goto	l1106
  2847  01BA  29BC               	
  2848                           l389:	
  2849  01BB                     	goto	l1106
  2850  01BB  29BC               	line	29
  2851                           	
  2852                           l390:	
  2853  01BC                     	line	30
  2854                           	
  2855                           l1106:	
  2856  01BC                     	movlw	01h
  2857  01BC  3001               	
  2858                           u585:
  2859  01BD                     	clrc
  2860  01BD  1003               	rlf	(___awdiv@quotient),f
  2861  01BE  0DA2               	rlf	(___awdiv@quotient+1),f
  2862  01BF  0DA3               	addlw	-1
  2863  01C0  3EFF               	skipz
  2864  01C1  1D03               	goto	u585
  2865  01C2  29BD               	line	31
  2866                           	movf	(___awdiv@divisor+1),w
  2867  01C3  0874               	subwf	(___awdiv@dividend+1),w
  2868  01C4  0276               	skipz
  2869  01C5  1D03               	goto	u595
  2870  01C6  29C9               	movf	(___awdiv@divisor),w
  2871  01C7  0873               	subwf	(___awdiv@dividend),w
  2872  01C8  0275               u595:
  2873  01C9                     	skipc
  2874  01C9  1C03               	goto	u591
  2875  01CA  29CC               	goto	u590
  2876  01CB  29CD               u591:
  2877  01CC                     	goto	l1112
  2878  01CC  29D5               u590:
  2879  01CD                     	line	32
  2880                           	
  2881                           l1108:	
  2882  01CD                     	movf	(___awdiv@divisor),w
  2883  01CD  0873               	subwf	(___awdiv@dividend),f
  2884  01CE  02F5               	movf	(___awdiv@divisor+1),w
  2885  01CF  0874               	skipc
  2886  01D0  1C03               	decf	(___awdiv@dividend+1),f
  2887  01D1  03F6               	subwf	(___awdiv@dividend+1),f
  2888  01D2  02F6               	line	33
  2889                           	
  2890                           l1110:	
  2891  01D3                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  2892  01D3  1422               	goto	l1112
  2893  01D4  29D5               	line	34
  2894                           	
  2895                           l391:	
  2896  01D5                     	line	35
  2897                           	
  2898                           l1112:	
  2899  01D5                     	movlw	01h
  2900  01D5  3001               	
  2901                           u605:
  2902  01D6                     	clrc
  2903  01D6  1003               	rrf	(___awdiv@divisor+1),f
  2904  01D7  0CF4               	rrf	(___awdiv@divisor),f
  2905  01D8  0CF3               	addlw	-1
  2906  01D9  3EFF               	skipz
  2907  01DA  1D03               	goto	u605
  2908  01DB  29D6               	line	36
  2909                           	
  2910                           l1114:	
  2911  01DC                     	movlw	01h
  2912  01DC  3001               	subwf	(___awdiv@counter),f
  2913  01DD  02A0               	btfss	status,2
  2914  01DE  1D03               	goto	u611
  2915  01DF  29E1               	goto	u610
  2916  01E0  29E2               u611:
  2917  01E1                     	goto	l1106
  2918  01E1  29BC               u610:
  2919  01E2                     	goto	l1116
  2920  01E2  29E4               	
  2921                           l392:	
  2922  01E3                     	goto	l1116
  2923  01E3  29E4               	line	37
  2924                           	
  2925                           l386:	
  2926  01E4                     	line	38
  2927                           	
  2928                           l1116:	
  2929  01E4                     	movf	((___awdiv@sign)),w
  2930  01E4  0821               	btfsc	status,2
  2931  01E5  1903               	goto	u621
  2932  01E6  29E8               	goto	u620
  2933  01E7  29E9               u621:
  2934  01E8                     	goto	l1120
  2935  01E8  29EF               u620:
  2936  01E9                     	line	39
  2937                           	
  2938                           l1118:	
  2939  01E9                     	comf	(___awdiv@quotient),f
  2940  01E9  09A2               	comf	(___awdiv@quotient+1),f
  2941  01EA  09A3               	incf	(___awdiv@quotient),f
  2942  01EB  0AA2               	skipnz
  2943  01EC  1903               	incf	(___awdiv@quotient+1),f
  2944  01ED  0AA3               	goto	l1120
  2945  01EE  29EF               	
  2946                           l393:	
  2947  01EF                     	line	40
  2948                           	
  2949                           l1120:	
  2950  01EF                     	movf	(___awdiv@quotient+1),w
  2951  01EF  0823               	movwf	(?___awdiv+1)
  2952  01F0  00F4               	movf	(___awdiv@quotient),w
  2953  01F1  0822               	movwf	(?___awdiv)
  2954  01F2  00F3               	goto	l394
  2955  01F3  29F4               	
  2956                           l1122:	
  2957  01F4                     	line	41
  2958                           	
  2959                           l394:	
  2960  01F4                     	return
  2961  01F4  0008               	opt stack 0
  2962                           GLOBAL	__end_of___awdiv
  2963                           	__end_of___awdiv:
  2964  01F5                     	signat	___awdiv,8314
  2965                           	global	_dispLCD_init
  2966                           
  2967 ;; *************** function _dispLCD_init *****************
  2968 ;; Defined at:
  2969 ;;		line 124 in file "lcd.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0, pclath, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983 ;;      Params:         0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0
  2986 ;;      Totals:         0       0       0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    3
  2990 ;; This function calls:
  2991 ;;		_delay
  2992 ;;		_dispLCD_instReg
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  2998                           	file	"lcd.c"
  2999                           	line	124
  3000                           global __ptext9
  3001                           __ptext9:	;psect for function _dispLCD_init
  3002  02AF                     psect	text9
  3003                           	file	"lcd.c"
  3004                           	line	124
  3005                           	global	__size_of_dispLCD_init
  3006                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  3007  0041                     	
  3008                           _dispLCD_init:	
  3009  02AF                     ;incstack = 0
  3010                           	opt	stack 4
  3011                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  3012                           	line	126
  3013                           	
  3014                           l1168:	
  3015  02AF                     ;lcd.c: 126:     delay(100);
  3016                           	movlw	064h
  3017  02AF  3064               	movwf	(delay@t)
  3018  02B0  00F3               	movlw	0
  3019  02B1  3000               	movwf	((delay@t))+1
  3020  02B2  00F4               	fcall	_delay
  3021  02B3  120A  118A  23C4  120A  118A  	line	127
  3022                           	
  3023                           l1170:	
  3024  02B8                     ;lcd.c: 127:     TRISDbits.TRISD0 = 0;
  3025                           	bsf	status, 5	;RP0=1, select bank1
  3026  02B8  1683               	bcf	status, 6	;RP1=0, select bank1
  3027  02B9  1303               	bcf	(136)^080h,0	;volatile
  3028  02BA  1008               	line	128
  3029                           	
  3030                           l1172:	
  3031  02BB                     ;lcd.c: 128:     TRISDbits.TRISD1 = 0;
  3032                           	bcf	(136)^080h,1	;volatile
  3033  02BB  1088               	line	129
  3034                           	
  3035                           l1174:	
  3036  02BC                     ;lcd.c: 129:     TRISDbits.TRISD2 = 0;
  3037                           	bcf	(136)^080h,2	;volatile
  3038  02BC  1108               	line	130
  3039                           	
  3040                           l1176:	
  3041  02BD                     ;lcd.c: 130:     TRISDbits.TRISD3 = 0;
  3042                           	bcf	(136)^080h,3	;volatile
  3043  02BD  1188               	line	131
  3044                           	
  3045                           l1178:	
  3046  02BE                     ;lcd.c: 131:     TRISDbits.TRISD4 = 0;
  3047                           	bcf	(136)^080h,4	;volatile
  3048  02BE  1208               	line	132
  3049                           	
  3050                           l1180:	
  3051  02BF                     ;lcd.c: 132:     TRISDbits.TRISD5 = 0;
  3052                           	bcf	(136)^080h,5	;volatile
  3053  02BF  1288               	line	133
  3054                           	
  3055                           l1182:	
  3056  02C0                     ;lcd.c: 133:     TRISDbits.TRISD6 = 1;
  3057                           	bsf	(136)^080h,6	;volatile
  3058  02C0  1708               	line	134
  3059                           	
  3060                           l1184:	
  3061  02C1                     ;lcd.c: 134:     TRISDbits.TRISD7 = 1;
  3062                           	bsf	(136)^080h,7	;volatile
  3063  02C1  1788               	line	135
  3064                           ;lcd.c: 135:     delay(100);
  3065                           	movlw	064h
  3066  02C2  3064               	movwf	(delay@t)
  3067  02C3  00F3               	movlw	0
  3068  02C4  3000               	movwf	((delay@t))+1
  3069  02C5  00F4               	fcall	_delay
  3070  02C6  120A  118A  23C4  120A  118A  	line	136
  3071                           	
  3072                           l1186:	
  3073  02CB                     ;lcd.c: 136:     LCDbits.EN = 1;
  3074                           	bcf	status, 5	;RP0=0, select bank0
  3075  02CB  1283               	bcf	status, 6	;RP1=0, select bank0
  3076  02CC  1303               	bsf	(8),5	;volatile
  3077  02CD  1688               	line	137
  3078                           ;lcd.c: 137:     dispLCD_instReg( 0x20|0x00|0x08);
  3079                           	movlw	low(028h)
  3080  02CE  3028               	fcall	_dispLCD_instReg
  3081  02CF  120A  118A  2109  120A  118A  	line	138
  3082                           ;lcd.c: 138:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  3083                           	movlw	low(0Ch)
  3084  02D4  300C               	fcall	_dispLCD_instReg
  3085  02D5  120A  118A  2109  120A  118A  	line	139
  3086                           ;lcd.c: 139:     dispLCD_instReg( 0x01 );
  3087                           	movlw	low(01h)
  3088  02DA  3001               	fcall	_dispLCD_instReg
  3089  02DB  120A  118A  2109  120A  118A  	line	140
  3090                           ;lcd.c: 140:     dispLCD_instReg( 0x02 );
  3091                           	movlw	low(02h)
  3092  02E0  3002               	fcall	_dispLCD_instReg
  3093  02E1  120A  118A  2109  120A  118A  	line	141
  3094                           ;lcd.c: 141:     delay(100);
  3095                           	movlw	064h
  3096  02E6  3064               	movwf	(delay@t)
  3097  02E7  00F3               	movlw	0
  3098  02E8  3000               	movwf	((delay@t))+1
  3099  02E9  00F4               	fcall	_delay
  3100  02EA  120A  118A  23C4  120A  118A  	line	142
  3101                           	
  3102                           l123:	
  3103  02EF                     	return
  3104  02EF  0008               	opt stack 0
  3105                           GLOBAL	__end_of_dispLCD_init
  3106                           	__end_of_dispLCD_init:
  3107  02F0                     	signat	_dispLCD_init,89
  3108                           	global	_delay
  3109                           
  3110 ;; *************** function _delay *****************
  3111 ;; Defined at:
  3112 ;;		line 12 in file "delay.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  t               2    3[COMMON] unsigned int 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3126 ;;      Params:         2       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0
  3128 ;;      Temps:          1       0       0       0       0
  3129 ;;      Totals:         3       0       0       0       0
  3130 ;;Total ram usage:        3 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    2
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_dispLCD_init
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3140                           	file	"delay.c"
  3141                           	line	12
  3142                           global __ptext10
  3143                           __ptext10:	;psect for function _delay
  3144  03C4                     psect	text10
  3145                           	file	"delay.c"
  3146                           	line	12
  3147                           	global	__size_of_delay
  3148                           	__size_of_delay	equ	__end_of_delay-_delay
  3149  0017                     	
  3150                           _delay:	
  3151  03C4                     ;incstack = 0
  3152                           	opt	stack 4
  3153                           ; Regs used in _delay: [wreg+status,2+status,0]
  3154                           	line	14
  3155                           	
  3156                           l1054:	
  3157  03C4                     ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  3158                           	goto	l1058
  3159  03C4  2BD3               	
  3160                           l92:	
  3161  03C5                     	line	16
  3162                           	
  3163                           l1056:	
  3164  03C5                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));

  3165                           	opt asmopt_push
  3166                           opt asmopt_off
  3167                           	movlw	199
  3168  03C5  30C7               movwf	((??_delay+0)+0),f
  3169  03C6  00F5               	u1047:
  3170  03C7                     	nop2
  3171  03C7  2BC8               decfsz	(??_delay+0)+0,f
  3172  03C8  0BF5               	goto	u1047
  3173  03C9  2BC7               	nop2
  3174  03CA  2BCB               	nop2
  3175  03CB  2BCC               opt asmopt_pop
  3176                           
  3177                           	line	17
  3178                           ;delay.c: 17:         --t;
  3179                           	movlw	01h
  3180  03CC  3001               	subwf	(delay@t),f
  3181  03CD  02F3               	movlw	0
  3182  03CE  3000               	skipc
  3183  03CF  1C03               	decf	(delay@t+1),f
  3184  03D0  03F4               	subwf	(delay@t+1),f
  3185  03D1  02F4               	goto	l1058
  3186  03D2  2BD3               	line	18
  3187                           ;delay.c: 18:     }
  3188                           	
  3189                           l91:	
  3190  03D3                     	line	14
  3191                           	
  3192                           l1058:	
  3193  03D3                     ;delay.c: 14:     while( t )
  3194                           	movf	((delay@t)),w
  3195  03D3  0873               iorwf	((delay@t+1)),w
  3196  03D4  0474               	btfss	status,2
  3197  03D5  1D03               	goto	u501
  3198  03D6  2BD8               	goto	u500
  3199  03D7  2BD9               u501:
  3200  03D8                     	goto	l1056
  3201  03D8  2BC5               u500:
  3202  03D9                     	goto	l94
  3203  03D9  2BDA               	
  3204                           l93:	
  3205  03DA                     	line	19
  3206                           	
  3207                           l94:	
  3208  03DA                     	return
  3209  03DA  0008               	opt stack 0
  3210                           GLOBAL	__end_of_delay
  3211                           	__end_of_delay:
  3212  03DB                     	signat	_delay,4217
  3213                           	global	_dispLCD
  3214                           
  3215 ;; *************** function _dispLCD *****************
  3216 ;; Defined at:
  3217 ;;		line 145 in file "lcd.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  lin             1    wreg     unsigned char 
  3220 ;;  col             1    0[BANK0 ] unsigned char 
  3221 ;;  str             1    1[BANK0 ] PTR const unsigned char 
  3222 ;;		 -> STR_1(17), 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  lin             1    4[BANK0 ] unsigned char 
  3225 ;;  pos             1    3[BANK0 ] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       2       0       0       0
  3236 ;;      Locals:         0       2       0       0       0
  3237 ;;      Temps:          0       1       0       0       0
  3238 ;;      Totals:         0       5       0       0       0
  3239 ;;Total ram usage:        5 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    4
  3242 ;; This function calls:
  3243 ;;		_dispLCD_dataReg
  3244 ;;		_dispLCD_lincol
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3250                           	file	"lcd.c"
  3251                           	line	145
  3252                           global __ptext11
  3253                           __ptext11:	;psect for function _dispLCD
  3254  02F0                     psect	text11
  3255                           	file	"lcd.c"
  3256                           	line	145
  3257                           	global	__size_of_dispLCD
  3258                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
  3259  003B                     	
  3260                           _dispLCD:	
  3261  02F0                     ;incstack = 0
  3262                           	opt	stack 3
  3263                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3264                           ;dispLCD@lin stored from wreg
  3265                           	bcf	status, 5	;RP0=0, select bank0
  3266  02F0  1283               	bcf	status, 6	;RP1=0, select bank0
  3267  02F1  1303               	movwf	(dispLCD@lin)
  3268  02F2  00A4               	line	147
  3269                           	
  3270                           l1316:	
  3271  02F3                     ;lcd.c: 145: void dispLCD( unsigned char lin, unsigned char col, const char * str );lcd.
                                 c: 146: {;lcd.c: 147:     char pos = col;
  3272                           	movf	(dispLCD@col),w
  3273  02F3  0820               	movwf	(??_dispLCD+0)+0
  3274  02F4  00A2               	movf	(??_dispLCD+0)+0,w
  3275  02F5  0822               	movwf	(dispLCD@pos)
  3276  02F6  00A3               	line	148
  3277                           	
  3278                           l1318:	
  3279  02F7                     ;lcd.c: 148:     dispLCD_lincol( lin, col );
  3280                           	movf	(dispLCD@col),w
  3281  02F7  0820               	movwf	(??_dispLCD+0)+0
  3282  02F8  00A2               	movf	(??_dispLCD+0)+0,w
  3283  02F9  0822               	movwf	(dispLCD_lincol@col)
  3284  02FA  00F6               	movf	(dispLCD@lin),w
  3285  02FB  0824               	fcall	_dispLCD_lincol
  3286  02FC  120A  118A  23DB  120A  118A  	line	150
  3287                           ;lcd.c: 150:     while( *str )
  3288                           	goto	l1326
  3289  0301  2B1B               	
  3290                           l127:	
  3291  0302                     	line	152
  3292                           	
  3293                           l1320:	
  3294  0302                     ;lcd.c: 151:     {;lcd.c: 152:         dispLCD_dataReg( *str );
  3295                           	bcf	status, 5	;RP0=0, select bank0
  3296  0302  1283               	bcf	status, 6	;RP1=0, select bank0
  3297  0303  1303               	movf	(dispLCD@str),w
  3298  0304  0821               	movwf	fsr0
  3299  0305  0084               	fcall	stringdir
  3300  0306  120A  118A  23AD  120A  118A  	fcall	_dispLCD_dataReg
  3301  030B  120A  118A  232B  120A  118A  	line	153
  3302                           	
  3303                           l1322:	
  3304  0310                     ;lcd.c: 153:         ++str;
  3305                           	movlw	low(01h)
  3306  0310  3001               	bcf	status, 5	;RP0=0, select bank0
  3307  0311  1283               	bcf	status, 6	;RP1=0, select bank0
  3308  0312  1303               	movwf	(??_dispLCD+0)+0
  3309  0313  00A2               	movf	(??_dispLCD+0)+0,w
  3310  0314  0822               	addwf	(dispLCD@str),f
  3311  0315  07A1               	line	154
  3312                           	
  3313                           l1324:	
  3314  0316                     ;lcd.c: 154:         ++pos;
  3315                           	movlw	low(01h)
  3316  0316  3001               	movwf	(??_dispLCD+0)+0
  3317  0317  00A2               	movf	(??_dispLCD+0)+0,w
  3318  0318  0822               	addwf	(dispLCD@pos),f
  3319  0319  07A3               	goto	l1326
  3320  031A  2B1B               	line	155
  3321                           ;lcd.c: 155:     }
  3322                           	
  3323                           l126:	
  3324  031B                     	line	150
  3325                           	
  3326                           l1326:	
  3327  031B                     ;lcd.c: 150:     while( *str )
  3328                           	bcf	status, 5	;RP0=0, select bank0
  3329  031B  1283               	bcf	status, 6	;RP1=0, select bank0
  3330  031C  1303               	movf	(dispLCD@str),w
  3331  031D  0821               	movwf	fsr0
  3332  031E  0084               	fcall	stringdir
  3333  031F  120A  118A  23AD  120A  118A  	xorlw	0
  3334  0324  3A00               	skipz
  3335  0325  1D03               	goto	u941
  3336  0326  2B28               	goto	u940
  3337  0327  2B29               u941:
  3338  0328                     	goto	l1320
  3339  0328  2B02               u940:
  3340  0329                     	goto	l129
  3341  0329  2B2A               	
  3342                           l128:	
  3343  032A                     	line	156
  3344                           	
  3345                           l129:	
  3346  032A                     	return
  3347  032A  0008               	opt stack 0
  3348                           GLOBAL	__end_of_dispLCD
  3349                           	__end_of_dispLCD:
  3350  032B                     	signat	_dispLCD,12409
  3351                           	global	_dispLCD_lincol
  3352                           
  3353 ;; *************** function _dispLCD_lincol *****************
  3354 ;; Defined at:
  3355 ;;		line 118 in file "lcd.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  lin             1    wreg     unsigned char 
  3358 ;;  col             1    6[COMMON] unsigned char 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  lin             1    8[COMMON] unsigned char 
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, pclath, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3370 ;;      Params:         1       0       0       0       0
  3371 ;;      Locals:         1       0       0       0       0
  3372 ;;      Temps:          1       0       0       0       0
  3373 ;;      Totals:         3       0       0       0       0
  3374 ;;Total ram usage:        3 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    3
  3377 ;; This function calls:
  3378 ;;		_dispLCD_instReg
  3379 ;; This function is called by:
  3380 ;;		_dispLCD
  3381 ;;		_dispLCD_num
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3385                           	line	118
  3386                           global __ptext12
  3387                           __ptext12:	;psect for function _dispLCD_lincol
  3388  03DB                     psect	text12
  3389                           	file	"lcd.c"
  3390                           	line	118
  3391                           	global	__size_of_dispLCD_lincol
  3392                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  3393  0013                     	
  3394                           _dispLCD_lincol:	
  3395  03DB                     ;incstack = 0
  3396                           	opt	stack 3
  3397                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  3398                           ;dispLCD_lincol@lin stored from wreg
  3399                           	movwf	(dispLCD_lincol@lin)
  3400  03DB  00F8               	line	120
  3401                           	
  3402                           l1078:	
  3403  03DC                     ;lcd.c: 118: void dispLCD_lincol( unsigned char lin, unsigned char col);lcd.c: 119: {;lc
                                 d.c: 120:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  3404                           	movf	(dispLCD_lincol@lin),w
  3405  03DC  0878               	movwf	(??_dispLCD_lincol+0)+0
  3406  03DD  00F7               	movlw	06h
  3407  03DE  3006               u525:
  3408  03DF                     	clrc
  3409  03DF  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  3410  03E0  0DF7               	addlw	-1
  3411  03E1  3EFF               	skipz
  3412  03E2  1D03               	goto	u525
  3413  03E3  2BDF               	movf	(dispLCD_lincol@col),w
  3414  03E4  0876               	addwf	0+(??_dispLCD_lincol+0)+0,w
  3415  03E5  0777               	andlw	07Fh
  3416  03E6  397F               	addlw	080h
  3417  03E7  3E80               	fcall	_dispLCD_instReg
  3418  03E8  120A  118A  2109  120A  118A  	line	121
  3419                           	
  3420                           l120:	
  3421  03ED                     	return
  3422  03ED  0008               	opt stack 0
  3423                           GLOBAL	__end_of_dispLCD_lincol
  3424                           	__end_of_dispLCD_lincol:
  3425  03EE                     	signat	_dispLCD_lincol,8313
  3426                           	global	_dispLCD_instReg
  3427                           
  3428 ;; *************** function _dispLCD_instReg *****************
  3429 ;; Defined at:
  3430 ;;		line 69 in file "lcd.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  i               1    wreg     unsigned char 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  i               1    5[COMMON] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       0       0       0       0
  3445 ;;      Locals:         1       0       0       0       0
  3446 ;;      Temps:          2       0       0       0       0
  3447 ;;      Totals:         3       0       0       0       0
  3448 ;;Total ram usage:        3 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    2
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_dispLCD_lincol
  3455 ;;		_dispLCD_init
  3456 ;;		_dispLCD_clr
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3460                           	line	69
  3461                           global __ptext13
  3462                           __ptext13:	;psect for function _dispLCD_instReg
  3463  0109                     psect	text13
  3464                           	file	"lcd.c"
  3465                           	line	69
  3466                           	global	__size_of_dispLCD_instReg
  3467                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  3468  0079                     	
  3469                           _dispLCD_instReg:	
  3470  0109                     ;incstack = 0
  3471                           	opt	stack 3
  3472                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  3473                           ;dispLCD_instReg@i stored from wreg
  3474                           	movwf	(dispLCD_instReg@i)
  3475  0109  00F5               	line	71
  3476                           	
  3477                           l1010:	
  3478  010A                     ;lcd.c: 69: void dispLCD_instReg( unsigned char i );lcd.c: 70: {;lcd.c: 71:     LCDbits.
                                 RS = 0;
  3479                           	bcf	status, 5	;RP0=0, select bank0
  3480  010A  1283               	bcf	status, 6	;RP1=0, select bank0
  3481  010B  1303               	bcf	(8),4	;volatile
  3482  010C  1208               	line	72
  3483                           	
  3484                           l1012:	
  3485  010D                     ;lcd.c: 72:     LCDbits.BUS = (i>>4);
  3486                           	movf	(dispLCD_instReg@i),w
  3487  010D  0875               	movwf	(??_dispLCD_instReg+0)+0
  3488  010E  00F3               	movlw	04h
  3489  010F  3004               u435:
  3490  0110                     	clrc
  3491  0110  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  3492  0111  0CF3               	addlw	-1
  3493  0112  3EFF               	skipz
  3494  0113  1D03               	goto	u435
  3495  0114  2910               	movf	(8),w	;volatile
  3496  0115  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3497  0116  0673               	andlw	not ((1<<4)-1)
  3498  0117  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3499  0118  0673               	movwf	(8)	;volatile
  3500  0119  0088               	line	74
  3501                           	
  3502                           l1014:	
  3503  011A                     ;lcd.c: 74:     LCDbits.EN = 0;
  3504                           	bcf	(8),5	;volatile
  3505  011A  1288               	line	75
  3506                           ;lcd.c: 75:     if( i == 0x01 || i == 0x02 )
  3507                           		decf	((dispLCD_instReg@i)),w
  3508  011B  0375               	btfsc	status,2
  3509  011C  1903               	goto	u441
  3510  011D  291F               	goto	u440
  3511  011E  2920               u441:
  3512  011F                     	goto	l1018
  3513  011F  2927               u440:
  3514  0120                     	
  3515                           l1016:	
  3516  0120                     		movlw	2
  3517  0120  3002               	xorwf	((dispLCD_instReg@i)),w
  3518  0121  0675               	btfss	status,2
  3519  0122  1D03               	goto	u451
  3520  0123  2925               	goto	u450
  3521  0124  2926               u451:
  3522  0125                     	goto	l1020
  3523  0125  2931               u450:
  3524  0126                     	goto	l1018
  3525  0126  2927               	
  3526                           l107:	
  3527  0127                     	line	76
  3528                           	
  3529                           l1018:	
  3530  0127                     ;lcd.c: 76:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3531                           	opt asmopt_push
  3532                           opt asmopt_off
  3533                           movlw	3
  3534  0127  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  3535  0128  00F4               	movlw	151
  3536  0129  3097               movwf	((??_dispLCD_instReg+0)+0),f
  3537  012A  00F3               	u1057:
  3538  012B                     decfsz	((??_dispLCD_instReg+0)+0),f
  3539  012B  0BF3               	goto	u1057
  3540  012C  292B               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  3541  012D  0BF4               	goto	u1057
  3542  012E  292B               	nop2
  3543  012F  2930               opt asmopt_pop
  3544                           
  3545                           	goto	l1022
  3546  0130  2936               	line	77
  3547                           ;lcd.c: 77:     else
  3548                           	
  3549                           l105:	
  3550  0131                     	line	78
  3551                           	
  3552                           l1020:	
  3553  0131                     ;lcd.c: 78:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3554                           	opt asmopt_push
  3555                           opt asmopt_off
  3556                           	movlw	13
  3557  0131  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3558  0132  00F3               	u1067:
  3559  0133                     decfsz	(??_dispLCD_instReg+0)+0,f
  3560  0133  0BF3               	goto	u1067
  3561  0134  2933               opt asmopt_pop
  3562                           
  3563                           	goto	l1022
  3564  0135  2936               	
  3565                           l108:	
  3566  0136                     	line	79
  3567                           	
  3568                           l1022:	
  3569  0136                     ;lcd.c: 79:     LCDbits.EN = 1;
  3570                           	bcf	status, 5	;RP0=0, select bank0
  3571  0136  1283               	bcf	status, 6	;RP1=0, select bank0
  3572  0137  1303               	bsf	(8),5	;volatile
  3573  0138  1688               	line	82
  3574                           	
  3575                           l1024:	
  3576  0139                     ;lcd.c: 82:     if( (i & 0xF0) == (0x20 | 0x00) )
  3577                           	movlw	low(0F0h)
  3578  0139  30F0               	andwf	(dispLCD_instReg@i),w
  3579  013A  0575               	movwf	(??_dispLCD_instReg+0)+0
  3580  013B  00F3               		movlw	32
  3581  013C  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  3582  013D  0673               	btfss	status,2
  3583  013E  1D03               	goto	u461
  3584  013F  2941               	goto	u460
  3585  0140  2942               u461:
  3586  0141                     	goto	l1036
  3587  0141  2959               u460:
  3588  0142                     	line	84
  3589                           	
  3590                           l1026:	
  3591  0142                     ;lcd.c: 83:     {;lcd.c: 84:         LCDbits.RS = 0;
  3592                           	bcf	(8),4	;volatile
  3593  0142  1208               	line	85
  3594                           	
  3595                           l1028:	
  3596  0143                     ;lcd.c: 85:         LCDbits.BUS = i>>4;
  3597                           	movf	(dispLCD_instReg@i),w
  3598  0143  0875               	movwf	(??_dispLCD_instReg+0)+0
  3599  0144  00F3               	movlw	04h
  3600  0145  3004               u475:
  3601  0146                     	clrc
  3602  0146  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  3603  0147  0CF3               	addlw	-1
  3604  0148  3EFF               	skipz
  3605  0149  1D03               	goto	u475
  3606  014A  2946               	movf	(8),w	;volatile
  3607  014B  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3608  014C  0673               	andlw	not ((1<<4)-1)
  3609  014D  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3610  014E  0673               	movwf	(8)	;volatile
  3611  014F  0088               	line	86
  3612                           	
  3613                           l1030:	
  3614  0150                     ;lcd.c: 86:         LCDbits.EN = 0;
  3615                           	bcf	(8),5	;volatile
  3616  0150  1288               	line	87
  3617                           	
  3618                           l1032:	
  3619  0151                     ;lcd.c: 87:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3620                           	opt asmopt_push
  3621                           opt asmopt_off
  3622                           	movlw	13
  3623  0151  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3624  0152  00F3               	u1077:
  3625  0153                     decfsz	(??_dispLCD_instReg+0)+0,f
  3626  0153  0BF3               	goto	u1077
  3627  0154  2953               opt asmopt_pop
  3628                           
  3629                           	line	88
  3630                           	
  3631                           l1034:	
  3632  0155                     ;lcd.c: 88:         LCDbits.EN = 1;
  3633                           	bcf	status, 5	;RP0=0, select bank0
  3634  0155  1283               	bcf	status, 6	;RP1=0, select bank0
  3635  0156  1303               	bsf	(8),5	;volatile
  3636  0157  1688               	goto	l1036
  3637  0158  2959               	line	89
  3638                           ;lcd.c: 89:     }
  3639                           	
  3640                           l109:	
  3641  0159                     	line	91
  3642                           	
  3643                           l1036:	
  3644  0159                     ;lcd.c: 91:     LCDbits.RS = 0;
  3645                           	bcf	(8),4	;volatile
  3646  0159  1208               	line	92
  3647                           	
  3648                           l1038:	
  3649  015A                     ;lcd.c: 92:     LCDbits.BUS = i & 0x0F;
  3650                           	movlw	low(0Fh)
  3651  015A  300F               	andwf	(dispLCD_instReg@i),w
  3652  015B  0575               	movwf	(??_dispLCD_instReg+0)+0
  3653  015C  00F3               	movf	(8),w	;volatile
  3654  015D  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3655  015E  0673               	andlw	not ((1<<4)-1)
  3656  015F  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3657  0160  0673               	movwf	(8)	;volatile
  3658  0161  0088               	line	93
  3659                           	
  3660                           l1040:	
  3661  0162                     ;lcd.c: 93:     LCDbits.EN = 0;
  3662                           	bcf	(8),5	;volatile
  3663  0162  1288               	line	94
  3664                           	
  3665                           l1042:	
  3666  0163                     ;lcd.c: 94:     if( i == 0x01 || i == 0x02 )
  3667                           		decf	((dispLCD_instReg@i)),w
  3668  0163  0375               	btfsc	status,2
  3669  0164  1903               	goto	u481
  3670  0165  2967               	goto	u480
  3671  0166  2968               u481:
  3672  0167                     	goto	l1046
  3673  0167  296F               u480:
  3674  0168                     	
  3675                           l1044:	
  3676  0168                     		movlw	2
  3677  0168  3002               	xorwf	((dispLCD_instReg@i)),w
  3678  0169  0675               	btfss	status,2
  3679  016A  1D03               	goto	u491
  3680  016B  296D               	goto	u490
  3681  016C  296E               u491:
  3682  016D                     	goto	l1048
  3683  016D  2979               u490:
  3684  016E                     	goto	l1046
  3685  016E  296F               	
  3686                           l112:	
  3687  016F                     	line	95
  3688                           	
  3689                           l1046:	
  3690  016F                     ;lcd.c: 95:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3691                           	opt asmopt_push
  3692                           opt asmopt_off
  3693                           movlw	3
  3694  016F  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  3695  0170  00F4               	movlw	151
  3696  0171  3097               movwf	((??_dispLCD_instReg+0)+0),f
  3697  0172  00F3               	u1087:
  3698  0173                     decfsz	((??_dispLCD_instReg+0)+0),f
  3699  0173  0BF3               	goto	u1087
  3700  0174  2973               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  3701  0175  0BF4               	goto	u1087
  3702  0176  2973               	nop2
  3703  0177  2978               opt asmopt_pop
  3704                           
  3705                           	goto	l1050
  3706  0178  297E               	line	96
  3707                           ;lcd.c: 96:     else
  3708                           	
  3709                           l110:	
  3710  0179                     	line	97
  3711                           	
  3712                           l1048:	
  3713  0179                     ;lcd.c: 97:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3714                           	opt asmopt_push
  3715                           opt asmopt_off
  3716                           	movlw	13
  3717  0179  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3718  017A  00F3               	u1097:
  3719  017B                     decfsz	(??_dispLCD_instReg+0)+0,f
  3720  017B  0BF3               	goto	u1097
  3721  017C  297B               opt asmopt_pop
  3722                           
  3723                           	goto	l1050
  3724  017D  297E               	
  3725                           l113:	
  3726  017E                     	line	98
  3727                           	
  3728                           l1050:	
  3729  017E                     ;lcd.c: 98:     LCDbits.EN = 1;
  3730                           	bcf	status, 5	;RP0=0, select bank0
  3731  017E  1283               	bcf	status, 6	;RP1=0, select bank0
  3732  017F  1303               	bsf	(8),5	;volatile
  3733  0180  1688               	line	99
  3734                           	
  3735                           l114:	
  3736  0181                     	return
  3737  0181  0008               	opt stack 0
  3738                           GLOBAL	__end_of_dispLCD_instReg
  3739                           	__end_of_dispLCD_instReg:
  3740  0182                     	signat	_dispLCD_instReg,4217
  3741                           	global	_dispLCD_dataReg
  3742                           
  3743 ;; *************** function _dispLCD_dataReg *****************
  3744 ;; Defined at:
  3745 ;;		line 102 in file "lcd.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  d               1    wreg     unsigned char 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  d               1    4[COMMON] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3759 ;;      Params:         0       0       0       0       0
  3760 ;;      Locals:         1       0       0       0       0
  3761 ;;      Temps:          1       0       0       0       0
  3762 ;;      Totals:         2       0       0       0       0
  3763 ;;Total ram usage:        2 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    2
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_dispLCD
  3770 ;;		_dispLCD_num
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  3774                           	line	102
  3775                           global __ptext14
  3776                           __ptext14:	;psect for function _dispLCD_dataReg
  3777  032B                     psect	text14
  3778                           	file	"lcd.c"
  3779                           	line	102
  3780                           	global	__size_of_dispLCD_dataReg
  3781                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  3782  002B                     	
  3783                           _dispLCD_dataReg:	
  3784  032B                     ;incstack = 0
  3785                           	opt	stack 4
  3786                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  3787                           ;dispLCD_dataReg@d stored from wreg
  3788                           	movwf	(dispLCD_dataReg@d)
  3789  032B  00F4               	line	104
  3790                           	
  3791                           l1060:	
  3792  032C                     ;lcd.c: 102: void dispLCD_dataReg( unsigned char d );lcd.c: 103: {;lcd.c: 104:     LCDbi
                                 ts.RS = 1;
  3793                           	bcf	status, 5	;RP0=0, select bank0
  3794  032C  1283               	bcf	status, 6	;RP1=0, select bank0
  3795  032D  1303               	bsf	(8),4	;volatile
  3796  032E  1608               	line	105
  3797                           	
  3798                           l1062:	
  3799  032F                     ;lcd.c: 105:     LCDbits.BUS = d >> 4;
  3800                           	movf	(dispLCD_dataReg@d),w
  3801  032F  0874               	movwf	(??_dispLCD_dataReg+0)+0
  3802  0330  00F3               	movlw	04h
  3803  0331  3004               u515:
  3804  0332                     	clrc
  3805  0332  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  3806  0333  0CF3               	addlw	-1
  3807  0334  3EFF               	skipz
  3808  0335  1D03               	goto	u515
  3809  0336  2B32               	movf	(8),w	;volatile
  3810  0337  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3811  0338  0673               	andlw	not ((1<<4)-1)
  3812  0339  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3813  033A  0673               	movwf	(8)	;volatile
  3814  033B  0088               	line	106
  3815                           	
  3816                           l1064:	
  3817  033C                     ;lcd.c: 106:     LCDbits.EN = 0;
  3818                           	bcf	(8),5	;volatile
  3819  033C  1288               	line	107
  3820                           	
  3821                           l1066:	
  3822  033D                     ;lcd.c: 107:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3823                           	opt asmopt_push
  3824                           opt asmopt_off
  3825                           	movlw	13
  3826  033D  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  3827  033E  00F3               	u1107:
  3828  033F                     decfsz	(??_dispLCD_dataReg+0)+0,f
  3829  033F  0BF3               	goto	u1107
  3830  0340  2B3F               opt asmopt_pop
  3831                           
  3832                           	line	108
  3833                           	
  3834                           l1068:	
  3835  0341                     ;lcd.c: 108:     LCDbits.EN = 1;
  3836                           	bcf	status, 5	;RP0=0, select bank0
  3837  0341  1283               	bcf	status, 6	;RP1=0, select bank0
  3838  0342  1303               	bsf	(8),5	;volatile
  3839  0343  1688               	line	110
  3840                           	
  3841                           l1070:	
  3842  0344                     ;lcd.c: 110:     LCDbits.RS = 1;
  3843                           	bsf	(8),4	;volatile
  3844  0344  1608               	line	111
  3845                           	
  3846                           l1072:	
  3847  0345                     ;lcd.c: 111:     LCDbits.BUS = d & 0x0F;
  3848                           	movlw	low(0Fh)
  3849  0345  300F               	andwf	(dispLCD_dataReg@d),w
  3850  0346  0574               	movwf	(??_dispLCD_dataReg+0)+0
  3851  0347  00F3               	movf	(8),w	;volatile
  3852  0348  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3853  0349  0673               	andlw	not ((1<<4)-1)
  3854  034A  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3855  034B  0673               	movwf	(8)	;volatile
  3856  034C  0088               	line	112
  3857                           	
  3858                           l1074:	
  3859  034D                     ;lcd.c: 112:     LCDbits.EN = 0;
  3860                           	bcf	(8),5	;volatile
  3861  034D  1288               	line	113
  3862                           ;lcd.c: 113:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3863                           	opt asmopt_push
  3864                           opt asmopt_off
  3865                           	movlw	13
  3866  034E  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  3867  034F  00F3               	u1117:
  3868  0350                     decfsz	(??_dispLCD_dataReg+0)+0,f
  3869  0350  0BF3               	goto	u1117
  3870  0351  2B50               opt asmopt_pop
  3871                           
  3872                           	line	114
  3873                           	
  3874                           l1076:	
  3875  0352                     ;lcd.c: 114:     LCDbits.EN = 1;
  3876                           	bcf	status, 5	;RP0=0, select bank0
  3877  0352  1283               	bcf	status, 6	;RP1=0, select bank0
  3878  0353  1303               	bsf	(8),5	;volatile
  3879  0354  1688               	line	115
  3880                           	
  3881                           l117:	
  3882  0355                     	return
  3883  0355  0008               	opt stack 0
  3884                           GLOBAL	__end_of_dispLCD_dataReg
  3885                           	__end_of_dispLCD_dataReg:
  3886  0356                     	signat	_dispLCD_dataReg,4217
  3887                           	global	_irq
  3888                           
  3889 ;; *************** function _irq *****************
  3890 ;; Defined at:
  3891 ;;		line 17 in file "timer1.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;		None
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;		None
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0, pclath, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3905 ;;      Params:         0       0       0       0       0
  3906 ;;      Locals:         0       0       0       0       0
  3907 ;;      Temps:          2       0       0       0       0
  3908 ;;      Totals:         2       0       0       0       0
  3909 ;;Total ram usage:        2 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    1
  3912 ;; This function calls:
  3913 ;;		_intt1_1ms
  3914 ;; This function is called by:
  3915 ;;		Interrupt level 1
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  3919                           	file	"timer1.c"
  3920                           	line	17
  3921                           global __ptext15
  3922                           __ptext15:	;psect for function _irq
  3923  0393                     psect	text15
  3924                           	file	"timer1.c"
  3925                           	line	17
  3926                           	global	__size_of_irq
  3927                           	__size_of_irq	equ	__end_of_irq-_irq
  3928  001A                     	
  3929                           _irq:	
  3930  0393                     ;incstack = 0
  3931                           	opt	stack 3
  3932                           ; Regs used in _irq: [wreg+status,2+status,0+pclath+cstack]
  3933                           psect	intentry,class=CODE,delta=2
  3934                           global __pintentry
  3935                           __pintentry:
  3936  0004                     global interrupt_function
  3937                           interrupt_function:
  3938  0004                     	global saved_w
  3939                           	saved_w	set	btemp+0
  3940  007E                     	movwf	saved_w
  3941  0004  00FE               	swapf	status,w
  3942  0005  0E03               	movwf	(??_irq+0)
  3943  0006  00F1               	movf	pclath,w
  3944  0007  080A               	movwf	(??_irq+1)
  3945  0008  00F2               	ljmp	_irq
  3946  0009  120A  118A  2B93   psect	text15
  3947                           	line	19
  3948                           	
  3949                           i1l1268:	
  3950  0393                     ;timer1.c: 19:     if( PIE1bits.TMR1IE && PIR1bits.TMR1IF )
  3951                           	bsf	status, 5	;RP0=1, select bank1
  3952  0393  1683               	bcf	status, 6	;RP1=0, select bank1
  3953  0394  1303               	btfss	(140)^080h,0	;volatile
  3954  0395  1C0C               	goto	u83_21
  3955  0396  2B98               	goto	u83_20
  3956  0397  2B99               u83_21:
  3957  0398                     	goto	i1l67
  3958  0398  2BA6               u83_20:
  3959  0399                     	
  3960                           i1l1270:	
  3961  0399                     	bcf	status, 5	;RP0=0, select bank0
  3962  0399  1283               	bcf	status, 6	;RP1=0, select bank0
  3963  039A  1303               	btfss	(12),0	;volatile
  3964  039B  1C0C               	goto	u84_21
  3965  039C  2B9E               	goto	u84_20
  3966  039D  2B9F               u84_21:
  3967  039E                     	goto	i1l67
  3968  039E  2BA6               u84_20:
  3969  039F                     	line	21
  3970                           	
  3971                           i1l1272:	
  3972  039F                     ;timer1.c: 20:     {;timer1.c: 21:         PIR1bits.TMR1IF = 0;
  3973                           	bcf	(12),0	;volatile
  3974  039F  100C               	line	22
  3975                           	
  3976                           i1l1274:	
  3977  03A0                     ;timer1.c: 22:         intt1_1ms();
  3978                           	fcall	_intt1_1ms
  3979  03A0  120A  118A  2356  120A  118A  	goto	i1l67
  3980  03A5  2BA6               	line	23
  3981                           ;timer1.c: 23:     }
  3982                           	
  3983                           i1l66:	
  3984  03A6                     	line	24
  3985                           	
  3986                           i1l67:	
  3987  03A6                     	movf	(??_irq+1),w
  3988  03A6  0872               	movwf	pclath
  3989  03A7  008A               	swapf	(??_irq+0)^0FFFFFF80h,w
  3990  03A8  0E71               	movwf	status
  3991  03A9  0083               	swapf	saved_w,f
  3992  03AA  0EFE               	swapf	saved_w,w
  3993  03AB  0E7E               	retfie
  3994  03AC  0009               	opt stack 0
  3995                           GLOBAL	__end_of_irq
  3996                           	__end_of_irq:
  3997  03AD                     	signat	_irq,89
  3998                           	global	_intt1_1ms
  3999                           
  4000 ;; *************** function _intt1_1ms *****************
  4001 ;; Defined at:
  4002 ;;		line 26 in file "timer1.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4016 ;;      Params:         0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0
  4018 ;;      Temps:          1       0       0       0       0
  4019 ;;      Totals:         1       0       0       0       0
  4020 ;;Total ram usage:        1 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_irq
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4029                           	line	26
  4030                           global __ptext16
  4031                           __ptext16:	;psect for function _intt1_1ms
  4032  0356                     psect	text16
  4033                           	file	"timer1.c"
  4034                           	line	26
  4035                           	global	__size_of_intt1_1ms
  4036                           	__size_of_intt1_1ms	equ	__end_of_intt1_1ms-_intt1_1ms
  4037  0020                     	
  4038                           _intt1_1ms:	
  4039  0356                     ;incstack = 0
  4040                           	opt	stack 3
  4041                           ; Regs used in _intt1_1ms: [wreg+status,2]
  4042                           	line	28
  4043                           	
  4044                           i1l1248:	
  4045  0356                     ;timer1.c: 28:     TMR1H = ((65536-1000)>>8) & 0x00FF;
  4046                           	movlw	low(0FCh)
  4047  0356  30FC               	bcf	status, 5	;RP0=0, select bank0
  4048  0357  1283               	bcf	status, 6	;RP1=0, select bank0
  4049  0358  1303               	movwf	(15)	;volatile
  4050  0359  008F               	line	29
  4051                           ;timer1.c: 29:     TMR1L = (65536-1000) & 0x00FF;
  4052                           	movlw	low(018h)
  4053  035A  3018               	movwf	(14)	;volatile
  4054  035B  008E               	line	30
  4055                           ;timer1.c: 30:     if( ++t1cont >= t1final )
  4056                           	movlw	01h
  4057  035C  3001               	addwf	(_t1cont),f
  4058  035D  07B2               	skipnc
  4059  035E  1803               	incf	(_t1cont+1),f
  4060  035F  0AB3               	movlw	0
  4061  0360  3000               	addwf	(_t1cont+1),f
  4062  0361  07B3               	movf	((_t1cont+1)),w
  4063  0362  0833               	xorlw	80h
  4064  0363  3A80               	movwf	(??_intt1_1ms+0)+0
  4065  0364  00F0               	movf	(_t1final+1),w
  4066  0365  0835               	xorlw	80h
  4067  0366  3A80               	subwf	(??_intt1_1ms+0)+0,w
  4068  0367  0270               	skipz
  4069  0368  1D03               	goto	u82_25
  4070  0369  2B6C               	movf	(_t1final),w
  4071  036A  0834               	subwf	((_t1cont)),w
  4072  036B  0232               u82_25:
  4073  036C                     
  4074                           	skipc
  4075  036C  1C03               	goto	u82_21
  4076  036D  2B6F               	goto	u82_20
  4077  036E  2B70               u82_21:
  4078  036F                     	goto	i1l71
  4079  036F  2B75               u82_20:
  4080  0370                     	line	32
  4081                           	
  4082                           i1l1250:	
  4083  0370                     ;timer1.c: 31:     {;timer1.c: 32:         t1cont = 0;
  4084                           	bcf	status, 5	;RP0=0, select bank0
  4085  0370  1283               	bcf	status, 6	;RP1=0, select bank0
  4086  0371  1303               	clrf	(_t1cont)
  4087  0372  01B2               	clrf	(_t1cont+1)
  4088  0373  01B3               	goto	i1l71
  4089  0374  2B75               	line	33
  4090                           ;timer1.c: 33:     }
  4091                           	
  4092                           i1l70:	
  4093  0375                     	line	34
  4094                           	
  4095                           i1l71:	
  4096  0375                     	return
  4097  0375  0008               	opt stack 0
  4098                           GLOBAL	__end_of_intt1_1ms
  4099                           	__end_of_intt1_1ms:
  4100  0376                     	signat	_intt1_1ms,89
  4101                           global	___latbits
  4102                           ___latbits	equ	2
  4103  0002                     	global	btemp
  4104                           	btemp set 07Eh
  4105  007E                     
  4106                           	DABS	1,126,2	;btemp
  4107                           	global	wtemp0
  4108                           	wtemp0 set btemp+0
  4109  007E                     	end


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     18      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dispLCD@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _initTimer1->_setT1limite
    _dispLCD_num->_dispLCD_lincol
    _dispLCD_init->_delay
    _dispLCD_init->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg

Critical Paths under _irq in COMMON

    _irq->_intt1_1ms

Critical Paths under _main in BANK0

    _main->_dispLCD_num
    _dispLCD_num->___awdiv

Critical Paths under _irq in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _irq in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _irq in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _irq in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4487
                                             16 BANK0      2     2      0
                            _dispLCD
                       _dispLCD_init
                        _dispLCD_num
                           _initLEDs
                         _initTimer1
                              _setT1
                        _setT1limite
                         _statusled1
 ---------------------------------------------------------------------------------
 (1) _statusled1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setT1                                                4     0      4      98
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initTimer1                                           0     0      0     174
                        _setT1limite
 ---------------------------------------------------------------------------------
 (1) _setT1limite                                          4     0      4     174
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initLEDs                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_num                                         12     8      4    2854
                                              4 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     427
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              5     3      2     760
                                              0 BANK0      5     3      2
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     372
                                              6 COMMON     3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     176
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      2     2      0      44
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _irq                                                  2     2      0       0
                                              1 COMMON     2     2      0
                          _intt1_1ms
 ---------------------------------------------------------------------------------
 (5) _intt1_1ms                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispLCD
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_init
     _delay
     _dispLCD_instReg
   _dispLCD_num
     ___awdiv
     ___awmod
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _initLEDs
   _initTimer1
     _setT1limite
   _setT1
   _setT1limite
   _statusled1

 _irq (ROOT)
   _intt1_1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jun 10 16:42:32 2021

                       l9 03F5                         pc 0002                        l15 0408  
                      l40 02AC                        l41 02AC                        l38 0296  
                      l39 02AB                        l80 0403                        l74 03FC  
                      l91 03D3                        l92 03C5                        l93 03DA  
                      l94 03DA                        l86 0392              ___awdiv@sign 0021  
 __end_of_dispLCD_dataReg 0356                        fsr 0004                       l110 0179  
                     l112 016F                       l120 03ED                       l113 017E  
                     l105 0131                       l114 0181                       l107 0127  
                     l123 02EF                       l108 0136                       l132 0032  
                     l117 0355                       l109 0159                       l141 00AD  
                     l133 0076                       l126 031B                       l142 00AE  
                     l134 0047                       l127 0302                       l143 00BC  
                     l135 0061                       l128 032A                       l400 0223  
                     l144 00BC                       l136 0062                       l129 032A  
                     l401 0217                       l145 0108                       l137 0084  
                     l402 0228                       l146 0108                       l138 0090  
                     l403 0229                       l139 0085                       l404 023A  
                     l405 0248                       l406 0254                       l407 0259  
                     l390 01BC                       l391 01D5                       l392 01E3  
                     l384 0191                       l393 01EF                       l385 019F  
                     l394 01F4                       l386 01E4                       l387 01B6  
                     l388 01AA                       l389 01BB                       l397 0204  
                     l398 020E                       l399 0249                       u500 03D9  
                     u501 03D8                       u440 0120                       u441 011F  
                     u450 0126                       u610 01E2                       u530 0189  
                     u515 0332                       u451 0125                       u435 0110  
                     u611 01E1                       u531 0188                       u460 0142  
                     u620 01E9                       u540 0195                       u461 0141  
                     u525 03DF                       u621 01E8                       u605 01D6  
                     u541 0194                       u550 01A7                       u551 01A6  
                     u480 0168                       u481 0167                       u490 016E  
                     u570 01BA                       u491 016D                       u475 0146  
                     u571 01B9                       u900 0233                       u565 01AB  
                     u901 0232                       u590 01CD                       u591 01CC  
                     u920 0247                       u585 01BD                       u921 0246  
                     u905 022F                       u930 024E                       u850 01FC  
                     u595 01C9                       u931 024D                       u915 023B  
                     u851 01FB                       u940 0329                       u860 0208  
                     u941 0328                       u861 0207                       u870 0214  
                     u950 0023                       u871 0213                       u951 0021  
                     u960 0024                       u890 0227                       u970 002C  
                     u891 0226                       u971 002B                       u980 005C  
                     u885 0218                       u981 005B                       u990 0083  
                     u991 0082                       u995 007F                       _irq 0393  
                     fsr0 0004   __end_of_dispLCD_instReg 0182              ___awmod@sign 0021  
            __CFG_LVP$OFF 0000                      l1010 010A                      l1020 0131  
                    l1012 010D                      l1100 01AA                      l1030 0150  
                    l1022 0136                      l1014 011A                      l1110 01D3  
                    l1102 01B1                      l1040 0162                      l1032 0151  
                    l1024 0139                      l1016 0120                      l1120 01EF  
                    l1112 01D5                      l1104 01B6                      l1200 03F6  
                    l1050 017E                      l1042 0163                      l1034 0155  
                    l1026 0142                      l1018 0127                      l1122 01F4  
                    l1114 01DC                      l1106 01BC                      l1060 032C  
                    l1044 0168                      l1028 0143                      l1036 0159  
                    l1108 01CD                      l1116 01E4                      l1300 0229  
                    l1052 03FD                      l1070 0344                      l1062 032F  
                    l1046 016F                      l1038 015A                      l1054 03C4  
                    l1118 01E9                      l1310 024E                      l1302 0233  
                    l1072 0345                      l1064 033C                      l1048 0179  
                    l1320 0302                      l1056 03C5                      l1080 0182  
                    l1312 0254                      l1304 023A                      l1074 034D  
                    l1066 033D                      l1322 0310                      l1058 03D3  
                    l1170 02B8                      l1090 0195                      l1082 0185  
                    l1314 0259                      l1306 0241                      l1330 0027  
                    l1162 03EE                      l1076 0352                      l1068 0341  
                    l1324 0316                      l1316 02F3                      l1180 02BF  
                    l1172 02BB                      l1092 019A                      l1084 0189  
                    l1308 0249                      l1340 0047                      l1332 002C  
                    l1164 0404                      l1078 03DC                      l1326 031B  
                    l1318 02F7                      l1182 02C0                      l1174 02BC  
                    l1094 019F                      l1086 018E                      l1350 008B  
                    l1342 005C                      l1334 0032                      l1190 037D  
                    l1166 0408                      l1184 02C1                      l1176 02BD  
                    l1168 02AF                      l1096 01A1                      l1088 0191  
                    l1280 01F8                      l1360 00FA                      l1344 0062  
                    l1352 0090                      l1336 003C                      l1328 001E  
                    l1192 038A                      l1186 02CB                      l1178 02BE  
                    l1098 01A7                      l1290 020E                      l1282 01FC  
                    l1354 00A4                      l1346 0076                      l1338 0042  
                    l1194 038D                      l1370 026E                      l1362 025A  
                    l1292 0214                      l1284 0201                      l1356 00AE  
                    l1348 0085                      l1196 038E                      l1188 0376  
                    l1372 027B                      l1364 025F                      l1294 0217  
                    l1286 0204                      l1278 01F5                      l1358 00B5  
                    l1198 0391                      l1374 0288                      l1366 0264  
                    l1296 021E                      l1288 0208                      l1376 0296  
                    l1368 0269                      l1298 0223                      ?_irq 0070  
                    STR_1 03B3                      u1000 00A4                      u1001 00A3  
                    u1010 00AC                      u1011 00AB                      u1020 00B5  
                    u1021 00B4                      u1005 00A0                      u1030 0107  
                    u1031 0106                      u1107 033F                      u1035 0103  
                    u1117 0350                      u1047 03C7                      u1057 012B  
                    u1067 0133                      u1077 0153                      u1087 0173  
                    u1097 017B                      i1l70 0375                      i1l71 0375  
                    i1l66 03A6                      i1l67 03A6                      _main 025A  
                    btemp 007E                      start 000C                     ??_irq 0071  
                   ?_main 0070           __end_of___awdiv 01F5             __CFG_WDTE$OFF 0000  
         __end_of___awmod 025A           ___awdiv@divisor 0073           ___awdiv@counter 0020  
                   _TMR1H 000F                     _TMR1L 000E                     u82_20 0370  
                   u82_21 036F                     u82_25 036C                     u83_20 0399  
                   u83_21 0398                     u84_20 039F                     u84_21 039E  
         __end_of_dispLCD 032B                     _delay 03C4                     _setT1 03F6  
                   pclath 000A              ?_setT1limite 0073                     status 0003  
                   wtemp0 007E      __end_of_dispLCD_init 02F0            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 02AF          ?_dispLCD_dataReg 0070  
                  ??_main 0030      __size_of_dispLCD_num 00EE          ?_dispLCD_instReg 0070  
                  ?_delay 0073                    ?_setT1 0073          ___awdiv@dividend 0075  
                  i1l1250 0370                    i1l1270 0399                    i1l1248 0356  
                  i1l1272 039F                    i1l1274 03A0                    i1l1268 0393  
                  _t1cont 0032                 ??___awdiv 0077                 ??___awmod 0077  
        __end_of_initLEDs 03F6                    delay@t 0073          ___awdiv@quotient 0022  
         ___awmod@divisor 0073                 ??_dispLCD 0022           ___awmod@counter 0020  
                  setT1@c 0073                    saved_w 007E   __end_of__initialization 0017  
 __size_of_dispLCD_lincol 0013            __pcstackCOMMON 0070             __end_of_delay 03DB  
           __end_of_setT1 03FD                   ??_delay 0075                   ??_setT1 0077  
              __pbssBANK0 0032     __size_of_dispLCD_init 0041        __size_of_intt1_1ms 0020  
    __size_of_setT1limite 0007                __pmaintext 025A                __pintentry 0004  
                 _LCDbits 0008              _dispLCD_init 02AF                __stringtab 03AD  
               ?_initLEDs 0070                   _t1final 0034                _initTimer1 0376  
                 ___awdiv 0182                   ___awmod 01F5                   _dispLCD 02F0  
                 __ptext0 0000                   __ptext1 0404                   __ptext2 03F6  
                 __ptext3 0376                   __ptext4 03FD                   __ptext5 03EE  
                 __ptext6 001B                   __ptext7 01F5                   __ptext8 0182  
                 __ptext9 02AF         __end_of_intt1_1ms 0376                 _T1CONbits 0010  
            __size_of_irq 001A          ___awmod@dividend 0075      end_of_initialization 0017  
              ??_initLEDs 0073            dispLCD_num@col 0024            dispLCD_num@div 002E  
          dispLCD_num@lin 002B            dispLCD_num@tam 0027            dispLCD_num@num 0025  
          _dispLCD_lincol 03DB                dispLCD@col 0020                dispLCD@lin 0024  
              dispLCD@pos 0023                dispLCD@str 0021                 _RCSTAbits 0018  
           ??_dispLCD_num 0028                 _PORTCbits 0007                 _TRISCbits 0087  
               _TRISDbits 0088  __size_of_dispLCD_dataReg 002B    __end_of_dispLCD_lincol 03EE  
__size_of_dispLCD_instReg 0079                _statusled1 0404               ?_initTimer1 0070  
            setT1limite@d 0073       start_initialization 000F       __end_of_dispLCD_num 0109  
             __end_of_irq 03AD           ?_dispLCD_lincol 0076  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       dispLCD_lincol@col 0076         dispLCD_lincol@lin 0078               __pbssCOMMON 0079  
               ___latbits 0002             __pcstackBANK0 0020       __size_of_initTimer1 001D  
           ??_setT1limite 0077               ?_statusled1 0070         ??_dispLCD_dataReg 0073  
       __size_of_initLEDs 0008         ??_dispLCD_instReg 0073                  ?___awdiv 0073  
                ?___awmod 0073               _dispLCD_num 001B                  ?_dispLCD 0020  
               __pstrings 03AD                 _intt1_1ms 0356            __size_of_delay 0017  
          __size_of_setT1 0007         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C       __end_of_setT1limite 0404          dispLCD_dataReg@d 0074  
             __stringbase 03B2       __size_of_statusled1 0005                ?_intt1_1ms 0070  
        dispLCD_instReg@i 0075              ??_initTimer1 0077          __size_of___awdiv 0073  
        __size_of___awmod 0065          dispLCD_num@sinal 002D        __end_of__stringtab 03B3  
        __size_of_dispLCD 003B          ??_dispLCD_lincol 0077                  __ptext10 03C4  
                __ptext11 02F0                  __ptext12 03DB                  __ptext13 0109  
                __ptext14 032B                  __ptext15 0393                  __ptext16 0356  
                _contador 0079                  _initLEDs 03EE        __end_of_initTimer1 0393  
             _setT1limite 03FD             __size_of_main 0055                _INTCONbits 000B  
           ?_dispLCD_init 0070           _dispLCD_dataReg 032B               ??_intt1_1ms 0070  
         dispLCD_num@size 002C           _dispLCD_instReg 0109                  intlevel1 0000  
            ??_statusled1 0073                 stringcode 03AD              ?_dispLCD_num 0024  
          ??_dispLCD_init 0076        __end_of_statusled1 0409                  stringdir 03AD  
                stringtab 03AD  
