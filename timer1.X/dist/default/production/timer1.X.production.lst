

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jun 18 13:47:17 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     	FNCALL	_main,___awdiv
  1024                           	FNCALL	_main,_dispLCD
  1025                           	FNCALL	_main,_dispLCD_init
  1026                           	FNCALL	_main,_dispLCD_num
  1027                           	FNCALL	_main,_initLEDs
  1028                           	FNCALL	_main,_initTimer1
  1029                           	FNCALL	_main,_led1
  1030                           	FNCALL	_main,_setT1
  1031                           	FNCALL	_main,_setT1limite
  1032                           	FNCALL	_main,_statusT1
  1033                           	FNCALL	_main,_statusT1limite
  1034                           	FNCALL	_main,_statusled1
  1035                           	FNCALL	_initTimer1,_setT1limite
  1036                           	FNCALL	_dispLCD_num,___awdiv
  1037                           	FNCALL	_dispLCD_num,___awmod
  1038                           	FNCALL	_dispLCD_num,_dispLCD_dataReg
  1039                           	FNCALL	_dispLCD_num,_dispLCD_lincol
  1040                           	FNCALL	_dispLCD_init,_delay
  1041                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  1042                           	FNCALL	_dispLCD,_dispLCD_dataReg
  1043                           	FNCALL	_dispLCD,_dispLCD_lincol
  1044                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  1045                           	FNROOT	_main
  1046                           	FNCALL	_irq,_intt1_1ms
  1047                           	FNCALL	intlevel1,_irq
  1048                           	global	intlevel1
  1049                           	FNROOT	intlevel1
  1050                           	global	_t1final
  1051                           	global	_t1cont
  1052                           	global	_LCDbits
  1053                           psect	text0,local,class=CODE,delta=2,merge=1
  1054                           global __ptext0
  1055                           __ptext0:
  1056  0000                     _LCDbits	set	8
  1057  0008                     	global	_T1CONbits
  1058                           _T1CONbits	set	0x10
  1059  0010                     	global	_INTCONbits
  1060                           _INTCONbits	set	0xB
  1061  000B                     	global	_TMR1L
  1062                           _TMR1L	set	0xE
  1063  000E                     	global	_TMR1H
  1064                           _TMR1H	set	0xF
  1065  000F                     	global	_PIR1bits
  1066                           _PIR1bits	set	0xC
  1067  000C                     	global	_PORTCbits
  1068                           _PORTCbits	set	0x7
  1069  0007                     	global	_RCSTAbits
  1070                           _RCSTAbits	set	0x18
  1071  0018                     	global	_TRISDbits
  1072                           _TRISDbits	set	0x88
  1073  0088                     	global	_PIE1bits
  1074                           _PIE1bits	set	0x8C
  1075  008C                     	global	_TRISCbits
  1076                           _TRISCbits	set	0x87
  1077  0087                     psect	strings,class=STRING,delta=2,noexec
  1078                           global __pstrings
  1079                           __pstrings:
  1080  0400                     stringtab:
  1081  0400                     	global    __stringtab
  1082                           __stringtab:
  1083  0400                     ;	String table - string pointers are 1 byte each
  1084                           stringcode:stringdir:
  1085  0400                     movlw high(stringdir)
      + 0400                     stringdir:	
  1086  0400  3004               movwf pclath
  1087  0401  008A               movf fsr,w
  1088  0402  0804               incf fsr
  1089  0403  0A84               	addwf pc
  1090  0404  0782               	global __stringbase
  1091                           __stringbase:
  1092  0405                     	retlw	0
  1093  0405  3400               psect	strings
  1094                           	global    __end_of__stringtab
  1095                           __end_of__stringtab:
  1096  0406                     	
  1097                           STR_1:	
  1098  0406                     	retlw	67	;'C'
  1099  0406  3443               	retlw	111	;'o'
  1100  0407  346F               	retlw	110	;'n'
  1101  0408  346E               	retlw	116	;'t'
  1102  0409  3474               	retlw	97	;'a'
  1103  040A  3461               	retlw	100	;'d'
  1104  040B  3464               	retlw	111	;'o'
  1105  040C  346F               	retlw	114	;'r'
  1106  040D  3472               	retlw	58	;':'
  1107  040E  343A               	retlw	32	;' '
  1108  040F  3420               	retlw	32	;' '
  1109  0410  3420               	retlw	32	;' '
  1110  0411  3420               	retlw	32	;' '
  1111  0412  3420               	retlw	32	;' '
  1112  0413  3420               	retlw	32	;' '
  1113  0414  3420               	retlw	32	;' '
  1114  0415  3420               	retlw	0
  1115  0416  3400               psect	strings
  1116                           ; #config settings
  1117                           global __CFG_FOSC$INTRC_NOCLKOUT
  1118                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1119  0000                     global __CFG_WDTE$OFF
  1120                           __CFG_WDTE$OFF equ 0x0
  1121  0000                     global __CFG_MCLRE$OFF
  1122                           __CFG_MCLRE$OFF equ 0x0
  1123  0000                     global __CFG_LVP$OFF
  1124                           __CFG_LVP$OFF equ 0x0
  1125  0000                     	file	"C:\Users\21193634\AppData\Local\Temp\s18g."
  1126                           	line	#
  1127                           psect cinit,class=CODE,delta=2
  1128                           global start_initialization
  1129                           start_initialization:
  1130  000F                     
  1131                           global __initialization
  1132                           __initialization:
  1133  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1134                           global __pbssCOMMON
  1135                           __pbssCOMMON:
  1136  0079                     _t1final:
  1137  0079                            ds      2
  1138  0079                     
  1139                           psect	bssBANK0,class=BANK0,space=1,noexec
  1140                           global __pbssBANK0
  1141                           __pbssBANK0:
  1142  0034                     _t1cont:
  1143  0034                            ds      2
  1144  0034                     
  1145                           _contador:
  1146  0036                            ds      2
  1147  0036                     
  1148                           	file	"C:\Users\21193634\AppData\Local\Temp\s18g."
  1149                           	line	#
  1150                           ; Clear objects allocated to COMMON
  1151                           psect cinit,class=CODE,delta=2,merge=1
  1152                           	clrf	((__pbssCOMMON)+0)&07Fh
  1153  000F  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
  1154  0010  01FA               ; Clear objects allocated to BANK0
  1155                           psect cinit,class=CODE,delta=2,merge=1
  1156                           	bcf	status, 5	;RP0=0, select bank0
  1157  0011  1283               	bcf	status, 6	;RP1=0, select bank0
  1158  0012  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1159  0013  01B4               	clrf	((__pbssBANK0)+1)&07Fh
  1160  0014  01B5               	clrf	((__pbssBANK0)+2)&07Fh
  1161  0015  01B6               	clrf	((__pbssBANK0)+3)&07Fh
  1162  0016  01B7               psect cinit,class=CODE,delta=2,merge=1
  1163                           global end_of_initialization,__end_of__initialization
  1164                           
  1165                           ;End of C runtime variable initialization code
  1166                           
  1167                           end_of_initialization:
  1168  0017                     __end_of__initialization:
  1169  0017                     clrf status
  1170  0017  0183               ljmp _main	;jump to C main() function
  1171  0018  120A  118A  2909   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1172                           global __pcstackCOMMON
  1173                           __pcstackCOMMON:
  1174  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
  1175  0070                     ?_initTimer1:	; 1 bytes @ 0x0
  1176  0070                     ?_intt1_1ms:	; 1 bytes @ 0x0
  1177  0070                     ??_intt1_1ms:	; 1 bytes @ 0x0
  1178  0070                     ?_initLEDs:	; 1 bytes @ 0x0
  1179  0070                     ?_led1:	; 1 bytes @ 0x0
  1180  0070                     ?_statusled1:	; 1 bytes @ 0x0
  1181  0070                     ?_main:	; 1 bytes @ 0x0
  1182  0070                     ?_irq:	; 1 bytes @ 0x0
  1183  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  1184  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  1185  0070                     	ds	1
  1186  0070                     ??_irq:	; 1 bytes @ 0x1
  1187  0071                     	ds	2
  1188  0071                     ?_setT1:	; 1 bytes @ 0x3
  1189  0073                     ?_setT1limite:	; 1 bytes @ 0x3
  1190  0073                     ??_initLEDs:	; 1 bytes @ 0x3
  1191  0073                     ??_led1:	; 1 bytes @ 0x3
  1192  0073                     ??_statusled1:	; 1 bytes @ 0x3
  1193  0073                     ?_delay:	; 1 bytes @ 0x3
  1194  0073                     ??_dispLCD_instReg:	; 1 bytes @ 0x3
  1195  0073                     ??_dispLCD_dataReg:	; 1 bytes @ 0x3
  1196  0073                     	global	?_statusT1
  1197                           ?_statusT1:	; 2 bytes @ 0x3
  1198  0073                     	global	?_statusT1limite
  1199                           ?_statusT1limite:	; 2 bytes @ 0x3
  1200  0073                     	global	?___awmod
  1201                           ?___awmod:	; 2 bytes @ 0x3
  1202  0073                     	global	led1@b
  1203                           led1@b:	; 1 bytes @ 0x3
  1204  0073                     	global	delay@t
  1205                           delay@t:	; 2 bytes @ 0x3
  1206  0073                     	global	___awmod@divisor
  1207                           ___awmod@divisor:	; 2 bytes @ 0x3
  1208  0073                     	global	setT1@c
  1209                           setT1@c:	; 4 bytes @ 0x3
  1210  0073                     	global	setT1limite@d
  1211                           setT1limite@d:	; 4 bytes @ 0x3
  1212  0073                     	ds	1
  1213  0073                     	global	dispLCD_dataReg@d
  1214                           dispLCD_dataReg@d:	; 1 bytes @ 0x4
  1215  0074                     	ds	1
  1216  0074                     ??_statusT1:	; 1 bytes @ 0x5
  1217  0075                     ??_statusT1limite:	; 1 bytes @ 0x5
  1218  0075                     ??_delay:	; 1 bytes @ 0x5
  1219  0075                     	global	?___awdiv
  1220                           ?___awdiv:	; 2 bytes @ 0x5
  1221  0075                     	global	dispLCD_instReg@i
  1222                           dispLCD_instReg@i:	; 1 bytes @ 0x5
  1223  0075                     	global	___awdiv@divisor
  1224                           ___awdiv@divisor:	; 2 bytes @ 0x5
  1225  0075                     	global	___awmod@dividend
  1226                           ___awmod@dividend:	; 2 bytes @ 0x5
  1227  0075                     	ds	1
  1228  0075                     ??_dispLCD_init:	; 1 bytes @ 0x6
  1229  0076                     ?_dispLCD_lincol:	; 1 bytes @ 0x6
  1230  0076                     	global	dispLCD_lincol@col
  1231                           dispLCD_lincol@col:	; 1 bytes @ 0x6
  1232  0076                     	ds	1
  1233  0076                     ??_initTimer1:	; 1 bytes @ 0x7
  1234  0077                     ??_setT1:	; 1 bytes @ 0x7
  1235  0077                     ??_setT1limite:	; 1 bytes @ 0x7
  1236  0077                     ??_dispLCD_lincol:	; 1 bytes @ 0x7
  1237  0077                     ??___awmod:	; 1 bytes @ 0x7
  1238  0077                     	global	___awdiv@dividend
  1239                           ___awdiv@dividend:	; 2 bytes @ 0x7
  1240  0077                     	ds	1
  1241  0077                     	global	dispLCD_lincol@lin
  1242                           dispLCD_lincol@lin:	; 1 bytes @ 0x8
  1243  0078                     	ds	1
  1244  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1245                           global __pcstackBANK0
  1246                           __pcstackBANK0:
  1247  0020                     ?_dispLCD:	; 1 bytes @ 0x0
  1248  0020                     ??___awdiv:	; 1 bytes @ 0x0
  1249  0020                     	global	dispLCD@col
  1250                           dispLCD@col:	; 1 bytes @ 0x0
  1251  0020                     	global	___awmod@counter
  1252                           ___awmod@counter:	; 1 bytes @ 0x0
  1253  0020                     	ds	1
  1254  0020                     	global	dispLCD@str
  1255                           dispLCD@str:	; 1 bytes @ 0x1
  1256  0021                     	global	___awdiv@counter
  1257                           ___awdiv@counter:	; 1 bytes @ 0x1
  1258  0021                     	global	___awmod@sign
  1259                           ___awmod@sign:	; 1 bytes @ 0x1
  1260  0021                     	ds	1
  1261  0021                     ??_dispLCD:	; 1 bytes @ 0x2
  1262  0022                     	global	___awdiv@sign
  1263                           ___awdiv@sign:	; 1 bytes @ 0x2
  1264  0022                     	ds	1
  1265  0022                     	global	dispLCD@pos
  1266                           dispLCD@pos:	; 1 bytes @ 0x3
  1267  0023                     	global	___awdiv@quotient
  1268                           ___awdiv@quotient:	; 2 bytes @ 0x3
  1269  0023                     	ds	1
  1270  0023                     	global	dispLCD@lin
  1271                           dispLCD@lin:	; 1 bytes @ 0x4
  1272  0024                     	ds	1
  1273  0024                     ?_dispLCD_num:	; 1 bytes @ 0x5
  1274  0025                     	global	dispLCD_num@col
  1275                           dispLCD_num@col:	; 1 bytes @ 0x5
  1276  0025                     	ds	1
  1277  0025                     	global	dispLCD_num@num
  1278                           dispLCD_num@num:	; 2 bytes @ 0x6
  1279  0026                     	ds	2
  1280  0026                     	global	dispLCD_num@tam
  1281                           dispLCD_num@tam:	; 1 bytes @ 0x8
  1282  0028                     	ds	1
  1283  0028                     ??_dispLCD_num:	; 1 bytes @ 0x9
  1284  0029                     	ds	3
  1285  0029                     	global	dispLCD_num@lin
  1286                           dispLCD_num@lin:	; 1 bytes @ 0xC
  1287  002C                     	ds	1
  1288  002C                     	global	dispLCD_num@size
  1289                           dispLCD_num@size:	; 1 bytes @ 0xD
  1290  002D                     	ds	1
  1291  002D                     	global	dispLCD_num@sinal
  1292                           dispLCD_num@sinal:	; 1 bytes @ 0xE
  1293  002E                     	ds	1
  1294  002E                     	global	dispLCD_num@div
  1295                           dispLCD_num@div:	; 2 bytes @ 0xF
  1296  002F                     	ds	2
  1297  002F                     ??_main:	; 1 bytes @ 0x11
  1298  0031                     	ds	3
  1299  0031                     ;!
  1300                           ;!Data Sizes:
  1301                           ;!    Strings     17
  1302                           ;!    Constant    0
  1303                           ;!    Data        0
  1304                           ;!    BSS         6
  1305                           ;!    Persistent  0
  1306                           ;!    Stack       0
  1307                           ;!
  1308                           ;!Auto Spaces:
  1309                           ;!    Space          Size  Autos    Used
  1310                           ;!    COMMON           14      9      11
  1311                           ;!    BANK0            80     20      24
  1312                           ;!    BANK1            80      0       0
  1313                           ;!    BANK3            96      0       0
  1314                           ;!    BANK2            96      0       0
  1315                           
  1316                           ;!
  1317                           ;!Pointer List with Targets:
  1318                           ;!
  1319                           ;!    dispLCD@str	PTR const unsigned char  size(1) Largest target is 17
  1320                           ;!		 -> STR_1(CODE[17]), 
  1321                           ;!
  1322                           
  1323                           
  1324                           ;!
  1325                           ;!Critical Paths under _main in COMMON
  1326                           ;!
  1327                           ;!    _main->___awdiv
  1328                           ;!    _initTimer1->_setT1limite
  1329                           ;!    _dispLCD_num->___awdiv
  1330                           ;!    _dispLCD_num->_dispLCD_lincol
  1331                           ;!    ___awdiv->_statusT1limite
  1332                           ;!    _dispLCD_init->_delay
  1333                           ;!    _dispLCD_init->_dispLCD_instReg
  1334                           ;!    _dispLCD->_dispLCD_lincol
  1335                           ;!    _dispLCD_lincol->_dispLCD_instReg
  1336                           ;!
  1337                           ;!Critical Paths under _irq in COMMON
  1338                           ;!
  1339                           ;!    _irq->_intt1_1ms
  1340                           ;!
  1341                           ;!Critical Paths under _main in BANK0
  1342                           ;!
  1343                           ;!    _main->_dispLCD_num
  1344                           ;!    _dispLCD_num->___awdiv
  1345                           ;!
  1346                           ;!Critical Paths under _irq in BANK0
  1347                           ;!
  1348                           ;!    None.
  1349                           ;!
  1350                           ;!Critical Paths under _main in BANK1
  1351                           ;!
  1352                           ;!    None.
  1353                           ;!
  1354                           ;!Critical Paths under _irq in BANK1
  1355                           ;!
  1356                           ;!    None.
  1357                           ;!
  1358                           ;!Critical Paths under _main in BANK3
  1359                           ;!
  1360                           ;!    None.
  1361                           ;!
  1362                           ;!Critical Paths under _irq in BANK3
  1363                           ;!
  1364                           ;!    None.
  1365                           ;!
  1366                           ;!Critical Paths under _main in BANK2
  1367                           ;!
  1368                           ;!    None.
  1369                           ;!
  1370                           ;!Critical Paths under _irq in BANK2
  1371                           ;!
  1372                           ;!    None.
  1373                           
  1374 ;;
  1375 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1376 ;;
  1377                           
  1378                           ;!
  1379                           ;!Call Graph Tables:
  1380                           ;!
  1381                           ;! ---------------------------------------------------------------------------------
  1382                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1383                           ;! ---------------------------------------------------------------------------------
  1384                           ;! (0) _main                                                 3     3      0    6284
  1385                           ;!                                             17 BANK0      3     3      0
  1386                           ;!                            ___awdiv
  1387                           ;!                            _dispLCD
  1388                           ;!                       _dispLCD_init
  1389                           ;!                        _dispLCD_num
  1390                           ;!                           _initLEDs
  1391                           ;!                         _initTimer1
  1392                           ;!                               _led1
  1393                           ;!                              _setT1
  1394                           ;!                        _setT1limite
  1395                           ;!                           _statusT1
  1396                           ;!                     _statusT1limite
  1397                           ;!                         _statusled1
  1398                           ;! ---------------------------------------------------------------------------------
  1399                           ;! (1) _statusled1                                           0     0      0       0
  1400                           ;! ---------------------------------------------------------------------------------
  1401                           ;! (1) _statusT1limite                                       2     0      2       0
  1402                           ;!                                              3 COMMON     2     0      2
  1403                           ;! ---------------------------------------------------------------------------------
  1404                           ;! (1) _statusT1                                             2     0      2       0
  1405                           ;!                                              3 COMMON     2     0      2
  1406                           ;! ---------------------------------------------------------------------------------
  1407                           ;! (1) _setT1                                                4     0      4      98
  1408                           ;!                                              3 COMMON     4     0      4
  1409                           ;! ---------------------------------------------------------------------------------
  1410                           ;! (1) _led1                                                 1     1      0      15
  1411                           ;!                                              3 COMMON     1     1      0
  1412                           ;! ---------------------------------------------------------------------------------
  1413                           ;! (1) _initTimer1                                           0     0      0     174
  1414                           ;!                        _setT1limite
  1415                           ;! ---------------------------------------------------------------------------------
  1416                           ;! (1) _setT1limite                                          4     0      4     174
  1417                           ;!                                              3 COMMON     4     0      4
  1418                           ;! ---------------------------------------------------------------------------------
  1419                           ;! (1) _initLEDs                                             0     0      0       0
  1420                           ;! ---------------------------------------------------------------------------------
  1421                           ;! (1) _dispLCD_num                                         12     8      4    3291
  1422                           ;!                                              5 BANK0     12     8      4
  1423                           ;!                            ___awdiv
  1424                           ;!                            ___awmod
  1425                           ;!                    _dispLCD_dataReg
  1426                           ;!                     _dispLCD_lincol
  1427                           ;!                           _statusT1 (ARG)
  1428                           ;! ---------------------------------------------------------------------------------
  1429                           ;! (2) ___awmod                                              7     3      4     613
  1430                           ;!                                              3 COMMON     5     1      4
  1431                           ;!                                              0 BANK0      2     2      0
  1432                           ;! ---------------------------------------------------------------------------------
  1433                           ;! (2) ___awdiv                                              9     5      4    1345
  1434                           ;!                                              5 COMMON     4     0      4
  1435                           ;!                                              0 BANK0      5     5      0
  1436                           ;!                     _statusT1limite (ARG)
  1437                           ;! ---------------------------------------------------------------------------------
  1438                           ;! (1) _dispLCD_init                                         0     0      0     427
  1439                           ;!                              _delay
  1440                           ;!                    _dispLCD_instReg
  1441                           ;! ---------------------------------------------------------------------------------
  1442                           ;! (2) _delay                                                3     1      2     251
  1443                           ;!                                              3 COMMON     3     1      2
  1444                           ;! ---------------------------------------------------------------------------------
  1445                           ;! (1) _dispLCD                                              5     3      2     760
  1446                           ;!                                              0 BANK0      5     3      2
  1447                           ;!                    _dispLCD_dataReg
  1448                           ;!                     _dispLCD_lincol
  1449                           ;! ---------------------------------------------------------------------------------
  1450                           ;! (2) _dispLCD_lincol                                       3     2      1     372
  1451                           ;!                                              6 COMMON     3     2      1
  1452                           ;!                    _dispLCD_instReg
  1453                           ;! ---------------------------------------------------------------------------------
  1454                           ;! (3) _dispLCD_instReg                                      3     3      0     176
  1455                           ;!                                              3 COMMON     3     3      0
  1456                           ;! ---------------------------------------------------------------------------------
  1457                           ;! (2) _dispLCD_dataReg                                      2     2      0      44
  1458                           ;!                                              3 COMMON     2     2      0
  1459                           ;! ---------------------------------------------------------------------------------
  1460                           ;! Estimated maximum stack depth 3
  1461                           ;! ---------------------------------------------------------------------------------
  1462                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1463                           ;! ---------------------------------------------------------------------------------
  1464                           ;! (4) _irq                                                  2     2      0       0
  1465                           ;!                                              1 COMMON     2     2      0
  1466                           ;!                          _intt1_1ms
  1467                           ;! ---------------------------------------------------------------------------------
  1468                           ;! (5) _intt1_1ms                                            1     1      0       0
  1469                           ;!                                              0 COMMON     1     1      0
  1470                           ;! ---------------------------------------------------------------------------------
  1471                           ;! Estimated maximum stack depth 5
  1472                           ;! ---------------------------------------------------------------------------------
  1473                           ;!
  1474                           ;! Call Graph Graphs:
  1475                           ;!
  1476                           ;! _main (ROOT)
  1477                           ;!   ___awdiv
  1478                           ;!     _statusT1limite (ARG)
  1479                           ;!   _dispLCD
  1480                           ;!     _dispLCD_dataReg
  1481                           ;!     _dispLCD_lincol
  1482                           ;!       _dispLCD_instReg
  1483                           ;!   _dispLCD_init
  1484                           ;!     _delay
  1485                           ;!     _dispLCD_instReg
  1486                           ;!   _dispLCD_num
  1487                           ;!     ___awdiv
  1488                           ;!       _statusT1limite (ARG)
  1489                           ;!     ___awmod
  1490                           ;!     _dispLCD_dataReg
  1491                           ;!     _dispLCD_lincol
  1492                           ;!       _dispLCD_instReg
  1493                           ;!     _statusT1 (ARG)
  1494                           ;!   _initLEDs
  1495                           ;!   _initTimer1
  1496                           ;!     _setT1limite
  1497                           ;!   _led1
  1498                           ;!   _setT1
  1499                           ;!   _setT1limite
  1500                           ;!   _statusT1
  1501                           ;!   _statusT1limite
  1502                           ;!   _statusled1
  1503                           ;!
  1504                           ;! _irq (ROOT)
  1505                           ;!   _intt1_1ms
  1506                           ;!
  1507                           
  1508                           ;! Address spaces:
  1509                           
  1510                           ;!Name               Size   Autos  Total    Cost      Usage
  1511                           ;!BITCOMMON            E      0       0       0        0.0%
  1512                           ;!EEDATA             100      0       0       0        0.0%
  1513                           ;!NULL                 0      0       0       0        0.0%
  1514                           ;!CODE                 0      0       0       0        0.0%
  1515                           ;!COMMON               E      9       B       1       78.6%
  1516                           ;!BITSFR0              0      0       0       1        0.0%
  1517                           ;!SFR0                 0      0       0       1        0.0%
  1518                           ;!BITSFR1              0      0       0       2        0.0%
  1519                           ;!SFR1                 0      0       0       2        0.0%
  1520                           ;!STACK                0      0       0       2        0.0%
  1521                           ;!ABS                  0      0      23       3        0.0%
  1522                           ;!BITBANK0            50      0       0       4        0.0%
  1523                           ;!BITSFR3              0      0       0       4        0.0%
  1524                           ;!SFR3                 0      0       0       4        0.0%
  1525                           ;!BANK0               50     14      18       5       30.0%
  1526                           ;!BITSFR2              0      0       0       5        0.0%
  1527                           ;!SFR2                 0      0       0       5        0.0%
  1528                           ;!BITBANK1            50      0       0       6        0.0%
  1529                           ;!BANK1               50      0       0       7        0.0%
  1530                           ;!BITBANK3            60      0       0       8        0.0%
  1531                           ;!BANK3               60      0       0       9        0.0%
  1532                           ;!BITBANK2            60      0       0      10        0.0%
  1533                           ;!BANK2               60      0       0      11        0.0%
  1534                           ;!DATA                 0      0      23      12        0.0%
  1535                           
  1536                           	global	_main
  1537                           
  1538 ;; *************** function _main *****************
  1539 ;; Defined at:
  1540 ;;		line 15 in file "main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : B00/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0
  1556 ;;      Temps:          0       3       0       0       0
  1557 ;;      Totals:         0       3       0       0       0
  1558 ;;Total ram usage:        3 bytes
  1559 ;; Hardware stack levels required when called:    5
  1560 ;; This function calls:
  1561 ;;		___awdiv
  1562 ;;		_dispLCD
  1563 ;;		_dispLCD_init
  1564 ;;		_dispLCD_num
  1565 ;;		_initLEDs
  1566 ;;		_initTimer1
  1567 ;;		_led1
  1568 ;;		_setT1
  1569 ;;		_setT1limite
  1570 ;;		_statusT1
  1571 ;;		_statusT1limite
  1572 ;;		_statusled1
  1573 ;; This function is called by:
  1574 ;;		Startup code after reset
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1578                           	file	"main.c"
  1579                           	line	15
  1580                           global __pmaintext
  1581                           __pmaintext:	;psect for function _main
  1582  0109                     psect	maintext
  1583                           	file	"main.c"
  1584                           	line	15
  1585                           	global	__size_of_main
  1586                           	__size_of_main	equ	__end_of_main-_main
  1587  0097                     	
  1588                           _main:	
  1589  0109                     ;incstack = 0
  1590                           	opt	stack 3
  1591                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1592                           	line	17
  1593                           	
  1594                           l1430:	
  1595  0109                     ;main.c: 17:     dispLCD_init();
  1596                           	fcall	_dispLCD_init
  1597  0109  120A  118A  22F1  120A  118A  	line	18
  1598                           	
  1599                           l1432:	
  1600  010E                     ;main.c: 18:     initLEDs();
  1601                           	fcall	_initLEDs
  1602  010E  120A  118A  2452  120A  118A  	line	19
  1603                           	
  1604                           l1434:	
  1605  0113                     ;main.c: 19:     initTimer1();
  1606                           	fcall	_initTimer1
  1607  0113  120A  118A  23B8  120A  118A  	line	20
  1608                           	
  1609                           l1436:	
  1610  0118                     ;main.c: 20:     statusled1();
  1611                           	fcall	_statusled1
  1612  0118  120A  118A  2467  120A  118A  	line	22
  1613                           	
  1614                           l1438:	
  1615  011D                     ;main.c: 22:     setT1( 0 );
  1616                           	movlw	high highword(0)
  1617  011D  3000               	movwf	(setT1@c+3)
  1618  011E  00F6               	movlw	low highword(0)
  1619  011F  3000               	movwf	(setT1@c+2)
  1620  0120  00F5               	movlw	high(0)
  1621  0121  3000               	movwf	(setT1@c+1)
  1622  0122  00F4               	movlw	low(0)
  1623  0123  3000               	movwf	(setT1@c)
  1624  0124  00F3               
  1625                           	fcall	_setT1
  1626  0125  120A  118A  245A  120A  118A  	line	23
  1627                           	
  1628                           l1440:	
  1629  012A                     ;main.c: 23:     setT1limite( 10000);
  1630                           	movlw	0
  1631  012A  3000               	movwf	(setT1limite@d+3)
  1632  012B  00F6               	movlw	0
  1633  012C  3000               	movwf	(setT1limite@d+2)
  1634  012D  00F5               	movlw	027h
  1635  012E  3027               	movwf	(setT1limite@d+1)
  1636  012F  00F4               	movlw	010h
  1637  0130  3010               	movwf	(setT1limite@d)
  1638  0131  00F3               
  1639                           	fcall	_setT1limite
  1640  0132  120A  118A  246C  120A  118A  	line	25
  1641                           	
  1642                           l1442:	
  1643  0137                     ;main.c: 25:     dispLCD(0,0,"Contador:       ");
  1644                           	bcf	status, 5	;RP0=0, select bank0
  1645  0137  1283               	bcf	status, 6	;RP1=0, select bank0
  1646  0138  1303               	clrf	(dispLCD@col)
  1647  0139  01A0               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1648  013A  3001               	movwf	(??_main+0)+0
  1649  013B  00B1               	movf	(??_main+0)+0,w
  1650  013C  0831               	movwf	(dispLCD@str)
  1651  013D  00A1               	movlw	low(0)
  1652  013E  3000               	fcall	_dispLCD
  1653  013F  120A  118A  2332  120A  118A  	goto	l1444
  1654  0144  2945               	line	27
  1655                           ;main.c: 27:     while( 1 )
  1656                           	
  1657                           l42:	
  1658  0145                     	line	29
  1659                           	
  1660                           l1444:	
  1661  0145                     ;main.c: 28:     {;main.c: 29:         dispLCD_num(0,10,statusT1(), 5 );
  1662                           	movlw	low(0Ah)
  1663  0145  300A               	bcf	status, 5	;RP0=0, select bank0
  1664  0146  1283               	bcf	status, 6	;RP1=0, select bank0
  1665  0147  1303               	movwf	(??_main+0)+0
  1666  0148  00B1               	movf	(??_main+0)+0,w
  1667  0149  0831               	movwf	(dispLCD_num@col)
  1668  014A  00A5               	fcall	_statusT1
  1669  014B  120A  118A  244A  120A  118A  	movf	(1+(?_statusT1)),w
  1670  0150  0874               	bcf	status, 5	;RP0=0, select bank0
  1671  0151  1283               	bcf	status, 6	;RP1=0, select bank0
  1672  0152  1303               	movwf	(dispLCD_num@num+1)
  1673  0153  00A7               	movf	(0+(?_statusT1)),w
  1674  0154  0873               	movwf	(dispLCD_num@num)
  1675  0155  00A6               	movlw	low(05h)
  1676  0156  3005               	movwf	(??_main+1)+0
  1677  0157  00B2               	movf	(??_main+1)+0,w
  1678  0158  0832               	movwf	(dispLCD_num@tam)
  1679  0159  00A8               	movlw	low(0)
  1680  015A  3000               	fcall	_dispLCD_num
  1681  015B  120A  118A  201B  120A  118A  	line	31
  1682                           	
  1683                           l1446:	
  1684  0160                     ;main.c: 31:         if( statusT1() >= ( statusT1limite()/2 ) )
  1685                           	fcall	_statusT1
  1686  0160  120A  118A  244A  120A  118A  	movf	(0+?_statusT1),w
  1687  0165  0873               	bcf	status, 5	;RP0=0, select bank0
  1688  0166  1283               	bcf	status, 6	;RP1=0, select bank0
  1689  0167  1303               	movwf	(??_main+0)+0
  1690  0168  00B1               	movf	(1+?_statusT1),w
  1691  0169  0874               	movwf	((??_main+0)+0+1)
  1692  016A  00B2               	movlw	02h
  1693  016B  3002               	movwf	(___awdiv@divisor)
  1694  016C  00F5               	movlw	0
  1695  016D  3000               	movwf	((___awdiv@divisor))+1
  1696  016E  00F6               	fcall	_statusT1limite
  1697  016F  120A  118A  2461  120A  118A  	movf	(1+(?_statusT1limite)),w
  1698  0174  0874               	movwf	(___awdiv@dividend+1)
  1699  0175  00F8               	movf	(0+(?_statusT1limite)),w
  1700  0176  0873               	movwf	(___awdiv@dividend)
  1701  0177  00F7               	fcall	___awdiv
  1702  0178  120A  118A  2219  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1703  017D  1283               	bcf	status, 6	;RP1=0, select bank0
  1704  017E  1303               	movf	1+(??_main+0)+0,w
  1705  017F  0832               	xorlw	80h
  1706  0180  3A80               	movwf	(??_main+2)+0
  1707  0181  00B3               	movf	(1+(?___awdiv)),w
  1708  0182  0876               	xorlw	80h
  1709  0183  3A80               	subwf	(??_main+2)+0,w
  1710  0184  0233               	skipz
  1711  0185  1D03               	goto	u1165
  1712  0186  2989               	movf	(0+(?___awdiv)),w
  1713  0187  0875               	subwf	0+(??_main+0)+0,w
  1714  0188  0231               u1165:
  1715  0189                     
  1716                           	skipc
  1717  0189  1C03               	goto	u1161
  1718  018A  298C               	goto	u1160
  1719  018B  298D               u1161:
  1720  018C                     	goto	l1450
  1721  018C  2994               u1160:
  1722  018D                     	line	32
  1723                           	
  1724                           l1448:	
  1725  018D                     ;main.c: 32:             led1( 1 );
  1726                           	movlw	low(01h)
  1727  018D  3001               	fcall	_led1
  1728  018E  120A  118A  2441  120A  118A  	goto	l1444
  1729  0193  2945               	line	33
  1730                           ;main.c: 33:         else
  1731                           	
  1732                           l43:	
  1733  0194                     	line	34
  1734                           	
  1735                           l1450:	
  1736  0194                     ;main.c: 34:             led1( 0 );
  1737                           	movlw	low(0)
  1738  0194  3000               	fcall	_led1
  1739  0195  120A  118A  2441  120A  118A  	goto	l1444
  1740  019A  2945               	
  1741                           l44:	
  1742  019B                     	goto	l1444
  1743  019B  2945               	line	35
  1744                           ;main.c: 35:     }
  1745                           	
  1746                           l45:	
  1747  019C                     	goto	l1444
  1748  019C  2945               	
  1749                           l46:	
  1750  019D                     	line	36
  1751                           	
  1752                           l47:	
  1753  019D                     	global	start
  1754                           	ljmp	start
  1755  019D  120A  118A  280C   	opt stack 0
  1756                           GLOBAL	__end_of_main
  1757                           	__end_of_main:
  1758  01A0                     	signat	_main,89
  1759                           	global	_statusled1
  1760                           
  1761 ;; *************** function _statusled1 *****************
  1762 ;; Defined at:
  1763 ;;		line 14 in file "leds.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      unsigned char 
  1770 ;; Registers used:
  1771 ;;		wreg
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0
  1780 ;;      Totals:         0       0       0       0       0
  1781 ;;Total ram usage:        0 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    2
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1791                           	file	"leds.c"
  1792                           	line	14
  1793                           global __ptext1
  1794                           __ptext1:	;psect for function _statusled1
  1795  0467                     psect	text1
  1796                           	file	"leds.c"
  1797                           	line	14
  1798                           	global	__size_of_statusled1
  1799                           	__size_of_statusled1	equ	__end_of_statusled1-_statusled1
  1800  0005                     	
  1801                           _statusled1:	
  1802  0467                     ;incstack = 0
  1803                           	opt	stack 5
  1804                           ; Regs used in _statusled1: [wreg]
  1805                           	line	16
  1806                           	
  1807                           l890:	
  1808  0467                     ;leds.c: 16:     return( PORTCbits.RC7 );;	Return value of _statusled1 is never used
  1809                           	bcf	status, 5	;RP0=0, select bank0
  1810  0467  1283               	bcf	status, 6	;RP1=0, select bank0
  1811  0468  1303               	movf	(7),w	;volatile
  1812  0469  0807               	goto	l15
  1813  046A  2C6B               	
  1814                           l892:	
  1815  046B                     	line	17
  1816                           	
  1817                           l15:	
  1818  046B                     	return
  1819  046B  0008               	opt stack 0
  1820                           GLOBAL	__end_of_statusled1
  1821                           	__end_of_statusled1:
  1822  046C                     	signat	_statusled1,89
  1823                           	global	_statusT1limite
  1824                           
  1825 ;; *************** function _statusT1limite *****************
  1826 ;; Defined at:
  1827 ;;		line 51 in file "timer1.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  2    3[COMMON] int 
  1834 ;; Registers used:
  1835 ;;		wreg
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         2       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0
  1844 ;;      Totals:         2       0       0       0       0
  1845 ;;Total ram usage:        2 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    2
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1855                           	file	"timer1.c"
  1856                           	line	51
  1857                           global __ptext2
  1858                           __ptext2:	;psect for function _statusT1limite
  1859  0461                     psect	text2
  1860                           	file	"timer1.c"
  1861                           	line	51
  1862                           	global	__size_of_statusT1limite
  1863                           	__size_of_statusT1limite	equ	__end_of_statusT1limite-_statusT1limite
  1864  0006                     	
  1865                           _statusT1limite:	
  1866  0461                     ;incstack = 0
  1867                           	opt	stack 5
  1868                           ; Regs used in _statusT1limite: [wreg]
  1869                           	line	53
  1870                           	
  1871                           l1262:	
  1872  0461                     ;timer1.c: 53:     return( t1final );
  1873                           	movf	(_t1final+1),w
  1874  0461  087A               	movwf	(?_statusT1limite+1)
  1875  0462  00F4               	movf	(_t1final),w
  1876  0463  0879               	movwf	(?_statusT1limite)
  1877  0464  00F3               	goto	l89
  1878  0465  2C66               	
  1879                           l1264:	
  1880  0466                     	line	54
  1881                           	
  1882                           l89:	
  1883  0466                     	return
  1884  0466  0008               	opt stack 0
  1885                           GLOBAL	__end_of_statusT1limite
  1886                           	__end_of_statusT1limite:
  1887  0467                     	signat	_statusT1limite,90
  1888                           	global	_statusT1
  1889                           
  1890 ;; *************** function _statusT1 *****************
  1891 ;; Defined at:
  1892 ;;		line 41 in file "timer1.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  2    3[COMMON] int 
  1899 ;; Registers used:
  1900 ;;		wreg
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         2       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0
  1909 ;;      Totals:         2       0       0       0       0
  1910 ;;Total ram usage:        2 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    2
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1920                           	line	41
  1921                           global __ptext3
  1922                           __ptext3:	;psect for function _statusT1
  1923  044A                     psect	text3
  1924                           	file	"timer1.c"
  1925                           	line	41
  1926                           	global	__size_of_statusT1
  1927                           	__size_of_statusT1	equ	__end_of_statusT1-_statusT1
  1928  0008                     	
  1929                           _statusT1:	
  1930  044A                     ;incstack = 0
  1931                           	opt	stack 5
  1932                           ; Regs used in _statusT1: [wreg]
  1933                           	line	43
  1934                           	
  1935                           l1224:	
  1936  044A                     ;timer1.c: 43:     return( t1cont );
  1937                           	bcf	status, 5	;RP0=0, select bank0
  1938  044A  1283               	bcf	status, 6	;RP1=0, select bank0
  1939  044B  1303               	movf	(_t1cont+1),w
  1940  044C  0835               	movwf	(?_statusT1+1)
  1941  044D  00F4               	movf	(_t1cont),w
  1942  044E  0834               	movwf	(?_statusT1)
  1943  044F  00F3               	goto	l83
  1944  0450  2C51               	
  1945                           l1226:	
  1946  0451                     	line	44
  1947                           	
  1948                           l83:	
  1949  0451                     	return
  1950  0451  0008               	opt stack 0
  1951                           GLOBAL	__end_of_statusT1
  1952                           	__end_of_statusT1:
  1953  0452                     	signat	_statusT1,90
  1954                           	global	_setT1
  1955                           
  1956 ;; *************** function _setT1 *****************
  1957 ;; Defined at:
  1958 ;;		line 36 in file "timer1.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  c               4    3[COMMON] long 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         4       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0
  1975 ;;      Totals:         4       0       0       0       0
  1976 ;;Total ram usage:        4 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    2
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1986                           	line	36
  1987                           global __ptext4
  1988                           __ptext4:	;psect for function _setT1
  1989  045A                     psect	text4
  1990                           	file	"timer1.c"
  1991                           	line	36
  1992                           	global	__size_of_setT1
  1993                           	__size_of_setT1	equ	__end_of_setT1-_setT1
  1994  0007                     	
  1995                           _setT1:	
  1996  045A                     ;incstack = 0
  1997                           	opt	stack 5
  1998                           ; Regs used in _setT1: [wreg]
  1999                           	line	38
  2000                           	
  2001                           l1210:	
  2002  045A                     ;timer1.c: 36: void setT1( long c );timer1.c: 37: {;timer1.c: 38:     t1cont = c;
  2003                           	movf	(setT1@c+1),w
  2004  045A  0874               	bcf	status, 5	;RP0=0, select bank0
  2005  045B  1283               	bcf	status, 6	;RP1=0, select bank0
  2006  045C  1303               	movwf	(_t1cont+1)
  2007  045D  00B5               	movf	(setT1@c),w
  2008  045E  0873               	movwf	(_t1cont)
  2009  045F  00B4               	line	39
  2010                           	
  2011                           l80:	
  2012  0460                     	return
  2013  0460  0008               	opt stack 0
  2014                           GLOBAL	__end_of_setT1
  2015                           	__end_of_setT1:
  2016  0461                     	signat	_setT1,4217
  2017                           	global	_led1
  2018                           
  2019 ;; *************** function _led1 *****************
  2020 ;; Defined at:
  2021 ;;		line 10 in file "leds.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  b               1    wreg     unsigned char 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  b               1    3[COMMON] unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2035 ;;      Params:         0       0       0       0       0
  2036 ;;      Locals:         1       0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0
  2038 ;;      Totals:         1       0       0       0       0
  2039 ;;Total ram usage:        1 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    2
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2049                           	file	"leds.c"
  2050                           	line	10
  2051                           global __ptext5
  2052                           __ptext5:	;psect for function _led1
  2053  0441                     psect	text5
  2054                           	file	"leds.c"
  2055                           	line	10
  2056                           	global	__size_of_led1
  2057                           	__size_of_led1	equ	__end_of_led1-_led1
  2058  0009                     	
  2059                           _led1:	
  2060  0441                     ;incstack = 0
  2061                           	opt	stack 5
  2062                           ; Regs used in _led1: [wreg+status,0]
  2063                           ;led1@b stored from wreg
  2064                           	movwf	(led1@b)
  2065  0441  00F3               	line	12
  2066                           	
  2067                           l888:	
  2068  0442                     ;leds.c: 10: void led1( unsigned char b );leds.c: 11: {;leds.c: 12:     PORTCbits.RC7 = 
                                 b;
  2069                           	rrf	(led1@b),w
  2070  0442  0C73               	bcf	status, 5	;RP0=0, select bank0
  2071  0443  1283               	bcf	status, 6	;RP1=0, select bank0
  2072  0444  1303               	skipc
  2073  0445  1C03               	bcf	(7),7	;volatile
  2074  0446  1387               	skipnc
  2075  0447  1803               	bsf	(7),7	;volatile
  2076  0448  1787               	line	13
  2077                           	
  2078                           l12:	
  2079  0449                     	return
  2080  0449  0008               	opt stack 0
  2081                           GLOBAL	__end_of_led1
  2082                           	__end_of_led1:
  2083  044A                     	signat	_led1,4217
  2084                           	global	_initTimer1
  2085                           
  2086 ;; *************** function _initTimer1 *****************
  2087 ;; Defined at:
  2088 ;;		line 56 in file "timer1.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0, pclath, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2102 ;;      Params:         0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0
  2105 ;;      Totals:         0       0       0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    3
  2109 ;; This function calls:
  2110 ;;		_setT1limite
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2116                           	file	"timer1.c"
  2117                           	line	56
  2118                           global __ptext6
  2119                           __ptext6:	;psect for function _initTimer1
  2120  03B8                     psect	text6
  2121                           	file	"timer1.c"
  2122                           	line	56
  2123                           	global	__size_of_initTimer1
  2124                           	__size_of_initTimer1	equ	__end_of_initTimer1-_initTimer1
  2125  001D                     	
  2126                           _initTimer1:	
  2127  03B8                     ;incstack = 0
  2128                           	opt	stack 4
  2129                           ; Regs used in _initTimer1: [wreg+status,2+status,0+pclath+cstack]
  2130                           	line	58
  2131                           	
  2132                           l1198:	
  2133  03B8                     ;timer1.c: 58:     INTCONbits.GIE = 0;
  2134                           	bcf	(11),7	;volatile
  2135  03B8  138B               	line	59
  2136                           ;timer1.c: 59:     T1CONbits.TMR1CS = 0;
  2137                           	bcf	status, 5	;RP0=0, select bank0
  2138  03B9  1283               	bcf	status, 6	;RP1=0, select bank0
  2139  03BA  1303               	bcf	(16),1	;volatile
  2140  03BB  1090               	line	60
  2141                           ;timer1.c: 60:     T1CONbits.T1CKPS1 = 0;
  2142                           	bcf	(16),5	;volatile
  2143  03BC  1290               	line	61
  2144                           ;timer1.c: 61:     T1CONbits.T1CKPS0 = 0;
  2145                           	bcf	(16),4	;volatile
  2146  03BD  1210               	line	62
  2147                           ;timer1.c: 62:     T1CONbits.TMR1GE = 0;
  2148                           	bcf	(16),6	;volatile
  2149  03BE  1310               	line	64
  2150                           	
  2151                           l1200:	
  2152  03BF                     ;timer1.c: 64:     setT1limite( 1000 );
  2153                           	movlw	0
  2154  03BF  3000               	movwf	(setT1limite@d+3)
  2155  03C0  00F6               	movlw	0
  2156  03C1  3000               	movwf	(setT1limite@d+2)
  2157  03C2  00F5               	movlw	03h
  2158  03C3  3003               	movwf	(setT1limite@d+1)
  2159  03C4  00F4               	movlw	0E8h
  2160  03C5  30E8               	movwf	(setT1limite@d)
  2161  03C6  00F3               
  2162                           	fcall	_setT1limite
  2163  03C7  120A  118A  246C  120A  118A  	line	66
  2164                           	
  2165                           l1202:	
  2166  03CC                     ;timer1.c: 66:     T1CONbits.TMR1ON = 1;
  2167                           	bcf	status, 5	;RP0=0, select bank0
  2168  03CC  1283               	bcf	status, 6	;RP1=0, select bank0
  2169  03CD  1303               	bsf	(16),0	;volatile
  2170  03CE  1410               	line	67
  2171                           	
  2172                           l1204:	
  2173  03CF                     ;timer1.c: 67:     INTCONbits.PEIE = 1;
  2174                           	bsf	(11),6	;volatile
  2175  03CF  170B               	line	68
  2176                           	
  2177                           l1206:	
  2178  03D0                     ;timer1.c: 68:     PIE1bits.TMR1IE =1;
  2179                           	bsf	status, 5	;RP0=1, select bank1
  2180  03D0  1683               	bcf	status, 6	;RP1=0, select bank1
  2181  03D1  1303               	bsf	(140)^080h,0	;volatile
  2182  03D2  140C               	line	69
  2183                           	
  2184                           l1208:	
  2185  03D3                     ;timer1.c: 69:     INTCONbits.GIE = 1;
  2186                           	bsf	(11),7	;volatile
  2187  03D3  178B               	line	70
  2188                           	
  2189                           l92:	
  2190  03D4                     	return
  2191  03D4  0008               	opt stack 0
  2192                           GLOBAL	__end_of_initTimer1
  2193                           	__end_of_initTimer1:
  2194  03D5                     	signat	_initTimer1,89
  2195                           	global	_setT1limite
  2196                           
  2197 ;; *************** function _setT1limite *****************
  2198 ;; Defined at:
  2199 ;;		line 46 in file "timer1.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  d               4    3[COMMON] long 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2213 ;;      Params:         4       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0
  2216 ;;      Totals:         4       0       0       0       0
  2217 ;;Total ram usage:        4 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    2
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;;		_initTimer1
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2228                           	line	46
  2229                           global __ptext7
  2230                           __ptext7:	;psect for function _setT1limite
  2231  046C                     psect	text7
  2232                           	file	"timer1.c"
  2233                           	line	46
  2234                           	global	__size_of_setT1limite
  2235                           	__size_of_setT1limite	equ	__end_of_setT1limite-_setT1limite
  2236  0005                     	
  2237                           _setT1limite:	
  2238  046C                     ;incstack = 0
  2239                           	opt	stack 5
  2240                           ; Regs used in _setT1limite: [wreg]
  2241                           	line	48
  2242                           	
  2243                           l1068:	
  2244  046C                     ;timer1.c: 46: void setT1limite( long d );timer1.c: 47: {;timer1.c: 48:     t1final = d;
                                 
  2245                           	movf	(setT1limite@d+1),w
  2246  046C  0874               	movwf	(_t1final+1)
  2247  046D  00FA               	movf	(setT1limite@d),w
  2248  046E  0873               	movwf	(_t1final)
  2249  046F  00F9               	line	49
  2250                           	
  2251                           l86:	
  2252  0470                     	return
  2253  0470  0008               	opt stack 0
  2254                           GLOBAL	__end_of_setT1limite
  2255                           	__end_of_setT1limite:
  2256  0471                     	signat	_setT1limite,4217
  2257                           	global	_initLEDs
  2258                           
  2259 ;; *************** function _initLEDs *****************
  2260 ;; Defined at:
  2261 ;;		line 3 in file "leds.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		None
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0
  2278 ;;      Totals:         0       0       0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    2
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2289                           	file	"leds.c"
  2290                           	line	3
  2291                           global __ptext8
  2292                           __ptext8:	;psect for function _initLEDs
  2293  0452                     psect	text8
  2294                           	file	"leds.c"
  2295                           	line	3
  2296                           	global	__size_of_initLEDs
  2297                           	__size_of_initLEDs	equ	__end_of_initLEDs-_initLEDs
  2298  0008                     	
  2299                           _initLEDs:	
  2300  0452                     ;incstack = 0
  2301                           	opt	stack 5
  2302                           ; Regs used in _initLEDs: []
  2303                           	line	5
  2304                           	
  2305                           l886:	
  2306  0452                     ;leds.c: 5:     RCSTAbits.SPEN = 0;
  2307                           	bcf	status, 5	;RP0=0, select bank0
  2308  0452  1283               	bcf	status, 6	;RP1=0, select bank0
  2309  0453  1303               	bcf	(24),7	;volatile
  2310  0454  1398               	line	6
  2311                           ;leds.c: 6:     PORTCbits.RC7 = 0;
  2312                           	bcf	(7),7	;volatile
  2313  0455  1387               	line	7
  2314                           ;leds.c: 7:     TRISCbits.TRISC7 = 0;
  2315                           	bsf	status, 5	;RP0=1, select bank1
  2316  0456  1683               	bcf	status, 6	;RP1=0, select bank1
  2317  0457  1303               	bcf	(135)^080h,7	;volatile
  2318  0458  1387               	line	8
  2319                           	
  2320                           l9:	
  2321  0459                     	return
  2322  0459  0008               	opt stack 0
  2323                           GLOBAL	__end_of_initLEDs
  2324                           	__end_of_initLEDs:
  2325  045A                     	signat	_initLEDs,89
  2326                           	global	_dispLCD_num
  2327                           
  2328 ;; *************** function _dispLCD_num *****************
  2329 ;; Defined at:
  2330 ;;		line 159 in file "lcd.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  lin             1    wreg     unsigned char 
  2333 ;;  col             1    5[BANK0 ] unsigned char 
  2334 ;;  num             2    6[BANK0 ] int 
  2335 ;;  tam             1    8[BANK0 ] unsigned char 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  lin             1   12[BANK0 ] unsigned char 
  2338 ;;  div             2   15[BANK0 ] int 
  2339 ;;  sinal           1   14[BANK0 ] unsigned char 
  2340 ;;  size            1   13[BANK0 ] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2350 ;;      Params:         0       4       0       0       0
  2351 ;;      Locals:         0       5       0       0       0
  2352 ;;      Temps:          0       3       0       0       0
  2353 ;;      Totals:         0      12       0       0       0
  2354 ;;Total ram usage:       12 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    4
  2357 ;; This function calls:
  2358 ;;		___awdiv
  2359 ;;		___awmod
  2360 ;;		_dispLCD_dataReg
  2361 ;;		_dispLCD_lincol
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  2367                           	file	"lcd.c"
  2368                           	line	159
  2369                           global __ptext9
  2370                           __ptext9:	;psect for function _dispLCD_num
  2371  001B                     psect	text9
  2372                           	file	"lcd.c"
  2373                           	line	159
  2374                           	global	__size_of_dispLCD_num
  2375                           	__size_of_dispLCD_num	equ	__end_of_dispLCD_num-_dispLCD_num
  2376  00EE                     	
  2377                           _dispLCD_num:	
  2378  001B                     ;incstack = 0
  2379                           	opt	stack 3
  2380                           ; Regs used in _dispLCD_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2381                           ;dispLCD_num@lin stored from wreg
  2382                           	bcf	status, 5	;RP0=0, select bank0
  2383  001B  1283               	bcf	status, 6	;RP1=0, select bank0
  2384  001C  1303               	movwf	(dispLCD_num@lin)
  2385  001D  00AC               	line	166
  2386                           	
  2387                           l1396:	
  2388  001E                     ;lcd.c: 159: void dispLCD_num( unsigned char lin, unsigned char col,;lcd.c: 160:        
                                              int num, unsigned char tam );lcd.c: 161: {;lcd.c: 162:     int div;;lcd.c: 
                                 163:     unsigned char size;;lcd.c: 164:     char sinal;;lcd.c: 166:     sinal = num < 0
                                 ;
  2389                           	btfsc	(dispLCD_num@num+1),7
  2390  001E  1BA7               	goto	u1071
  2391  001F  2821               	goto	u1070
  2392  0020  2823               u1071:
  2393  0021                     	movlw	1
  2394  0021  3001               	goto	u1080
  2395  0022  2824               u1070:
  2396  0023                     	movlw	0
  2397  0023  3000               u1080:
  2398  0024                     	movwf	(??_dispLCD_num+0)+0
  2399  0024  00A9               	movf	(??_dispLCD_num+0)+0,w
  2400  0025  0829               	movwf	(dispLCD_num@sinal)
  2401  0026  00AE               	line	167
  2402                           	
  2403                           l1398:	
  2404  0027                     ;lcd.c: 167:     if( sinal )
  2405                           	movf	((dispLCD_num@sinal)),w
  2406  0027  082E               	btfsc	status,2
  2407  0028  1903               	goto	u1091
  2408  0029  282B               	goto	u1090
  2409  002A  282C               u1091:
  2410  002B                     	goto	l1402
  2411  002B  2832               u1090:
  2412  002C                     	line	168
  2413                           	
  2414                           l1400:	
  2415  002C                     ;lcd.c: 168:         num = (~num) + 1;
  2416                           	comf	(dispLCD_num@num),f
  2417  002C  09A6               	comf	(dispLCD_num@num+1),f
  2418  002D  09A7               	incf	(dispLCD_num@num),f
  2419  002E  0AA6               	skipnz
  2420  002F  1903               	incf	(dispLCD_num@num+1),f
  2421  0030  0AA7               	goto	l1402
  2422  0031  2832               	
  2423                           l138:	
  2424  0032                     	line	170
  2425                           	
  2426                           l1402:	
  2427  0032                     ;lcd.c: 170:     dispLCD_lincol(lin, col);
  2428                           	movf	(dispLCD_num@col),w
  2429  0032  0825               	movwf	(??_dispLCD_num+0)+0
  2430  0033  00A9               	movf	(??_dispLCD_num+0)+0,w
  2431  0034  0829               	movwf	(dispLCD_lincol@col)
  2432  0035  00F6               	movf	(dispLCD_num@lin),w
  2433  0036  082C               	fcall	_dispLCD_lincol
  2434  0037  120A  118A  242E  120A  118A  	line	172
  2435                           	
  2436                           l1404:	
  2437  003C                     ;lcd.c: 172:     div=10000;
  2438                           	movlw	010h
  2439  003C  3010               	bcf	status, 5	;RP0=0, select bank0
  2440  003D  1283               	bcf	status, 6	;RP1=0, select bank0
  2441  003E  1303               	movwf	(dispLCD_num@div)
  2442  003F  00AF               	movlw	027h
  2443  0040  3027               	movwf	((dispLCD_num@div))+1
  2444  0041  00B0               	line	173
  2445                           	
  2446                           l1406:	
  2447  0042                     ;lcd.c: 173:     size = 5;
  2448                           	movlw	low(05h)
  2449  0042  3005               	movwf	(??_dispLCD_num+0)+0
  2450  0043  00A9               	movf	(??_dispLCD_num+0)+0,w
  2451  0044  0829               	movwf	(dispLCD_num@size)
  2452  0045  00AD               	line	174
  2453                           ;lcd.c: 174:     while( div >= 1 )
  2454                           	goto	l1414
  2455  0046  2876               	
  2456                           l140:	
  2457  0047                     	line	176
  2458                           	
  2459                           l1408:	
  2460  0047                     ;lcd.c: 175:     {;lcd.c: 176:         if( num/div == 0 )
  2461                           	bcf	status, 5	;RP0=0, select bank0
  2462  0047  1283               	bcf	status, 6	;RP1=0, select bank0
  2463  0048  1303               	movf	(dispLCD_num@div+1),w
  2464  0049  0830               	movwf	(___awdiv@divisor+1)
  2465  004A  00F6               	movf	(dispLCD_num@div),w
  2466  004B  082F               	movwf	(___awdiv@divisor)
  2467  004C  00F5               	movf	(dispLCD_num@num+1),w
  2468  004D  0827               	movwf	(___awdiv@dividend+1)
  2469  004E  00F8               	movf	(dispLCD_num@num),w
  2470  004F  0826               	movwf	(___awdiv@dividend)
  2471  0050  00F7               	fcall	___awdiv
  2472  0051  120A  118A  2219  120A  118A  	movf	((0+(?___awdiv))),w
  2473  0056  0875               iorwf	((1+(?___awdiv))),w
  2474  0057  0476               	btfss	status,2
  2475  0058  1D03               	goto	u1101
  2476  0059  285B               	goto	u1100
  2477  005A  285C               u1101:
  2478  005B                     	goto	l1420
  2479  005B  2890               u1100:
  2480  005C                     	line	177
  2481                           	
  2482                           l1410:	
  2483  005C                     ;lcd.c: 177:             --size;
  2484                           	movlw	01h
  2485  005C  3001               	bcf	status, 5	;RP0=0, select bank0
  2486  005D  1283               	bcf	status, 6	;RP1=0, select bank0
  2487  005E  1303               	subwf	(dispLCD_num@size),f
  2488  005F  02AD               	goto	l1412
  2489  0060  2862               	line	178
  2490                           ;lcd.c: 178:         else
  2491                           	
  2492                           l141:	
  2493  0061                     	line	179
  2494                           ;lcd.c: 179:             break;
  2495                           	goto	l1420
  2496  0061  2890               	
  2497                           l142:	
  2498  0062                     	line	180
  2499                           	
  2500                           l1412:	
  2501  0062                     ;lcd.c: 180:         div/=10;
  2502                           	movlw	0Ah
  2503  0062  300A               	movwf	(___awdiv@divisor)
  2504  0063  00F5               	movlw	0
  2505  0064  3000               	movwf	((___awdiv@divisor))+1
  2506  0065  00F6               	movf	(dispLCD_num@div+1),w
  2507  0066  0830               	movwf	(___awdiv@dividend+1)
  2508  0067  00F8               	movf	(dispLCD_num@div),w
  2509  0068  082F               	movwf	(___awdiv@dividend)
  2510  0069  00F7               	fcall	___awdiv
  2511  006A  120A  118A  2219  120A  118A  	movf	(1+(?___awdiv)),w
  2512  006F  0876               	bcf	status, 5	;RP0=0, select bank0
  2513  0070  1283               	bcf	status, 6	;RP1=0, select bank0
  2514  0071  1303               	movwf	(dispLCD_num@div+1)
  2515  0072  00B0               	movf	(0+(?___awdiv)),w
  2516  0073  0875               	movwf	(dispLCD_num@div)
  2517  0074  00AF               	goto	l1414
  2518  0075  2876               	line	181
  2519                           ;lcd.c: 181:     }
  2520                           	
  2521                           l139:	
  2522  0076                     	line	174
  2523                           	
  2524                           l1414:	
  2525  0076                     ;lcd.c: 174:     while( div >= 1 )
  2526                           	movf	(dispLCD_num@div+1),w
  2527  0076  0830               	xorlw	80h
  2528  0077  3A80               	movwf	btemp+1
  2529  0078  00FF               	movlw	(0)^80h
  2530  0079  3080               	subwf	btemp+1,w
  2531  007A  027F               	skipz
  2532  007B  1D03               	goto	u1115
  2533  007C  287F               	movlw	01h
  2534  007D  3001               	subwf	(dispLCD_num@div),w
  2535  007E  022F               u1115:
  2536  007F                     
  2537                           	skipnc
  2538  007F  1803               	goto	u1111
  2539  0080  2882               	goto	u1110
  2540  0081  2883               u1111:
  2541  0082                     	goto	l1408
  2542  0082  2847               u1110:
  2543  0083                     	goto	l1420
  2544  0083  2890               	
  2545                           l143:	
  2546  0084                     	line	183
  2547                           ;lcd.c: 183:     while( tam > (size+sinal) && tam > 1 )
  2548                           	goto	l1420
  2549  0084  2890               	
  2550                           l145:	
  2551  0085                     	line	185
  2552                           	
  2553                           l1416:	
  2554  0085                     ;lcd.c: 184:     {;lcd.c: 185:         dispLCD_dataReg(' ');
  2555                           	movlw	low(020h)
  2556  0085  3020               	fcall	_dispLCD_dataReg
  2557  0086  120A  118A  236D  120A  118A  	line	186
  2558                           	
  2559                           l1418:	
  2560  008B                     ;lcd.c: 186:         --tam;
  2561                           	movlw	01h
  2562  008B  3001               	bcf	status, 5	;RP0=0, select bank0
  2563  008C  1283               	bcf	status, 6	;RP1=0, select bank0
  2564  008D  1303               	subwf	(dispLCD_num@tam),f
  2565  008E  02A8               	goto	l1420
  2566  008F  2890               	line	187
  2567                           ;lcd.c: 187:     }
  2568                           	
  2569                           l144:	
  2570  0090                     	line	183
  2571                           	
  2572                           l1420:	
  2573  0090                     ;lcd.c: 183:     while( tam > (size+sinal) && tam > 1 )
  2574                           	bcf	status, 5	;RP0=0, select bank0
  2575  0090  1283               	bcf	status, 6	;RP1=0, select bank0
  2576  0091  1303               	movf	(dispLCD_num@size),w
  2577  0092  082D               	addwf	(dispLCD_num@sinal),w
  2578  0093  072E               	movwf	(??_dispLCD_num+0)+0
  2579  0094  00A9               	clrf	(??_dispLCD_num+0)+0+1
  2580  0095  01AA               	rlf	1+(??_dispLCD_num+0)+0,f
  2581  0096  0DAA               	
  2582                           	movf	1+(??_dispLCD_num+0)+0,w
  2583  0097  082A               	xorlw	80h
  2584  0098  3A80               	movwf	(??_dispLCD_num+2)+0
  2585  0099  00AB               	movlw	80h
  2586  009A  3080               	subwf	(??_dispLCD_num+2)+0,w
  2587  009B  022B               	skipz
  2588  009C  1D03               	goto	u1125
  2589  009D  28A0               	movf	(dispLCD_num@tam),w
  2590  009E  0828               	subwf	0+(??_dispLCD_num+0)+0,w
  2591  009F  0229               u1125:
  2592  00A0                     
  2593                           	skipnc
  2594  00A0  1803               	goto	u1121
  2595  00A1  28A3               	goto	u1120
  2596  00A2  28A4               u1121:
  2597  00A3                     	goto	l1424
  2598  00A3  28AE               u1120:
  2599  00A4                     	
  2600                           l1422:	
  2601  00A4                     	movlw	low(02h)
  2602  00A4  3002               	bcf	status, 5	;RP0=0, select bank0
  2603  00A5  1283               	bcf	status, 6	;RP1=0, select bank0
  2604  00A6  1303               	subwf	(dispLCD_num@tam),w
  2605  00A7  0228               	skipnc
  2606  00A8  1803               	goto	u1131
  2607  00A9  28AB               	goto	u1130
  2608  00AA  28AC               u1131:
  2609  00AB                     	goto	l1416
  2610  00AB  2885               u1130:
  2611  00AC                     	goto	l1424
  2612  00AC  28AE               	
  2613                           l147:	
  2614  00AD                     	goto	l1424
  2615  00AD  28AE               	
  2616                           l148:	
  2617  00AE                     	line	189
  2618                           	
  2619                           l1424:	
  2620  00AE                     ;lcd.c: 189:     if( sinal )
  2621                           	bcf	status, 5	;RP0=0, select bank0
  2622  00AE  1283               	bcf	status, 6	;RP1=0, select bank0
  2623  00AF  1303               	movf	((dispLCD_num@sinal)),w
  2624  00B0  082E               	btfsc	status,2
  2625  00B1  1903               	goto	u1141
  2626  00B2  28B4               	goto	u1140
  2627  00B3  28B5               u1141:
  2628  00B4                     	goto	l150
  2629  00B4  28BC               u1140:
  2630  00B5                     	line	190
  2631                           	
  2632                           l1426:	
  2633  00B5                     ;lcd.c: 190:         dispLCD_dataReg('-');
  2634                           	movlw	low(02Dh)
  2635  00B5  302D               	fcall	_dispLCD_dataReg
  2636  00B6  120A  118A  236D  120A  118A  	goto	l150
  2637  00BB  28BC               	
  2638                           l149:	
  2639  00BC                     	line	192
  2640                           ;lcd.c: 192:     do
  2641                           	
  2642                           l150:	
  2643  00BC                     	line	194
  2644                           ;lcd.c: 193:     {;lcd.c: 194:         dispLCD_dataReg( (unsigned char)(num / div) + '0'
                                  );
  2645                           	bcf	status, 5	;RP0=0, select bank0
  2646  00BC  1283               	bcf	status, 6	;RP1=0, select bank0
  2647  00BD  1303               	movf	(dispLCD_num@div+1),w
  2648  00BE  0830               	movwf	(___awdiv@divisor+1)
  2649  00BF  00F6               	movf	(dispLCD_num@div),w
  2650  00C0  082F               	movwf	(___awdiv@divisor)
  2651  00C1  00F5               	movf	(dispLCD_num@num+1),w
  2652  00C2  0827               	movwf	(___awdiv@dividend+1)
  2653  00C3  00F8               	movf	(dispLCD_num@num),w
  2654  00C4  0826               	movwf	(___awdiv@dividend)
  2655  00C5  00F7               	fcall	___awdiv
  2656  00C6  120A  118A  2219  120A  118A  	movf	(0+(?___awdiv)),w
  2657  00CB  0875               	addlw	030h
  2658  00CC  3E30               	fcall	_dispLCD_dataReg
  2659  00CD  120A  118A  236D  120A  118A  	line	195
  2660                           ;lcd.c: 195:         num = num % div;
  2661                           	bcf	status, 5	;RP0=0, select bank0
  2662  00D2  1283               	bcf	status, 6	;RP1=0, select bank0
  2663  00D3  1303               	movf	(dispLCD_num@div+1),w
  2664  00D4  0830               	movwf	(___awmod@divisor+1)
  2665  00D5  00F4               	movf	(dispLCD_num@div),w
  2666  00D6  082F               	movwf	(___awmod@divisor)
  2667  00D7  00F3               	movf	(dispLCD_num@num+1),w
  2668  00D8  0827               	movwf	(___awmod@dividend+1)
  2669  00D9  00F6               	movf	(dispLCD_num@num),w
  2670  00DA  0826               	movwf	(___awmod@dividend)
  2671  00DB  00F5               	fcall	___awmod
  2672  00DC  120A  118A  228C  120A  118A  	movf	(1+(?___awmod)),w
  2673  00E1  0874               	bcf	status, 5	;RP0=0, select bank0
  2674  00E2  1283               	bcf	status, 6	;RP1=0, select bank0
  2675  00E3  1303               	movwf	(dispLCD_num@num+1)
  2676  00E4  00A7               	movf	(0+(?___awmod)),w
  2677  00E5  0873               	movwf	(dispLCD_num@num)
  2678  00E6  00A6               	line	196
  2679                           ;lcd.c: 196:         div/=10;
  2680                           	movlw	0Ah
  2681  00E7  300A               	movwf	(___awdiv@divisor)
  2682  00E8  00F5               	movlw	0
  2683  00E9  3000               	movwf	((___awdiv@divisor))+1
  2684  00EA  00F6               	movf	(dispLCD_num@div+1),w
  2685  00EB  0830               	movwf	(___awdiv@dividend+1)
  2686  00EC  00F8               	movf	(dispLCD_num@div),w
  2687  00ED  082F               	movwf	(___awdiv@dividend)
  2688  00EE  00F7               	fcall	___awdiv
  2689  00EF  120A  118A  2219  120A  118A  	movf	(1+(?___awdiv)),w
  2690  00F4  0876               	bcf	status, 5	;RP0=0, select bank0
  2691  00F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2692  00F6  1303               	movwf	(dispLCD_num@div+1)
  2693  00F7  00B0               	movf	(0+(?___awdiv)),w
  2694  00F8  0875               	movwf	(dispLCD_num@div)
  2695  00F9  00AF               	line	197
  2696                           	
  2697                           l1428:	
  2698  00FA                     ;lcd.c: 197:     }
  2699                           	movf	(dispLCD_num@div+1),w
  2700  00FA  0830               	xorlw	80h
  2701  00FB  3A80               	movwf	btemp+1
  2702  00FC  00FF               	movlw	(0)^80h
  2703  00FD  3080               	subwf	btemp+1,w
  2704  00FE  027F               	skipz
  2705  00FF  1D03               	goto	u1155
  2706  0100  2903               	movlw	01h
  2707  0101  3001               	subwf	(dispLCD_num@div),w
  2708  0102  022F               u1155:
  2709  0103                     
  2710                           	skipnc
  2711  0103  1803               	goto	u1151
  2712  0104  2906               	goto	u1150
  2713  0105  2907               u1151:
  2714  0106                     	goto	l150
  2715  0106  28BC               u1150:
  2716  0107                     	goto	l152
  2717  0107  2908               	
  2718                           l151:	
  2719  0108                     	line	199
  2720                           	
  2721                           l152:	
  2722  0108                     	return
  2723  0108  0008               	opt stack 0
  2724                           GLOBAL	__end_of_dispLCD_num
  2725                           	__end_of_dispLCD_num:
  2726  0109                     	signat	_dispLCD_num,16505
  2727                           	global	___awmod
  2728                           
  2729 ;; *************** function ___awmod *****************
  2730 ;; Defined at:
  2731 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  divisor         2    3[COMMON] int 
  2734 ;;  dividend        2    5[COMMON] int 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  sign            1    1[BANK0 ] unsigned char 
  2737 ;;  counter         1    0[BANK0 ] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2    3[COMMON] int 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2747 ;;      Params:         4       0       0       0       0
  2748 ;;      Locals:         0       2       0       0       0
  2749 ;;      Temps:          1       0       0       0       0
  2750 ;;      Totals:         5       2       0       0       0
  2751 ;;Total ram usage:        7 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    2
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_dispLCD_num
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  2761                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2762                           	line	5
  2763                           global __ptext10
  2764                           __ptext10:	;psect for function ___awmod
  2765  028C                     psect	text10
  2766                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2767                           	line	5
  2768                           	global	__size_of___awmod
  2769                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  2770  0065                     	
  2771                           ___awmod:	
  2772  028C                     ;incstack = 0
  2773                           	opt	stack 4
  2774                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2775                           	line	12
  2776                           	
  2777                           l1346:	
  2778  028C                     	bcf	status, 5	;RP0=0, select bank0
  2779  028C  1283               	bcf	status, 6	;RP1=0, select bank0
  2780  028D  1303               	clrf	(___awmod@sign)
  2781  028E  01A1               	line	13
  2782                           	
  2783                           l1348:	
  2784  028F                     	btfss	(___awmod@dividend+1),7
  2785  028F  1FF6               	goto	u971
  2786  0290  2A92               	goto	u970
  2787  0291  2A93               u971:
  2788  0292                     	goto	l1354
  2789  0292  2A9B               u970:
  2790  0293                     	line	14
  2791                           	
  2792                           l1350:	
  2793  0293                     	comf	(___awmod@dividend),f
  2794  0293  09F5               	comf	(___awmod@dividend+1),f
  2795  0294  09F6               	incf	(___awmod@dividend),f
  2796  0295  0AF5               	skipnz
  2797  0296  1903               	incf	(___awmod@dividend+1),f
  2798  0297  0AF6               	line	15
  2799                           	
  2800                           l1352:	
  2801  0298                     	clrf	(___awmod@sign)
  2802  0298  01A1               	incf	(___awmod@sign),f
  2803  0299  0AA1               	goto	l1354
  2804  029A  2A9B               	line	16
  2805                           	
  2806                           l403:	
  2807  029B                     	line	17
  2808                           	
  2809                           l1354:	
  2810  029B                     	btfss	(___awmod@divisor+1),7
  2811  029B  1FF4               	goto	u981
  2812  029C  2A9E               	goto	u980
  2813  029D  2A9F               u981:
  2814  029E                     	goto	l1358
  2815  029E  2AA5               u980:
  2816  029F                     	line	18
  2817                           	
  2818                           l1356:	
  2819  029F                     	comf	(___awmod@divisor),f
  2820  029F  09F3               	comf	(___awmod@divisor+1),f
  2821  02A0  09F4               	incf	(___awmod@divisor),f
  2822  02A1  0AF3               	skipnz
  2823  02A2  1903               	incf	(___awmod@divisor+1),f
  2824  02A3  0AF4               	goto	l1358
  2825  02A4  2AA5               	
  2826                           l404:	
  2827  02A5                     	line	19
  2828                           	
  2829                           l1358:	
  2830  02A5                     	movf	((___awmod@divisor)),w
  2831  02A5  0873               iorwf	((___awmod@divisor+1)),w
  2832  02A6  0474               	btfsc	status,2
  2833  02A7  1903               	goto	u991
  2834  02A8  2AAA               	goto	u990
  2835  02A9  2AAB               u991:
  2836  02AA                     	goto	l1376
  2837  02AA  2AE0               u990:
  2838  02AB                     	line	20
  2839                           	
  2840                           l1360:	
  2841  02AB                     	clrf	(___awmod@counter)
  2842  02AB  01A0               	incf	(___awmod@counter),f
  2843  02AC  0AA0               	line	21
  2844                           	goto	l1366
  2845  02AD  2ABA               	
  2846                           l407:	
  2847  02AE                     	line	22
  2848                           	
  2849                           l1362:	
  2850  02AE                     	movlw	01h
  2851  02AE  3001               	
  2852                           u1005:
  2853  02AF                     	clrc
  2854  02AF  1003               	rlf	(___awmod@divisor),f
  2855  02B0  0DF3               	rlf	(___awmod@divisor+1),f
  2856  02B1  0DF4               	addlw	-1
  2857  02B2  3EFF               	skipz
  2858  02B3  1D03               	goto	u1005
  2859  02B4  2AAF               	line	23
  2860                           	
  2861                           l1364:	
  2862  02B5                     	movlw	low(01h)
  2863  02B5  3001               	movwf	(??___awmod+0)+0
  2864  02B6  00F7               	movf	(??___awmod+0)+0,w
  2865  02B7  0877               	addwf	(___awmod@counter),f
  2866  02B8  07A0               	goto	l1366
  2867  02B9  2ABA               	line	24
  2868                           	
  2869                           l406:	
  2870  02BA                     	line	21
  2871                           	
  2872                           l1366:	
  2873  02BA                     	btfss	(___awmod@divisor+1),(15)&7
  2874  02BA  1FF4               	goto	u1011
  2875  02BB  2ABD               	goto	u1010
  2876  02BC  2ABE               u1011:
  2877  02BD                     	goto	l1362
  2878  02BD  2AAE               u1010:
  2879  02BE                     	goto	l1368
  2880  02BE  2AC0               	
  2881                           l408:	
  2882  02BF                     	goto	l1368
  2883  02BF  2AC0               	line	25
  2884                           	
  2885                           l409:	
  2886  02C0                     	line	26
  2887                           	
  2888                           l1368:	
  2889  02C0                     	movf	(___awmod@divisor+1),w
  2890  02C0  0874               	subwf	(___awmod@dividend+1),w
  2891  02C1  0276               	skipz
  2892  02C2  1D03               	goto	u1025
  2893  02C3  2AC6               	movf	(___awmod@divisor),w
  2894  02C4  0873               	subwf	(___awmod@dividend),w
  2895  02C5  0275               u1025:
  2896  02C6                     	skipc
  2897  02C6  1C03               	goto	u1021
  2898  02C7  2AC9               	goto	u1020
  2899  02C8  2ACA               u1021:
  2900  02C9                     	goto	l1372
  2901  02C9  2AD1               u1020:
  2902  02CA                     	line	27
  2903                           	
  2904                           l1370:	
  2905  02CA                     	movf	(___awmod@divisor),w
  2906  02CA  0873               	subwf	(___awmod@dividend),f
  2907  02CB  02F5               	movf	(___awmod@divisor+1),w
  2908  02CC  0874               	skipc
  2909  02CD  1C03               	decf	(___awmod@dividend+1),f
  2910  02CE  03F6               	subwf	(___awmod@dividend+1),f
  2911  02CF  02F6               	goto	l1372
  2912  02D0  2AD1               	
  2913                           l410:	
  2914  02D1                     	line	28
  2915                           	
  2916                           l1372:	
  2917  02D1                     	movlw	01h
  2918  02D1  3001               	
  2919                           u1035:
  2920  02D2                     	clrc
  2921  02D2  1003               	rrf	(___awmod@divisor+1),f
  2922  02D3  0CF4               	rrf	(___awmod@divisor),f
  2923  02D4  0CF3               	addlw	-1
  2924  02D5  3EFF               	skipz
  2925  02D6  1D03               	goto	u1035
  2926  02D7  2AD2               	line	29
  2927                           	
  2928                           l1374:	
  2929  02D8                     	movlw	01h
  2930  02D8  3001               	subwf	(___awmod@counter),f
  2931  02D9  02A0               	btfss	status,2
  2932  02DA  1D03               	goto	u1041
  2933  02DB  2ADD               	goto	u1040
  2934  02DC  2ADE               u1041:
  2935  02DD                     	goto	l1368
  2936  02DD  2AC0               u1040:
  2937  02DE                     	goto	l1376
  2938  02DE  2AE0               	
  2939                           l411:	
  2940  02DF                     	goto	l1376
  2941  02DF  2AE0               	line	30
  2942                           	
  2943                           l405:	
  2944  02E0                     	line	31
  2945                           	
  2946                           l1376:	
  2947  02E0                     	movf	((___awmod@sign)),w
  2948  02E0  0821               	btfsc	status,2
  2949  02E1  1903               	goto	u1051
  2950  02E2  2AE4               	goto	u1050
  2951  02E3  2AE5               u1051:
  2952  02E4                     	goto	l1380
  2953  02E4  2AEB               u1050:
  2954  02E5                     	line	32
  2955                           	
  2956                           l1378:	
  2957  02E5                     	comf	(___awmod@dividend),f
  2958  02E5  09F5               	comf	(___awmod@dividend+1),f
  2959  02E6  09F6               	incf	(___awmod@dividend),f
  2960  02E7  0AF5               	skipnz
  2961  02E8  1903               	incf	(___awmod@dividend+1),f
  2962  02E9  0AF6               	goto	l1380
  2963  02EA  2AEB               	
  2964                           l412:	
  2965  02EB                     	line	33
  2966                           	
  2967                           l1380:	
  2968  02EB                     	movf	(___awmod@dividend+1),w
  2969  02EB  0876               	movwf	(?___awmod+1)
  2970  02EC  00F4               	movf	(___awmod@dividend),w
  2971  02ED  0875               	movwf	(?___awmod)
  2972  02EE  00F3               	goto	l413
  2973  02EF  2AF0               	
  2974                           l1382:	
  2975  02F0                     	line	34
  2976                           	
  2977                           l413:	
  2978  02F0                     	return
  2979  02F0  0008               	opt stack 0
  2980                           GLOBAL	__end_of___awmod
  2981                           	__end_of___awmod:
  2982  02F1                     	signat	___awmod,8314
  2983                           	global	___awdiv
  2984                           
  2985 ;; *************** function ___awdiv *****************
  2986 ;; Defined at:
  2987 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  divisor         2    5[COMMON] int 
  2990 ;;  dividend        2    7[COMMON] int 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  quotient        2    3[BANK0 ] int 
  2993 ;;  sign            1    2[BANK0 ] unsigned char 
  2994 ;;  counter         1    1[BANK0 ] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2    5[COMMON] int 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         4       0       0       0       0
  3005 ;;      Locals:         0       4       0       0       0
  3006 ;;      Temps:          0       1       0       0       0
  3007 ;;      Totals:         4       5       0       0       0
  3008 ;;Total ram usage:        9 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    2
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;;		_dispLCD_num
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  3019                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3020                           	line	5
  3021                           global __ptext11
  3022                           __ptext11:	;psect for function ___awdiv
  3023  0219                     psect	text11
  3024                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3025                           	line	5
  3026                           	global	__size_of___awdiv
  3027                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3028  0073                     	
  3029                           ___awdiv:	
  3030  0219                     ;incstack = 0
  3031                           	opt	stack 4
  3032                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3033                           	line	13
  3034                           	
  3035                           l1302:	
  3036  0219                     	bcf	status, 5	;RP0=0, select bank0
  3037  0219  1283               	bcf	status, 6	;RP1=0, select bank0
  3038  021A  1303               	clrf	(___awdiv@sign)
  3039  021B  01A2               	line	14
  3040                           	
  3041                           l1304:	
  3042  021C                     	btfss	(___awdiv@divisor+1),7
  3043  021C  1FF6               	goto	u871
  3044  021D  2A1F               	goto	u870
  3045  021E  2A20               u871:
  3046  021F                     	goto	l1310
  3047  021F  2A28               u870:
  3048  0220                     	line	15
  3049                           	
  3050                           l1306:	
  3051  0220                     	comf	(___awdiv@divisor),f
  3052  0220  09F5               	comf	(___awdiv@divisor+1),f
  3053  0221  09F6               	incf	(___awdiv@divisor),f
  3054  0222  0AF5               	skipnz
  3055  0223  1903               	incf	(___awdiv@divisor+1),f
  3056  0224  0AF6               	line	16
  3057                           	
  3058                           l1308:	
  3059  0225                     	clrf	(___awdiv@sign)
  3060  0225  01A2               	incf	(___awdiv@sign),f
  3061  0226  0AA2               	goto	l1310
  3062  0227  2A28               	line	17
  3063                           	
  3064                           l390:	
  3065  0228                     	line	18
  3066                           	
  3067                           l1310:	
  3068  0228                     	btfss	(___awdiv@dividend+1),7
  3069  0228  1FF8               	goto	u881
  3070  0229  2A2B               	goto	u880
  3071  022A  2A2C               u881:
  3072  022B                     	goto	l1316
  3073  022B  2A36               u880:
  3074  022C                     	line	19
  3075                           	
  3076                           l1312:	
  3077  022C                     	comf	(___awdiv@dividend),f
  3078  022C  09F7               	comf	(___awdiv@dividend+1),f
  3079  022D  09F8               	incf	(___awdiv@dividend),f
  3080  022E  0AF7               	skipnz
  3081  022F  1903               	incf	(___awdiv@dividend+1),f
  3082  0230  0AF8               	line	20
  3083                           	
  3084                           l1314:	
  3085  0231                     	movlw	low(01h)
  3086  0231  3001               	movwf	(??___awdiv+0)+0
  3087  0232  00A0               	movf	(??___awdiv+0)+0,w
  3088  0233  0820               	xorwf	(___awdiv@sign),f
  3089  0234  06A2               	goto	l1316
  3090  0235  2A36               	line	21
  3091                           	
  3092                           l391:	
  3093  0236                     	line	22
  3094                           	
  3095                           l1316:	
  3096  0236                     	clrf	(___awdiv@quotient)
  3097  0236  01A3               	clrf	(___awdiv@quotient+1)
  3098  0237  01A4               	line	23
  3099                           	
  3100                           l1318:	
  3101  0238                     	movf	((___awdiv@divisor)),w
  3102  0238  0875               iorwf	((___awdiv@divisor+1)),w
  3103  0239  0476               	btfsc	status,2
  3104  023A  1903               	goto	u891
  3105  023B  2A3D               	goto	u890
  3106  023C  2A3E               u891:
  3107  023D                     	goto	l1338
  3108  023D  2A7B               u890:
  3109  023E                     	line	24
  3110                           	
  3111                           l1320:	
  3112  023E                     	clrf	(___awdiv@counter)
  3113  023E  01A1               	incf	(___awdiv@counter),f
  3114  023F  0AA1               	line	25
  3115                           	goto	l1326
  3116  0240  2A4D               	
  3117                           l394:	
  3118  0241                     	line	26
  3119                           	
  3120                           l1322:	
  3121  0241                     	movlw	01h
  3122  0241  3001               	
  3123                           u905:
  3124  0242                     	clrc
  3125  0242  1003               	rlf	(___awdiv@divisor),f
  3126  0243  0DF5               	rlf	(___awdiv@divisor+1),f
  3127  0244  0DF6               	addlw	-1
  3128  0245  3EFF               	skipz
  3129  0246  1D03               	goto	u905
  3130  0247  2A42               	line	27
  3131                           	
  3132                           l1324:	
  3133  0248                     	movlw	low(01h)
  3134  0248  3001               	movwf	(??___awdiv+0)+0
  3135  0249  00A0               	movf	(??___awdiv+0)+0,w
  3136  024A  0820               	addwf	(___awdiv@counter),f
  3137  024B  07A1               	goto	l1326
  3138  024C  2A4D               	line	28
  3139                           	
  3140                           l393:	
  3141  024D                     	line	25
  3142                           	
  3143                           l1326:	
  3144  024D                     	btfss	(___awdiv@divisor+1),(15)&7
  3145  024D  1FF6               	goto	u911
  3146  024E  2A50               	goto	u910
  3147  024F  2A51               u911:
  3148  0250                     	goto	l1322
  3149  0250  2A41               u910:
  3150  0251                     	goto	l1328
  3151  0251  2A53               	
  3152                           l395:	
  3153  0252                     	goto	l1328
  3154  0252  2A53               	line	29
  3155                           	
  3156                           l396:	
  3157  0253                     	line	30
  3158                           	
  3159                           l1328:	
  3160  0253                     	movlw	01h
  3161  0253  3001               	
  3162                           u925:
  3163  0254                     	clrc
  3164  0254  1003               	rlf	(___awdiv@quotient),f
  3165  0255  0DA3               	rlf	(___awdiv@quotient+1),f
  3166  0256  0DA4               	addlw	-1
  3167  0257  3EFF               	skipz
  3168  0258  1D03               	goto	u925
  3169  0259  2A54               	line	31
  3170                           	movf	(___awdiv@divisor+1),w
  3171  025A  0876               	subwf	(___awdiv@dividend+1),w
  3172  025B  0278               	skipz
  3173  025C  1D03               	goto	u935
  3174  025D  2A60               	movf	(___awdiv@divisor),w
  3175  025E  0875               	subwf	(___awdiv@dividend),w
  3176  025F  0277               u935:
  3177  0260                     	skipc
  3178  0260  1C03               	goto	u931
  3179  0261  2A63               	goto	u930
  3180  0262  2A64               u931:
  3181  0263                     	goto	l1334
  3182  0263  2A6C               u930:
  3183  0264                     	line	32
  3184                           	
  3185                           l1330:	
  3186  0264                     	movf	(___awdiv@divisor),w
  3187  0264  0875               	subwf	(___awdiv@dividend),f
  3188  0265  02F7               	movf	(___awdiv@divisor+1),w
  3189  0266  0876               	skipc
  3190  0267  1C03               	decf	(___awdiv@dividend+1),f
  3191  0268  03F8               	subwf	(___awdiv@dividend+1),f
  3192  0269  02F8               	line	33
  3193                           	
  3194                           l1332:	
  3195  026A                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3196  026A  1423               	goto	l1334
  3197  026B  2A6C               	line	34
  3198                           	
  3199                           l397:	
  3200  026C                     	line	35
  3201                           	
  3202                           l1334:	
  3203  026C                     	movlw	01h
  3204  026C  3001               	
  3205                           u945:
  3206  026D                     	clrc
  3207  026D  1003               	rrf	(___awdiv@divisor+1),f
  3208  026E  0CF6               	rrf	(___awdiv@divisor),f
  3209  026F  0CF5               	addlw	-1
  3210  0270  3EFF               	skipz
  3211  0271  1D03               	goto	u945
  3212  0272  2A6D               	line	36
  3213                           	
  3214                           l1336:	
  3215  0273                     	movlw	01h
  3216  0273  3001               	subwf	(___awdiv@counter),f
  3217  0274  02A1               	btfss	status,2
  3218  0275  1D03               	goto	u951
  3219  0276  2A78               	goto	u950
  3220  0277  2A79               u951:
  3221  0278                     	goto	l1328
  3222  0278  2A53               u950:
  3223  0279                     	goto	l1338
  3224  0279  2A7B               	
  3225                           l398:	
  3226  027A                     	goto	l1338
  3227  027A  2A7B               	line	37
  3228                           	
  3229                           l392:	
  3230  027B                     	line	38
  3231                           	
  3232                           l1338:	
  3233  027B                     	movf	((___awdiv@sign)),w
  3234  027B  0822               	btfsc	status,2
  3235  027C  1903               	goto	u961
  3236  027D  2A7F               	goto	u960
  3237  027E  2A80               u961:
  3238  027F                     	goto	l1342
  3239  027F  2A86               u960:
  3240  0280                     	line	39
  3241                           	
  3242                           l1340:	
  3243  0280                     	comf	(___awdiv@quotient),f
  3244  0280  09A3               	comf	(___awdiv@quotient+1),f
  3245  0281  09A4               	incf	(___awdiv@quotient),f
  3246  0282  0AA3               	skipnz
  3247  0283  1903               	incf	(___awdiv@quotient+1),f
  3248  0284  0AA4               	goto	l1342
  3249  0285  2A86               	
  3250                           l399:	
  3251  0286                     	line	40
  3252                           	
  3253                           l1342:	
  3254  0286                     	movf	(___awdiv@quotient+1),w
  3255  0286  0824               	movwf	(?___awdiv+1)
  3256  0287  00F6               	movf	(___awdiv@quotient),w
  3257  0288  0823               	movwf	(?___awdiv)
  3258  0289  00F5               	goto	l400
  3259  028A  2A8B               	
  3260                           l1344:	
  3261  028B                     	line	41
  3262                           	
  3263                           l400:	
  3264  028B                     	return
  3265  028B  0008               	opt stack 0
  3266                           GLOBAL	__end_of___awdiv
  3267                           	__end_of___awdiv:
  3268  028C                     	signat	___awdiv,8314
  3269                           	global	_dispLCD_init
  3270                           
  3271 ;; *************** function _dispLCD_init *****************
  3272 ;; Defined at:
  3273 ;;		line 124 in file "lcd.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;		None
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;		None
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0, pclath, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3287 ;;      Params:         0       0       0       0       0
  3288 ;;      Locals:         0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0
  3290 ;;      Totals:         0       0       0       0       0
  3291 ;;Total ram usage:        0 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    3
  3294 ;; This function calls:
  3295 ;;		_delay
  3296 ;;		_dispLCD_instReg
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3302                           	file	"lcd.c"
  3303                           	line	124
  3304                           global __ptext12
  3305                           __ptext12:	;psect for function _dispLCD_init
  3306  02F1                     psect	text12
  3307                           	file	"lcd.c"
  3308                           	line	124
  3309                           	global	__size_of_dispLCD_init
  3310                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  3311  0041                     	
  3312                           _dispLCD_init:	
  3313  02F1                     ;incstack = 0
  3314                           	opt	stack 4
  3315                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  3316                           	line	126
  3317                           	
  3318                           l1178:	
  3319  02F1                     ;lcd.c: 126:     delay(100);
  3320                           	movlw	064h
  3321  02F1  3064               	movwf	(delay@t)
  3322  02F2  00F3               	movlw	0
  3323  02F3  3000               	movwf	((delay@t))+1
  3324  02F4  00F4               	fcall	_delay
  3325  02F5  120A  118A  2417  120A  118A  	line	127
  3326                           	
  3327                           l1180:	
  3328  02FA                     ;lcd.c: 127:     TRISDbits.TRISD0 = 0;
  3329                           	bsf	status, 5	;RP0=1, select bank1
  3330  02FA  1683               	bcf	status, 6	;RP1=0, select bank1
  3331  02FB  1303               	bcf	(136)^080h,0	;volatile
  3332  02FC  1008               	line	128
  3333                           	
  3334                           l1182:	
  3335  02FD                     ;lcd.c: 128:     TRISDbits.TRISD1 = 0;
  3336                           	bcf	(136)^080h,1	;volatile
  3337  02FD  1088               	line	129
  3338                           	
  3339                           l1184:	
  3340  02FE                     ;lcd.c: 129:     TRISDbits.TRISD2 = 0;
  3341                           	bcf	(136)^080h,2	;volatile
  3342  02FE  1108               	line	130
  3343                           	
  3344                           l1186:	
  3345  02FF                     ;lcd.c: 130:     TRISDbits.TRISD3 = 0;
  3346                           	bcf	(136)^080h,3	;volatile
  3347  02FF  1188               	line	131
  3348                           	
  3349                           l1188:	
  3350  0300                     ;lcd.c: 131:     TRISDbits.TRISD4 = 0;
  3351                           	bcf	(136)^080h,4	;volatile
  3352  0300  1208               	line	132
  3353                           	
  3354                           l1190:	
  3355  0301                     ;lcd.c: 132:     TRISDbits.TRISD5 = 0;
  3356                           	bcf	(136)^080h,5	;volatile
  3357  0301  1288               	line	133
  3358                           	
  3359                           l1192:	
  3360  0302                     ;lcd.c: 133:     TRISDbits.TRISD6 = 1;
  3361                           	bsf	(136)^080h,6	;volatile
  3362  0302  1708               	line	134
  3363                           	
  3364                           l1194:	
  3365  0303                     ;lcd.c: 134:     TRISDbits.TRISD7 = 1;
  3366                           	bsf	(136)^080h,7	;volatile
  3367  0303  1788               	line	135
  3368                           ;lcd.c: 135:     delay(100);
  3369                           	movlw	064h
  3370  0304  3064               	movwf	(delay@t)
  3371  0305  00F3               	movlw	0
  3372  0306  3000               	movwf	((delay@t))+1
  3373  0307  00F4               	fcall	_delay
  3374  0308  120A  118A  2417  120A  118A  	line	136
  3375                           	
  3376                           l1196:	
  3377  030D                     ;lcd.c: 136:     LCDbits.EN = 1;
  3378                           	bcf	status, 5	;RP0=0, select bank0
  3379  030D  1283               	bcf	status, 6	;RP1=0, select bank0
  3380  030E  1303               	bsf	(8),5	;volatile
  3381  030F  1688               	line	137
  3382                           ;lcd.c: 137:     dispLCD_instReg( 0x20|0x00|0x08);
  3383                           	movlw	low(028h)
  3384  0310  3028               	fcall	_dispLCD_instReg
  3385  0311  120A  118A  21A0  120A  118A  	line	138
  3386                           ;lcd.c: 138:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  3387                           	movlw	low(0Ch)
  3388  0316  300C               	fcall	_dispLCD_instReg
  3389  0317  120A  118A  21A0  120A  118A  	line	139
  3390                           ;lcd.c: 139:     dispLCD_instReg( 0x01 );
  3391                           	movlw	low(01h)
  3392  031C  3001               	fcall	_dispLCD_instReg
  3393  031D  120A  118A  21A0  120A  118A  	line	140
  3394                           ;lcd.c: 140:     dispLCD_instReg( 0x02 );
  3395                           	movlw	low(02h)
  3396  0322  3002               	fcall	_dispLCD_instReg
  3397  0323  120A  118A  21A0  120A  118A  	line	141
  3398                           ;lcd.c: 141:     delay(100);
  3399                           	movlw	064h
  3400  0328  3064               	movwf	(delay@t)
  3401  0329  00F3               	movlw	0
  3402  032A  3000               	movwf	((delay@t))+1
  3403  032B  00F4               	fcall	_delay
  3404  032C  120A  118A  2417  120A  118A  	line	142
  3405                           	
  3406                           l129:	
  3407  0331                     	return
  3408  0331  0008               	opt stack 0
  3409                           GLOBAL	__end_of_dispLCD_init
  3410                           	__end_of_dispLCD_init:
  3411  0332                     	signat	_dispLCD_init,89
  3412                           	global	_delay
  3413                           
  3414 ;; *************** function _delay *****************
  3415 ;; Defined at:
  3416 ;;		line 12 in file "delay.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  t               2    3[COMMON] unsigned int 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3430 ;;      Params:         2       0       0       0       0
  3431 ;;      Locals:         0       0       0       0       0
  3432 ;;      Temps:          1       0       0       0       0
  3433 ;;      Totals:         3       0       0       0       0
  3434 ;;Total ram usage:        3 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    2
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_dispLCD_init
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3444                           	file	"delay.c"
  3445                           	line	12
  3446                           global __ptext13
  3447                           __ptext13:	;psect for function _delay
  3448  0417                     psect	text13
  3449                           	file	"delay.c"
  3450                           	line	12
  3451                           	global	__size_of_delay
  3452                           	__size_of_delay	equ	__end_of_delay-_delay
  3453  0017                     	
  3454                           _delay:	
  3455  0417                     ;incstack = 0
  3456                           	opt	stack 4
  3457                           ; Regs used in _delay: [wreg+status,2+status,0]
  3458                           	line	14
  3459                           	
  3460                           l1070:	
  3461  0417                     ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  3462                           	goto	l1074
  3463  0417  2C26               	
  3464                           l98:	
  3465  0418                     	line	16
  3466                           	
  3467                           l1072:	
  3468  0418                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));

  3469                           	opt asmopt_push
  3470                           opt asmopt_off
  3471                           	movlw	199
  3472  0418  30C7               movwf	((??_delay+0)+0),f
  3473  0419  00F5               	u1177:
  3474  041A                     	nop2
  3475  041A  2C1B               decfsz	(??_delay+0)+0,f
  3476  041B  0BF5               	goto	u1177
  3477  041C  2C1A               	nop2
  3478  041D  2C1E               	nop2
  3479  041E  2C1F               opt asmopt_pop
  3480                           
  3481                           	line	17
  3482                           ;delay.c: 17:         --t;
  3483                           	movlw	01h
  3484  041F  3001               	subwf	(delay@t),f
  3485  0420  02F3               	movlw	0
  3486  0421  3000               	skipc
  3487  0422  1C03               	decf	(delay@t+1),f
  3488  0423  03F4               	subwf	(delay@t+1),f
  3489  0424  02F4               	goto	l1074
  3490  0425  2C26               	line	18
  3491                           ;delay.c: 18:     }
  3492                           	
  3493                           l97:	
  3494  0426                     	line	14
  3495                           	
  3496                           l1074:	
  3497  0426                     ;delay.c: 14:     while( t )
  3498                           	movf	((delay@t)),w
  3499  0426  0873               iorwf	((delay@t+1)),w
  3500  0427  0474               	btfss	status,2
  3501  0428  1D03               	goto	u511
  3502  0429  2C2B               	goto	u510
  3503  042A  2C2C               u511:
  3504  042B                     	goto	l1072
  3505  042B  2C18               u510:
  3506  042C                     	goto	l100
  3507  042C  2C2D               	
  3508                           l99:	
  3509  042D                     	line	19
  3510                           	
  3511                           l100:	
  3512  042D                     	return
  3513  042D  0008               	opt stack 0
  3514                           GLOBAL	__end_of_delay
  3515                           	__end_of_delay:
  3516  042E                     	signat	_delay,4217
  3517                           	global	_dispLCD
  3518                           
  3519 ;; *************** function _dispLCD *****************
  3520 ;; Defined at:
  3521 ;;		line 145 in file "lcd.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  lin             1    wreg     unsigned char 
  3524 ;;  col             1    0[BANK0 ] unsigned char 
  3525 ;;  str             1    1[BANK0 ] PTR const unsigned char 
  3526 ;;		 -> STR_1(17), 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  lin             1    4[BANK0 ] unsigned char 
  3529 ;;  pos             1    3[BANK0 ] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       2       0       0       0
  3540 ;;      Locals:         0       2       0       0       0
  3541 ;;      Temps:          0       1       0       0       0
  3542 ;;      Totals:         0       5       0       0       0
  3543 ;;Total ram usage:        5 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    4
  3546 ;; This function calls:
  3547 ;;		_dispLCD_dataReg
  3548 ;;		_dispLCD_lincol
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  3554                           	file	"lcd.c"
  3555                           	line	145
  3556                           global __ptext14
  3557                           __ptext14:	;psect for function _dispLCD
  3558  0332                     psect	text14
  3559                           	file	"lcd.c"
  3560                           	line	145
  3561                           	global	__size_of_dispLCD
  3562                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
  3563  003B                     	
  3564                           _dispLCD:	
  3565  0332                     ;incstack = 0
  3566                           	opt	stack 3
  3567                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3568                           ;dispLCD@lin stored from wreg
  3569                           	bcf	status, 5	;RP0=0, select bank0
  3570  0332  1283               	bcf	status, 6	;RP1=0, select bank0
  3571  0333  1303               	movwf	(dispLCD@lin)
  3572  0334  00A4               	line	147
  3573                           	
  3574                           l1384:	
  3575  0335                     ;lcd.c: 145: void dispLCD( unsigned char lin, unsigned char col, const char * str );lcd.
                                 c: 146: {;lcd.c: 147:     char pos = col;
  3576                           	movf	(dispLCD@col),w
  3577  0335  0820               	movwf	(??_dispLCD+0)+0
  3578  0336  00A2               	movf	(??_dispLCD+0)+0,w
  3579  0337  0822               	movwf	(dispLCD@pos)
  3580  0338  00A3               	line	148
  3581                           	
  3582                           l1386:	
  3583  0339                     ;lcd.c: 148:     dispLCD_lincol( lin, col );
  3584                           	movf	(dispLCD@col),w
  3585  0339  0820               	movwf	(??_dispLCD+0)+0
  3586  033A  00A2               	movf	(??_dispLCD+0)+0,w
  3587  033B  0822               	movwf	(dispLCD_lincol@col)
  3588  033C  00F6               	movf	(dispLCD@lin),w
  3589  033D  0824               	fcall	_dispLCD_lincol
  3590  033E  120A  118A  242E  120A  118A  	line	150
  3591                           ;lcd.c: 150:     while( *str )
  3592                           	goto	l1394
  3593  0343  2B5D               	
  3594                           l133:	
  3595  0344                     	line	152
  3596                           	
  3597                           l1388:	
  3598  0344                     ;lcd.c: 151:     {;lcd.c: 152:         dispLCD_dataReg( *str );
  3599                           	bcf	status, 5	;RP0=0, select bank0
  3600  0344  1283               	bcf	status, 6	;RP1=0, select bank0
  3601  0345  1303               	movf	(dispLCD@str),w
  3602  0346  0821               	movwf	fsr0
  3603  0347  0084               	fcall	stringdir
  3604  0348  120A  118A  2400  120A  118A  	fcall	_dispLCD_dataReg
  3605  034D  120A  118A  236D  120A  118A  	line	153
  3606                           	
  3607                           l1390:	
  3608  0352                     ;lcd.c: 153:         ++str;
  3609                           	movlw	low(01h)
  3610  0352  3001               	bcf	status, 5	;RP0=0, select bank0
  3611  0353  1283               	bcf	status, 6	;RP1=0, select bank0
  3612  0354  1303               	movwf	(??_dispLCD+0)+0
  3613  0355  00A2               	movf	(??_dispLCD+0)+0,w
  3614  0356  0822               	addwf	(dispLCD@str),f
  3615  0357  07A1               	line	154
  3616                           	
  3617                           l1392:	
  3618  0358                     ;lcd.c: 154:         ++pos;
  3619                           	movlw	low(01h)
  3620  0358  3001               	movwf	(??_dispLCD+0)+0
  3621  0359  00A2               	movf	(??_dispLCD+0)+0,w
  3622  035A  0822               	addwf	(dispLCD@pos),f
  3623  035B  07A3               	goto	l1394
  3624  035C  2B5D               	line	155
  3625                           ;lcd.c: 155:     }
  3626                           	
  3627                           l132:	
  3628  035D                     	line	150
  3629                           	
  3630                           l1394:	
  3631  035D                     ;lcd.c: 150:     while( *str )
  3632                           	bcf	status, 5	;RP0=0, select bank0
  3633  035D  1283               	bcf	status, 6	;RP1=0, select bank0
  3634  035E  1303               	movf	(dispLCD@str),w
  3635  035F  0821               	movwf	fsr0
  3636  0360  0084               	fcall	stringdir
  3637  0361  120A  118A  2400  120A  118A  	xorlw	0
  3638  0366  3A00               	skipz
  3639  0367  1D03               	goto	u1061
  3640  0368  2B6A               	goto	u1060
  3641  0369  2B6B               u1061:
  3642  036A                     	goto	l1388
  3643  036A  2B44               u1060:
  3644  036B                     	goto	l135
  3645  036B  2B6C               	
  3646                           l134:	
  3647  036C                     	line	156
  3648                           	
  3649                           l135:	
  3650  036C                     	return
  3651  036C  0008               	opt stack 0
  3652                           GLOBAL	__end_of_dispLCD
  3653                           	__end_of_dispLCD:
  3654  036D                     	signat	_dispLCD,12409
  3655                           	global	_dispLCD_lincol
  3656                           
  3657 ;; *************** function _dispLCD_lincol *****************
  3658 ;; Defined at:
  3659 ;;		line 118 in file "lcd.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  lin             1    wreg     unsigned char 
  3662 ;;  col             1    6[COMMON] unsigned char 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  lin             1    8[COMMON] unsigned char 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0, pclath, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3674 ;;      Params:         1       0       0       0       0
  3675 ;;      Locals:         1       0       0       0       0
  3676 ;;      Temps:          1       0       0       0       0
  3677 ;;      Totals:         3       0       0       0       0
  3678 ;;Total ram usage:        3 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:    3
  3681 ;; This function calls:
  3682 ;;		_dispLCD_instReg
  3683 ;; This function is called by:
  3684 ;;		_dispLCD
  3685 ;;		_dispLCD_num
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  3689                           	line	118
  3690                           global __ptext15
  3691                           __ptext15:	;psect for function _dispLCD_lincol
  3692  042E                     psect	text15
  3693                           	file	"lcd.c"
  3694                           	line	118
  3695                           	global	__size_of_dispLCD_lincol
  3696                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  3697  0013                     	
  3698                           _dispLCD_lincol:	
  3699  042E                     ;incstack = 0
  3700                           	opt	stack 3
  3701                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  3702                           ;dispLCD_lincol@lin stored from wreg
  3703                           	movwf	(dispLCD_lincol@lin)
  3704  042E  00F8               	line	120
  3705                           	
  3706                           l1094:	
  3707  042F                     ;lcd.c: 118: void dispLCD_lincol( unsigned char lin, unsigned char col);lcd.c: 119: {;lc
                                 d.c: 120:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  3708                           	movf	(dispLCD_lincol@lin),w
  3709  042F  0878               	movwf	(??_dispLCD_lincol+0)+0
  3710  0430  00F7               	movlw	06h
  3711  0431  3006               u535:
  3712  0432                     	clrc
  3713  0432  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  3714  0433  0DF7               	addlw	-1
  3715  0434  3EFF               	skipz
  3716  0435  1D03               	goto	u535
  3717  0436  2C32               	movf	(dispLCD_lincol@col),w
  3718  0437  0876               	addwf	0+(??_dispLCD_lincol+0)+0,w
  3719  0438  0777               	andlw	07Fh
  3720  0439  397F               	addlw	080h
  3721  043A  3E80               	fcall	_dispLCD_instReg
  3722  043B  120A  118A  21A0  120A  118A  	line	121
  3723                           	
  3724                           l126:	
  3725  0440                     	return
  3726  0440  0008               	opt stack 0
  3727                           GLOBAL	__end_of_dispLCD_lincol
  3728                           	__end_of_dispLCD_lincol:
  3729  0441                     	signat	_dispLCD_lincol,8313
  3730                           	global	_dispLCD_instReg
  3731                           
  3732 ;; *************** function _dispLCD_instReg *****************
  3733 ;; Defined at:
  3734 ;;		line 69 in file "lcd.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  i               1    wreg     unsigned char 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  i               1    5[COMMON] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3748 ;;      Params:         0       0       0       0       0
  3749 ;;      Locals:         1       0       0       0       0
  3750 ;;      Temps:          2       0       0       0       0
  3751 ;;      Totals:         3       0       0       0       0
  3752 ;;Total ram usage:        3 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    2
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_dispLCD_lincol
  3759 ;;		_dispLCD_init
  3760 ;;		_dispLCD_clr
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  3764                           	line	69
  3765                           global __ptext16
  3766                           __ptext16:	;psect for function _dispLCD_instReg
  3767  01A0                     psect	text16
  3768                           	file	"lcd.c"
  3769                           	line	69
  3770                           	global	__size_of_dispLCD_instReg
  3771                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  3772  0079                     	
  3773                           _dispLCD_instReg:	
  3774  01A0                     ;incstack = 0
  3775                           	opt	stack 3
  3776                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  3777                           ;dispLCD_instReg@i stored from wreg
  3778                           	movwf	(dispLCD_instReg@i)
  3779  01A0  00F5               	line	71
  3780                           	
  3781                           l1026:	
  3782  01A1                     ;lcd.c: 69: void dispLCD_instReg( unsigned char i );lcd.c: 70: {;lcd.c: 71:     LCDbits.
                                 RS = 0;
  3783                           	bcf	status, 5	;RP0=0, select bank0
  3784  01A1  1283               	bcf	status, 6	;RP1=0, select bank0
  3785  01A2  1303               	bcf	(8),4	;volatile
  3786  01A3  1208               	line	72
  3787                           	
  3788                           l1028:	
  3789  01A4                     ;lcd.c: 72:     LCDbits.BUS = (i>>4);
  3790                           	movf	(dispLCD_instReg@i),w
  3791  01A4  0875               	movwf	(??_dispLCD_instReg+0)+0
  3792  01A5  00F3               	movlw	04h
  3793  01A6  3004               u445:
  3794  01A7                     	clrc
  3795  01A7  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  3796  01A8  0CF3               	addlw	-1
  3797  01A9  3EFF               	skipz
  3798  01AA  1D03               	goto	u445
  3799  01AB  29A7               	movf	(8),w	;volatile
  3800  01AC  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3801  01AD  0673               	andlw	not ((1<<4)-1)
  3802  01AE  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3803  01AF  0673               	movwf	(8)	;volatile
  3804  01B0  0088               	line	74
  3805                           	
  3806                           l1030:	
  3807  01B1                     ;lcd.c: 74:     LCDbits.EN = 0;
  3808                           	bcf	(8),5	;volatile
  3809  01B1  1288               	line	75
  3810                           ;lcd.c: 75:     if( i == 0x01 || i == 0x02 )
  3811                           		decf	((dispLCD_instReg@i)),w
  3812  01B2  0375               	btfsc	status,2
  3813  01B3  1903               	goto	u451
  3814  01B4  29B6               	goto	u450
  3815  01B5  29B7               u451:
  3816  01B6                     	goto	l1034
  3817  01B6  29BE               u450:
  3818  01B7                     	
  3819                           l1032:	
  3820  01B7                     		movlw	2
  3821  01B7  3002               	xorwf	((dispLCD_instReg@i)),w
  3822  01B8  0675               	btfss	status,2
  3823  01B9  1D03               	goto	u461
  3824  01BA  29BC               	goto	u460
  3825  01BB  29BD               u461:
  3826  01BC                     	goto	l1036
  3827  01BC  29C8               u460:
  3828  01BD                     	goto	l1034
  3829  01BD  29BE               	
  3830                           l113:	
  3831  01BE                     	line	76
  3832                           	
  3833                           l1034:	
  3834  01BE                     ;lcd.c: 76:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3835                           	opt asmopt_push
  3836                           opt asmopt_off
  3837                           movlw	3
  3838  01BE  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  3839  01BF  00F4               	movlw	151
  3840  01C0  3097               movwf	((??_dispLCD_instReg+0)+0),f
  3841  01C1  00F3               	u1187:
  3842  01C2                     decfsz	((??_dispLCD_instReg+0)+0),f
  3843  01C2  0BF3               	goto	u1187
  3844  01C3  29C2               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  3845  01C4  0BF4               	goto	u1187
  3846  01C5  29C2               	nop2
  3847  01C6  29C7               opt asmopt_pop
  3848                           
  3849                           	goto	l1038
  3850  01C7  29CD               	line	77
  3851                           ;lcd.c: 77:     else
  3852                           	
  3853                           l111:	
  3854  01C8                     	line	78
  3855                           	
  3856                           l1036:	
  3857  01C8                     ;lcd.c: 78:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3858                           	opt asmopt_push
  3859                           opt asmopt_off
  3860                           	movlw	13
  3861  01C8  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3862  01C9  00F3               	u1197:
  3863  01CA                     decfsz	(??_dispLCD_instReg+0)+0,f
  3864  01CA  0BF3               	goto	u1197
  3865  01CB  29CA               opt asmopt_pop
  3866                           
  3867                           	goto	l1038
  3868  01CC  29CD               	
  3869                           l114:	
  3870  01CD                     	line	79
  3871                           	
  3872                           l1038:	
  3873  01CD                     ;lcd.c: 79:     LCDbits.EN = 1;
  3874                           	bcf	status, 5	;RP0=0, select bank0
  3875  01CD  1283               	bcf	status, 6	;RP1=0, select bank0
  3876  01CE  1303               	bsf	(8),5	;volatile
  3877  01CF  1688               	line	82
  3878                           	
  3879                           l1040:	
  3880  01D0                     ;lcd.c: 82:     if( (i & 0xF0) == (0x20 | 0x00) )
  3881                           	movlw	low(0F0h)
  3882  01D0  30F0               	andwf	(dispLCD_instReg@i),w
  3883  01D1  0575               	movwf	(??_dispLCD_instReg+0)+0
  3884  01D2  00F3               		movlw	32
  3885  01D3  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  3886  01D4  0673               	btfss	status,2
  3887  01D5  1D03               	goto	u471
  3888  01D6  29D8               	goto	u470
  3889  01D7  29D9               u471:
  3890  01D8                     	goto	l1052
  3891  01D8  29F0               u470:
  3892  01D9                     	line	84
  3893                           	
  3894                           l1042:	
  3895  01D9                     ;lcd.c: 83:     {;lcd.c: 84:         LCDbits.RS = 0;
  3896                           	bcf	(8),4	;volatile
  3897  01D9  1208               	line	85
  3898                           	
  3899                           l1044:	
  3900  01DA                     ;lcd.c: 85:         LCDbits.BUS = i>>4;
  3901                           	movf	(dispLCD_instReg@i),w
  3902  01DA  0875               	movwf	(??_dispLCD_instReg+0)+0
  3903  01DB  00F3               	movlw	04h
  3904  01DC  3004               u485:
  3905  01DD                     	clrc
  3906  01DD  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  3907  01DE  0CF3               	addlw	-1
  3908  01DF  3EFF               	skipz
  3909  01E0  1D03               	goto	u485
  3910  01E1  29DD               	movf	(8),w	;volatile
  3911  01E2  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3912  01E3  0673               	andlw	not ((1<<4)-1)
  3913  01E4  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3914  01E5  0673               	movwf	(8)	;volatile
  3915  01E6  0088               	line	86
  3916                           	
  3917                           l1046:	
  3918  01E7                     ;lcd.c: 86:         LCDbits.EN = 0;
  3919                           	bcf	(8),5	;volatile
  3920  01E7  1288               	line	87
  3921                           	
  3922                           l1048:	
  3923  01E8                     ;lcd.c: 87:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3924                           	opt asmopt_push
  3925                           opt asmopt_off
  3926                           	movlw	13
  3927  01E8  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3928  01E9  00F3               	u1207:
  3929  01EA                     decfsz	(??_dispLCD_instReg+0)+0,f
  3930  01EA  0BF3               	goto	u1207
  3931  01EB  29EA               opt asmopt_pop
  3932                           
  3933                           	line	88
  3934                           	
  3935                           l1050:	
  3936  01EC                     ;lcd.c: 88:         LCDbits.EN = 1;
  3937                           	bcf	status, 5	;RP0=0, select bank0
  3938  01EC  1283               	bcf	status, 6	;RP1=0, select bank0
  3939  01ED  1303               	bsf	(8),5	;volatile
  3940  01EE  1688               	goto	l1052
  3941  01EF  29F0               	line	89
  3942                           ;lcd.c: 89:     }
  3943                           	
  3944                           l115:	
  3945  01F0                     	line	91
  3946                           	
  3947                           l1052:	
  3948  01F0                     ;lcd.c: 91:     LCDbits.RS = 0;
  3949                           	bcf	(8),4	;volatile
  3950  01F0  1208               	line	92
  3951                           	
  3952                           l1054:	
  3953  01F1                     ;lcd.c: 92:     LCDbits.BUS = i & 0x0F;
  3954                           	movlw	low(0Fh)
  3955  01F1  300F               	andwf	(dispLCD_instReg@i),w
  3956  01F2  0575               	movwf	(??_dispLCD_instReg+0)+0
  3957  01F3  00F3               	movf	(8),w	;volatile
  3958  01F4  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3959  01F5  0673               	andlw	not ((1<<4)-1)
  3960  01F6  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3961  01F7  0673               	movwf	(8)	;volatile
  3962  01F8  0088               	line	93
  3963                           	
  3964                           l1056:	
  3965  01F9                     ;lcd.c: 93:     LCDbits.EN = 0;
  3966                           	bcf	(8),5	;volatile
  3967  01F9  1288               	line	94
  3968                           	
  3969                           l1058:	
  3970  01FA                     ;lcd.c: 94:     if( i == 0x01 || i == 0x02 )
  3971                           		decf	((dispLCD_instReg@i)),w
  3972  01FA  0375               	btfsc	status,2
  3973  01FB  1903               	goto	u491
  3974  01FC  29FE               	goto	u490
  3975  01FD  29FF               u491:
  3976  01FE                     	goto	l1062
  3977  01FE  2A06               u490:
  3978  01FF                     	
  3979                           l1060:	
  3980  01FF                     		movlw	2
  3981  01FF  3002               	xorwf	((dispLCD_instReg@i)),w
  3982  0200  0675               	btfss	status,2
  3983  0201  1D03               	goto	u501
  3984  0202  2A04               	goto	u500
  3985  0203  2A05               u501:
  3986  0204                     	goto	l1064
  3987  0204  2A10               u500:
  3988  0205                     	goto	l1062
  3989  0205  2A06               	
  3990                           l118:	
  3991  0206                     	line	95
  3992                           	
  3993                           l1062:	
  3994  0206                     ;lcd.c: 95:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3995                           	opt asmopt_push
  3996                           opt asmopt_off
  3997                           movlw	3
  3998  0206  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  3999  0207  00F4               	movlw	151
  4000  0208  3097               movwf	((??_dispLCD_instReg+0)+0),f
  4001  0209  00F3               	u1217:
  4002  020A                     decfsz	((??_dispLCD_instReg+0)+0),f
  4003  020A  0BF3               	goto	u1217
  4004  020B  2A0A               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  4005  020C  0BF4               	goto	u1217
  4006  020D  2A0A               	nop2
  4007  020E  2A0F               opt asmopt_pop
  4008                           
  4009                           	goto	l1066
  4010  020F  2A15               	line	96
  4011                           ;lcd.c: 96:     else
  4012                           	
  4013                           l116:	
  4014  0210                     	line	97
  4015                           	
  4016                           l1064:	
  4017  0210                     ;lcd.c: 97:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4018                           	opt asmopt_push
  4019                           opt asmopt_off
  4020                           	movlw	13
  4021  0210  300D               movwf	((??_dispLCD_instReg+0)+0),f
  4022  0211  00F3               	u1227:
  4023  0212                     decfsz	(??_dispLCD_instReg+0)+0,f
  4024  0212  0BF3               	goto	u1227
  4025  0213  2A12               opt asmopt_pop
  4026                           
  4027                           	goto	l1066
  4028  0214  2A15               	
  4029                           l119:	
  4030  0215                     	line	98
  4031                           	
  4032                           l1066:	
  4033  0215                     ;lcd.c: 98:     LCDbits.EN = 1;
  4034                           	bcf	status, 5	;RP0=0, select bank0
  4035  0215  1283               	bcf	status, 6	;RP1=0, select bank0
  4036  0216  1303               	bsf	(8),5	;volatile
  4037  0217  1688               	line	99
  4038                           	
  4039                           l120:	
  4040  0218                     	return
  4041  0218  0008               	opt stack 0
  4042                           GLOBAL	__end_of_dispLCD_instReg
  4043                           	__end_of_dispLCD_instReg:
  4044  0219                     	signat	_dispLCD_instReg,4217
  4045                           	global	_dispLCD_dataReg
  4046                           
  4047 ;; *************** function _dispLCD_dataReg *****************
  4048 ;; Defined at:
  4049 ;;		line 102 in file "lcd.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  d               1    wreg     unsigned char 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  d               1    4[COMMON] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4063 ;;      Params:         0       0       0       0       0
  4064 ;;      Locals:         1       0       0       0       0
  4065 ;;      Temps:          1       0       0       0       0
  4066 ;;      Totals:         2       0       0       0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    2
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_dispLCD
  4074 ;;		_dispLCD_num
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4078                           	line	102
  4079                           global __ptext17
  4080                           __ptext17:	;psect for function _dispLCD_dataReg
  4081  036D                     psect	text17
  4082                           	file	"lcd.c"
  4083                           	line	102
  4084                           	global	__size_of_dispLCD_dataReg
  4085                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  4086  002B                     	
  4087                           _dispLCD_dataReg:	
  4088  036D                     ;incstack = 0
  4089                           	opt	stack 4
  4090                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  4091                           ;dispLCD_dataReg@d stored from wreg
  4092                           	movwf	(dispLCD_dataReg@d)
  4093  036D  00F4               	line	104
  4094                           	
  4095                           l1076:	
  4096  036E                     ;lcd.c: 102: void dispLCD_dataReg( unsigned char d );lcd.c: 103: {;lcd.c: 104:     LCDbi
                                 ts.RS = 1;
  4097                           	bcf	status, 5	;RP0=0, select bank0
  4098  036E  1283               	bcf	status, 6	;RP1=0, select bank0
  4099  036F  1303               	bsf	(8),4	;volatile
  4100  0370  1608               	line	105
  4101                           	
  4102                           l1078:	
  4103  0371                     ;lcd.c: 105:     LCDbits.BUS = d >> 4;
  4104                           	movf	(dispLCD_dataReg@d),w
  4105  0371  0874               	movwf	(??_dispLCD_dataReg+0)+0
  4106  0372  00F3               	movlw	04h
  4107  0373  3004               u525:
  4108  0374                     	clrc
  4109  0374  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  4110  0375  0CF3               	addlw	-1
  4111  0376  3EFF               	skipz
  4112  0377  1D03               	goto	u525
  4113  0378  2B74               	movf	(8),w	;volatile
  4114  0379  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  4115  037A  0673               	andlw	not ((1<<4)-1)
  4116  037B  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  4117  037C  0673               	movwf	(8)	;volatile
  4118  037D  0088               	line	106
  4119                           	
  4120                           l1080:	
  4121  037E                     ;lcd.c: 106:     LCDbits.EN = 0;
  4122                           	bcf	(8),5	;volatile
  4123  037E  1288               	line	107
  4124                           	
  4125                           l1082:	
  4126  037F                     ;lcd.c: 107:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4127                           	opt asmopt_push
  4128                           opt asmopt_off
  4129                           	movlw	13
  4130  037F  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  4131  0380  00F3               	u1237:
  4132  0381                     decfsz	(??_dispLCD_dataReg+0)+0,f
  4133  0381  0BF3               	goto	u1237
  4134  0382  2B81               opt asmopt_pop
  4135                           
  4136                           	line	108
  4137                           	
  4138                           l1084:	
  4139  0383                     ;lcd.c: 108:     LCDbits.EN = 1;
  4140                           	bcf	status, 5	;RP0=0, select bank0
  4141  0383  1283               	bcf	status, 6	;RP1=0, select bank0
  4142  0384  1303               	bsf	(8),5	;volatile
  4143  0385  1688               	line	110
  4144                           	
  4145                           l1086:	
  4146  0386                     ;lcd.c: 110:     LCDbits.RS = 1;
  4147                           	bsf	(8),4	;volatile
  4148  0386  1608               	line	111
  4149                           	
  4150                           l1088:	
  4151  0387                     ;lcd.c: 111:     LCDbits.BUS = d & 0x0F;
  4152                           	movlw	low(0Fh)
  4153  0387  300F               	andwf	(dispLCD_dataReg@d),w
  4154  0388  0574               	movwf	(??_dispLCD_dataReg+0)+0
  4155  0389  00F3               	movf	(8),w	;volatile
  4156  038A  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  4157  038B  0673               	andlw	not ((1<<4)-1)
  4158  038C  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  4159  038D  0673               	movwf	(8)	;volatile
  4160  038E  0088               	line	112
  4161                           	
  4162                           l1090:	
  4163  038F                     ;lcd.c: 112:     LCDbits.EN = 0;
  4164                           	bcf	(8),5	;volatile
  4165  038F  1288               	line	113
  4166                           ;lcd.c: 113:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4167                           	opt asmopt_push
  4168                           opt asmopt_off
  4169                           	movlw	13
  4170  0390  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  4171  0391  00F3               	u1247:
  4172  0392                     decfsz	(??_dispLCD_dataReg+0)+0,f
  4173  0392  0BF3               	goto	u1247
  4174  0393  2B92               opt asmopt_pop
  4175                           
  4176                           	line	114
  4177                           	
  4178                           l1092:	
  4179  0394                     ;lcd.c: 114:     LCDbits.EN = 1;
  4180                           	bcf	status, 5	;RP0=0, select bank0
  4181  0394  1283               	bcf	status, 6	;RP1=0, select bank0
  4182  0395  1303               	bsf	(8),5	;volatile
  4183  0396  1688               	line	115
  4184                           	
  4185                           l123:	
  4186  0397                     	return
  4187  0397  0008               	opt stack 0
  4188                           GLOBAL	__end_of_dispLCD_dataReg
  4189                           	__end_of_dispLCD_dataReg:
  4190  0398                     	signat	_dispLCD_dataReg,4217
  4191                           	global	_irq
  4192                           
  4193 ;; *************** function _irq *****************
  4194 ;; Defined at:
  4195 ;;		line 17 in file "timer1.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, pclath, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4209 ;;      Params:         0       0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0
  4211 ;;      Temps:          2       0       0       0       0
  4212 ;;      Totals:         2       0       0       0       0
  4213 ;;Total ram usage:        2 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    1
  4216 ;; This function calls:
  4217 ;;		_intt1_1ms
  4218 ;; This function is called by:
  4219 ;;		Interrupt level 1
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  4223                           	file	"timer1.c"
  4224                           	line	17
  4225                           global __ptext18
  4226                           __ptext18:	;psect for function _irq
  4227  03D5                     psect	text18
  4228                           	file	"timer1.c"
  4229                           	line	17
  4230                           	global	__size_of_irq
  4231                           	__size_of_irq	equ	__end_of_irq-_irq
  4232  001A                     	
  4233                           _irq:	
  4234  03D5                     ;incstack = 0
  4235                           	opt	stack 3
  4236                           ; Regs used in _irq: [wreg+status,2+status,0+pclath+cstack]
  4237                           psect	intentry,class=CODE,delta=2
  4238                           global __pintentry
  4239                           __pintentry:
  4240  0004                     global interrupt_function
  4241                           interrupt_function:
  4242  0004                     	global saved_w
  4243                           	saved_w	set	btemp+0
  4244  007E                     	movwf	saved_w
  4245  0004  00FE               	swapf	status,w
  4246  0005  0E03               	movwf	(??_irq+0)
  4247  0006  00F1               	movf	pclath,w
  4248  0007  080A               	movwf	(??_irq+1)
  4249  0008  00F2               	ljmp	_irq
  4250  0009  120A  118A  2BD5   psect	text18
  4251                           	line	19
  4252                           	
  4253                           i1l1292:	
  4254  03D5                     ;timer1.c: 19:     if( PIE1bits.TMR1IE && PIR1bits.TMR1IF )
  4255                           	bsf	status, 5	;RP0=1, select bank1
  4256  03D5  1683               	bcf	status, 6	;RP1=0, select bank1
  4257  03D6  1303               	btfss	(140)^080h,0	;volatile
  4258  03D7  1C0C               	goto	u85_21
  4259  03D8  2BDA               	goto	u85_20
  4260  03D9  2BDB               u85_21:
  4261  03DA                     	goto	i1l73
  4262  03DA  2BE8               u85_20:
  4263  03DB                     	
  4264                           i1l1294:	
  4265  03DB                     	bcf	status, 5	;RP0=0, select bank0
  4266  03DB  1283               	bcf	status, 6	;RP1=0, select bank0
  4267  03DC  1303               	btfss	(12),0	;volatile
  4268  03DD  1C0C               	goto	u86_21
  4269  03DE  2BE0               	goto	u86_20
  4270  03DF  2BE1               u86_21:
  4271  03E0                     	goto	i1l73
  4272  03E0  2BE8               u86_20:
  4273  03E1                     	line	21
  4274                           	
  4275                           i1l1296:	
  4276  03E1                     ;timer1.c: 20:     {;timer1.c: 21:         PIR1bits.TMR1IF = 0;
  4277                           	bcf	(12),0	;volatile
  4278  03E1  100C               	line	22
  4279                           	
  4280                           i1l1298:	
  4281  03E2                     ;timer1.c: 22:         intt1_1ms();
  4282                           	fcall	_intt1_1ms
  4283  03E2  120A  118A  2398  120A  118A  	goto	i1l73
  4284  03E7  2BE8               	line	23
  4285                           ;timer1.c: 23:     }
  4286                           	
  4287                           i1l72:	
  4288  03E8                     	line	24
  4289                           	
  4290                           i1l73:	
  4291  03E8                     	movf	(??_irq+1),w
  4292  03E8  0872               	movwf	pclath
  4293  03E9  008A               	swapf	(??_irq+0)^0FFFFFF80h,w
  4294  03EA  0E71               	movwf	status
  4295  03EB  0083               	swapf	saved_w,f
  4296  03EC  0EFE               	swapf	saved_w,w
  4297  03ED  0E7E               	retfie
  4298  03EE  0009               	opt stack 0
  4299                           GLOBAL	__end_of_irq
  4300                           	__end_of_irq:
  4301  03EF                     	signat	_irq,89
  4302                           	global	_intt1_1ms
  4303                           
  4304 ;; *************** function _intt1_1ms *****************
  4305 ;; Defined at:
  4306 ;;		line 26 in file "timer1.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4320 ;;      Params:         0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0
  4322 ;;      Temps:          1       0       0       0       0
  4323 ;;      Totals:         1       0       0       0       0
  4324 ;;Total ram usage:        1 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_irq
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  4333                           	line	26
  4334                           global __ptext19
  4335                           __ptext19:	;psect for function _intt1_1ms
  4336  0398                     psect	text19
  4337                           	file	"timer1.c"
  4338                           	line	26
  4339                           	global	__size_of_intt1_1ms
  4340                           	__size_of_intt1_1ms	equ	__end_of_intt1_1ms-_intt1_1ms
  4341  0020                     	
  4342                           _intt1_1ms:	
  4343  0398                     ;incstack = 0
  4344                           	opt	stack 3
  4345                           ; Regs used in _intt1_1ms: [wreg+status,2]
  4346                           	line	28
  4347                           	
  4348                           i1l1266:	
  4349  0398                     ;timer1.c: 28:     TMR1H = ((65536-1000)>>8) & 0x00FF;
  4350                           	movlw	low(0FCh)
  4351  0398  30FC               	bcf	status, 5	;RP0=0, select bank0
  4352  0399  1283               	bcf	status, 6	;RP1=0, select bank0
  4353  039A  1303               	movwf	(15)	;volatile
  4354  039B  008F               	line	29
  4355                           ;timer1.c: 29:     TMR1L = (65536-1000) & 0x00FF;
  4356                           	movlw	low(018h)
  4357  039C  3018               	movwf	(14)	;volatile
  4358  039D  008E               	line	30
  4359                           ;timer1.c: 30:     if( ++t1cont >= t1final )
  4360                           	movlw	01h
  4361  039E  3001               	addwf	(_t1cont),f
  4362  039F  07B4               	skipnc
  4363  03A0  1803               	incf	(_t1cont+1),f
  4364  03A1  0AB5               	movlw	0
  4365  03A2  3000               	addwf	(_t1cont+1),f
  4366  03A3  07B5               	movf	((_t1cont+1)),w
  4367  03A4  0835               	xorlw	80h
  4368  03A5  3A80               	movwf	(??_intt1_1ms+0)+0
  4369  03A6  00F0               	movf	(_t1final+1),w
  4370  03A7  087A               	xorlw	80h
  4371  03A8  3A80               	subwf	(??_intt1_1ms+0)+0,w
  4372  03A9  0270               	skipz
  4373  03AA  1D03               	goto	u83_25
  4374  03AB  2BAE               	movf	(_t1final),w
  4375  03AC  0879               	subwf	((_t1cont)),w
  4376  03AD  0234               u83_25:
  4377  03AE                     
  4378                           	skipc
  4379  03AE  1C03               	goto	u83_21
  4380  03AF  2BB1               	goto	u83_20
  4381  03B0  2BB2               u83_21:
  4382  03B1                     	goto	i1l77
  4383  03B1  2BB7               u83_20:
  4384  03B2                     	line	32
  4385                           	
  4386                           i1l1268:	
  4387  03B2                     ;timer1.c: 31:     {;timer1.c: 32:         t1cont = 0;
  4388                           	bcf	status, 5	;RP0=0, select bank0
  4389  03B2  1283               	bcf	status, 6	;RP1=0, select bank0
  4390  03B3  1303               	clrf	(_t1cont)
  4391  03B4  01B4               	clrf	(_t1cont+1)
  4392  03B5  01B5               	goto	i1l77
  4393  03B6  2BB7               	line	33
  4394                           ;timer1.c: 33:     }
  4395                           	
  4396                           i1l76:	
  4397  03B7                     	line	34
  4398                           	
  4399                           i1l77:	
  4400  03B7                     	return
  4401  03B7  0008               	opt stack 0
  4402                           GLOBAL	__end_of_intt1_1ms
  4403                           	__end_of_intt1_1ms:
  4404  03B8                     	signat	_intt1_1ms,89
  4405                           global	___latbits
  4406                           ___latbits	equ	2
  4407  0002                     	global	btemp
  4408                           	btemp set 07Eh
  4409  007E                     
  4410                           	DABS	1,126,2	;btemp
  4411                           	global	wtemp0
  4412                           	wtemp0 set btemp+0
  4413  007E                     	end


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     20      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dispLCD@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _initTimer1->_setT1limite
    _dispLCD_num->___awdiv
    _dispLCD_num->_dispLCD_lincol
    ___awdiv->_statusT1limite
    _dispLCD_init->_delay
    _dispLCD_init->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg

Critical Paths under _irq in COMMON

    _irq->_intt1_1ms

Critical Paths under _main in BANK0

    _main->_dispLCD_num
    _dispLCD_num->___awdiv

Critical Paths under _irq in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _irq in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _irq in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _irq in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6284
                                             17 BANK0      3     3      0
                            ___awdiv
                            _dispLCD
                       _dispLCD_init
                        _dispLCD_num
                           _initLEDs
                         _initTimer1
                               _led1
                              _setT1
                        _setT1limite
                           _statusT1
                     _statusT1limite
                         _statusled1
 ---------------------------------------------------------------------------------
 (1) _statusled1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _statusT1limite                                       2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _statusT1                                             2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setT1                                                4     0      4      98
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _led1                                                 1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initTimer1                                           0     0      0     174
                        _setT1limite
 ---------------------------------------------------------------------------------
 (1) _setT1limite                                          4     0      4     174
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initLEDs                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_num                                         12     8      4    3291
                                              5 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                    _dispLCD_dataReg
                     _dispLCD_lincol
                           _statusT1 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                              5 COMMON     4     0      4
                                              0 BANK0      5     5      0
                     _statusT1limite (ARG)
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     427
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              5     3      2     760
                                              0 BANK0      5     3      2
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     372
                                              6 COMMON     3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     176
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      2     2      0      44
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _irq                                                  2     2      0       0
                                              1 COMMON     2     2      0
                          _intt1_1ms
 ---------------------------------------------------------------------------------
 (5) _intt1_1ms                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     _statusT1limite (ARG)
   _dispLCD
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_init
     _delay
     _dispLCD_instReg
   _dispLCD_num
     ___awdiv
       _statusT1limite (ARG)
     ___awmod
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
     _statusT1 (ARG)
   _initLEDs
   _initTimer1
     _setT1limite
   _led1
   _setT1
   _setT1limite
   _statusT1
   _statusT1limite
   _statusled1

 _irq (ROOT)
   _intt1_1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jun 18 13:47:17 2021

                       l9 0459                         pc 0002                        l12 0449  
                      l15 046B                        l42 0145                        l43 0194  
                      l44 019B                        l45 019C                        l46 019D  
                      l47 019D                        l80 0460                        l83 0451  
                      l92 03D4                        l86 0470                        l97 0426  
                      l89 0466                        l98 0418                        l99 042D  
            ___awdiv@sign 0022   __end_of_dispLCD_dataReg 0398                        fsr 0004  
                     l100 042D                       l111 01C8                       l120 0218  
                     l113 01BE                       l114 01CD                       l123 0397  
                     l115 01F0                       l116 0210                       l132 035D  
                     l140 0047                       l133 0344                       l141 0061  
                     l118 0206                       l126 0440                       l134 036C  
                     l150 00BC                       l142 0062                       l119 0215  
                     l135 036C                       l151 0108                       l143 0084  
                     l400 028B                       l152 0108                       l144 0090  
                     l129 0331                       l145 0085                       l410 02D1  
                     l138 0032                       l411 02DF                       l403 029B  
                     l147 00AD                       l139 0076                       l412 02EB  
                     l404 02A5                       l148 00AE                       l413 02F0  
                     l405 02E0                       l149 00BC                       l406 02BA  
                     l407 02AE                       l408 02BF                       l409 02C0  
                     l390 0228                       l391 0236                       l392 027B  
                     l393 024D                       l394 0241                       l395 0252  
                     l396 0253                       l397 026C                       l398 027A  
                     l399 0286                       l890 0467                       l892 046B  
                     l886 0452                       l888 0442                       u500 0205  
                     u501 0204                       u510 042C                       u511 042B  
                     u450 01B7                       u451 01B6                       u460 01BD  
                     u525 0374                       u461 01BC                       u445 01A7  
                     u470 01D9                       u471 01D8                       u535 0432  
                     u490 01FF                       u491 01FE                       u485 01DD  
                     u910 0251                       u911 0250                       u905 0242  
                     u930 0264                       u931 0263                       u925 0254  
                     u950 0279                       u870 0220                       u951 0278  
                     u935 0260                       u871 021F                       u960 0280  
                     u880 022C                       u961 027F                       u945 026D  
                     u881 022B                       u890 023E                       u970 0293  
                     u891 023D                       u971 0292                       u980 029F  
                     u981 029E                       u990 02AB                       u991 02AA  
                     _irq 03D5                       fsr0 0004   __size_of_statusT1limite 0006  
 __end_of_dispLCD_instReg 0219              ___awmod@sign 0021              __CFG_LVP$OFF 0000  
                    l1030 01B1                      l1040 01D0                      l1032 01B7  
                    l1200 03BF                      l1050 01EC                      l1042 01D9  
                    l1034 01BE                      l1026 01A1                      l1202 03CC  
                    l1210 045A                      l1060 01FF                      l1044 01DA  
                    l1052 01F0                      l1036 01C8                      l1028 01A4  
                    l1204 03CF                      l1062 0206                      l1054 01F1  
                    l1046 01E7                      l1038 01CD                      l1070 0417  
                    l1310 0228                      l1302 0219                      l1206 03D0  
                    l1080 037E                      l1064 0210                      l1056 01F9  
                    l1048 01E8                      l1072 0418                      l1320 023E  
                    l1312 022C                      l1304 021C                      l1400 002C  
                    l1208 03D3                      l1224 044A                      l1090 038F  
                    l1082 037F                      l1066 0215                      l1058 01FA  
                    l1074 0426                      l1330 0264                      l1322 0241  
                    l1314 0231                      l1306 0220                      l1410 005C  
                    l1402 0032                      l1226 0451                      l1092 0394  
                    l1084 0383                      l1076 036E                      l1180 02FA  
                    l1340 0280                      l1332 026A                      l1324 0248  
                    l1316 0236                      l1308 0225                      l1412 0062  
                    l1420 0090                      l1404 003C                      l1068 046C  
                    l1086 0386                      l1078 0371                      l1094 042F  
                    l1190 0301                      l1182 02FD                      l1342 0286  
                    l1334 026C                      l1326 024D                      l1318 0238  
                    l1350 0293                      l1422 00A4                      l1414 0076  
                    l1406 0042                      l1262 0461                      l1430 0109  
                    l1088 0387                      l1192 0302                      l1184 02FE  
                    l1344 028B                      l1336 0273                      l1328 0253  
                    l1360 02AB                      l1352 0298                      l1424 00AE  
                    l1416 0085                      l1408 0047                      l1264 0466  
                    l1440 012A                      l1432 010E                      l1194 0303  
                    l1186 02FF                      l1178 02F1                      l1338 027B  
                    l1370 02CA                      l1362 02AE                      l1354 029B  
                    l1346 028C                      l1426 00B5                      l1418 008B  
                    l1450 0194                      l1442 0137                      l1434 0113  
                    l1196 030D                      l1188 0300                      l1380 02EB  
                    l1372 02D1                      l1364 02B5                      l1356 029F  
                    l1348 028F                      l1428 00FA                      l1444 0145  
                    l1436 0118                      l1390 0352                      l1382 02F0  
                    l1374 02D8                      l1366 02BA                      l1358 02A5  
                    l1198 03B8                      l1446 0160                      l1438 011D  
                    l1392 0358                      l1384 0335                      l1368 02C0  
                    l1376 02E0                      l1448 018D                      l1394 035D  
                    l1386 0339                      l1378 02E5                      l1388 0344  
                    l1396 001E                      l1398 0027                      ?_irq 0070  
                    STR_1 0406                      u1010 02BE                      u1011 02BD  
                    u1020 02CA                      u1100 005C                      u1021 02C9  
                    u1005 02AF                      u1101 005B                      u1110 0083  
                    u1111 0082                      u1040 02DE                      u1120 00A4  
                    u1041 02DD                      u1025 02C6                      u1121 00A3  
                    u1050 02E5                      u1130 00AC                      u1051 02E4  
                    u1035 02D2                      u1131 00AB                      u1115 007F  
                    u1060 036B                      u1140 00B5                      u1061 036A  
                    u1141 00B4                      u1125 00A0                      u1150 0107  
                    u1070 0023                      u1207 01EA                      u1151 0106  
                    u1071 0021                      u1080 0024                      u1160 018D  
                    u1217 020A                      u1161 018C                      u1090 002C  
                    u1227 0212                      u1155 0103                      u1091 002B  
                    u1237 0381                      u1165 0189                      u1247 0392  
                    u1177 041A                      u1187 01C2                      u1197 01CA  
                    i1l72 03E8                      i1l73 03E8                      i1l76 03B7  
                    i1l77 03B7                      _led1 0441                      _main 0109  
                    btemp 007E                      start 000C                     ??_irq 0071  
                   ?_led1 0070                     ?_main 0070           __end_of___awdiv 028C  
           __CFG_WDTE$OFF 0000           __end_of___awmod 02F1           ___awdiv@divisor 0075  
         ___awdiv@counter 0021                     _TMR1H 000F                     _TMR1L 000E  
                   u83_20 03B2                     u83_21 03B1                     u83_25 03AE  
                   u85_20 03DB                     u85_21 03DA                     u86_20 03E1  
                   u86_21 03E0           __end_of_dispLCD 036D                     _delay 0417  
                   led1@b 0073                     _setT1 045A                     pclath 000A  
            ?_setT1limite 0073                     status 0003                     wtemp0 007E  
    __end_of_dispLCD_init 0332            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_led1 044A              __end_of_main 01A0          ?_dispLCD_dataReg 0070  
                  ??_led1 0073                    ??_main 0031      __size_of_dispLCD_num 00EE  
        ?_dispLCD_instReg 0070                    ?_delay 0073                    ?_setT1 0073  
        ___awdiv@dividend 0077                    i1l1266 0398                    i1l1268 03B2  
                  i1l1292 03D5                    i1l1294 03DB                    i1l1296 03E1  
                  i1l1298 03E2                    _t1cont 0034                 ??___awdiv 0020  
               ??___awmod 0077          __end_of_initLEDs 045A                    delay@t 0073  
        ___awdiv@quotient 0023           ___awmod@divisor 0073                 ??_dispLCD 0022  
         ___awmod@counter 0020            _statusT1limite 0461                    setT1@c 0073  
                  saved_w 007E          __end_of_statusT1 0452   __end_of__initialization 0017  
 __size_of_dispLCD_lincol 0013            __pcstackCOMMON 0070             __end_of_delay 042E  
           __end_of_setT1 0461    __end_of_statusT1limite 0467                   ??_delay 0075  
                 ??_setT1 0077                __pbssBANK0 0034     __size_of_dispLCD_init 0041  
      __size_of_intt1_1ms 0020      __size_of_setT1limite 0005                __pmaintext 0109  
              __pintentry 0004           ?_statusT1limite 0073                   _LCDbits 0008  
            _dispLCD_init 02F1                __stringtab 0400                 ?_initLEDs 0070  
                 _t1final 0079                _initTimer1 03B8                   ___awdiv 0219  
                 ___awmod 028C                 ?_statusT1 0073                   _dispLCD 0332  
                 __ptext0 0000                   __ptext1 0467                   __ptext2 0461  
                 __ptext3 044A                   __ptext4 045A                   __ptext5 0441  
                 __ptext6 03B8                   __ptext7 046C                   __ptext8 0452  
                 __ptext9 001B         __end_of_intt1_1ms 03B8                 _T1CONbits 0010  
            __size_of_irq 001A          ___awmod@dividend 0075      end_of_initialization 0017  
              ??_initLEDs 0073            dispLCD_num@col 0025            dispLCD_num@div 002F  
          dispLCD_num@lin 002C            dispLCD_num@tam 0028            dispLCD_num@num 0026  
          _dispLCD_lincol 042E                dispLCD@col 0020                dispLCD@lin 0024  
              dispLCD@pos 0023                dispLCD@str 0021                 _RCSTAbits 0018  
              ??_statusT1 0075             ??_dispLCD_num 0029                 _PORTCbits 0007  
               _TRISCbits 0087                 _TRISDbits 0088  __size_of_dispLCD_dataReg 002B  
  __end_of_dispLCD_lincol 0441  __size_of_dispLCD_instReg 0079                _statusled1 0467  
             ?_initTimer1 0070              setT1limite@d 0073       start_initialization 000F  
     __end_of_dispLCD_num 0109               __end_of_irq 03EF           ?_dispLCD_lincol 0076  
__CFG_FOSC$INTRC_NOCLKOUT 0000         dispLCD_lincol@col 0076         dispLCD_lincol@lin 0078  
        ??_statusT1limite 0075               __pbssCOMMON 0079                 ___latbits 0002  
           __pcstackBANK0 0020       __size_of_initTimer1 001D             ??_setT1limite 0077  
             ?_statusled1 0070         ??_dispLCD_dataReg 0073         __size_of_initLEDs 0008  
       ??_dispLCD_instReg 0073                  ?___awdiv 0075                  ?___awmod 0073  
             _dispLCD_num 001B                  ?_dispLCD 0020                 __pstrings 0400  
       __size_of_statusT1 0008                 _intt1_1ms 0398            __size_of_delay 0017  
          __size_of_setT1 0007         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C       __end_of_setT1limite 0471          dispLCD_dataReg@d 0074  
             __stringbase 0405       __size_of_statusled1 0005                ?_intt1_1ms 0070  
        dispLCD_instReg@i 0075              ??_initTimer1 0077          __size_of___awdiv 0073  
        __size_of___awmod 0065          dispLCD_num@sinal 002E        __end_of__stringtab 0406  
        __size_of_dispLCD 003B          ??_dispLCD_lincol 0077                  __ptext10 028C  
                __ptext11 0219                  __ptext12 02F1                  __ptext13 0417  
                __ptext14 0332                  __ptext15 042E                  __ptext16 01A0  
                __ptext17 036D                  __ptext18 03D5                  __ptext19 0398  
                _contador 0036                  _initLEDs 0452        __end_of_initTimer1 03D5  
             _setT1limite 046C             __size_of_led1 0009             __size_of_main 0097  
                _statusT1 044A                _INTCONbits 000B             ?_dispLCD_init 0070  
         _dispLCD_dataReg 036D               ??_intt1_1ms 0070           dispLCD_num@size 002D  
         _dispLCD_instReg 01A0                  intlevel1 0000              ??_statusled1 0073  
               stringcode 0400              ?_dispLCD_num 0025            ??_dispLCD_init 0076  
      __end_of_statusled1 046C                  stringdir 0400                  stringtab 0400  
